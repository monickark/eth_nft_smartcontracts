{
  "contractName": "PrimaryFixedPriceNFTMarketPlace",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "percentageValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct PrimaryFixedPriceNFTMarketPlace.Fee",
          "name": "_platformFee",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_rootAdmin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "percentageValue",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct PrimaryFixedPriceNFTMarketPlace.Fee",
          "name": "sellerProfit",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "percentageValue",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct PrimaryFixedPriceNFTMarketPlace.Fee",
          "name": "platformFee",
          "type": "tuple"
        }
      ],
      "name": "FundTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "NftSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FIXED_PRICE_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "percentageValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct PrimaryFixedPriceNFTMarketPlace.Fee",
          "name": "_platformFee",
          "type": "tuple"
        }
      ],
      "name": "PlatformFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "erc20Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyPercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            }
          ],
          "internalType": "struct PrimaryFixedPriceNFTMarketPlace.Metadata",
          "name": "_metadata",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_purchasingQuantity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "buyNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "erc20Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "royaltyReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyPercentage",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            }
          ],
          "internalType": "struct PrimaryFixedPriceNFTMarketPlace.Metadata",
          "name": "_metadata",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_purchasingQuantity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "fiatPurchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percentageValue\",\"type\":\"uint256\"}],\"internalType\":\"struct PrimaryFixedPriceNFTMarketPlace.Fee\",\"name\":\"_platformFee\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_rootAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percentageValue\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct PrimaryFixedPriceNFTMarketPlace.Fee\",\"name\":\"sellerProfit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percentageValue\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct PrimaryFixedPriceNFTMarketPlace.Fee\",\"name\":\"platformFee\",\"type\":\"tuple\"}],\"name\":\"FundTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"NftSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FIXED_PRICE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percentageValue\",\"type\":\"uint256\"}],\"internalType\":\"struct PrimaryFixedPriceNFTMarketPlace.Fee\",\"name\":\"_platformFee\",\"type\":\"tuple\"}],\"name\":\"PlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"IPFSHash\",\"type\":\"string\"}],\"internalType\":\"struct PrimaryFixedPriceNFTMarketPlace.Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_purchasingQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"buyNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"IPFSHash\",\"type\":\"string\"}],\"internalType\":\"struct PrimaryFixedPriceNFTMarketPlace.Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_purchasingQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"fiatPurchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"PlatformFee((address,uint256))\":{\"params\":{\"_platformFee\":\"Fee and fee receiver details\"}},\"buyNft((uint256,uint256,uint256,address,address,address,address,uint256,string),uint256,bytes)\":{\"params\":{\"_metadata\":\"Details of NFT in Metadata format\",\"_purchasingQuantity\":\"Purchasing amount of tokens\",\"_signature\":\"Metadata signature signed by admin during NFT creation on platform\"}},\"constructor\":{\"params\":{\"_platformFee\":\"Fee type. Fee percentage and Receiver address\",\"_rootAdmin\":\"Root admin address\"}},\"fiatPurchase((uint256,uint256,uint256,address,address,address,address,uint256,string),uint256,bytes,address)\":{\"params\":{\"_buyer\":\"NFT receiver address\",\"_metadata\":\"Details of NFT in Metadata format\",\"_purchasingQuantity\":\"Purchasing amount of tokens\",\"_signature\":\"Metadata signature signed by admin during NFT creation on platform\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface type\"},\"returns\":{\"_0\":\"boolean\"}}},\"title\":\"Primary Fixed Price NFT MarketPlace NFT MarketPlace contract to handle primary NFT sales with fixed price\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"FIXED_PRICE_TYPEHASH()\":{\"notice\":\"For signature verification of Fixed Price Typed Data\"},\"PlatformFee((address,uint256))\":{\"notice\":\"To set platform fee and fee receiver\"},\"buyNft((uint256,uint256,uint256,address,address,address,address,uint256,string),uint256,bytes)\":{\"notice\":\"buyNft         For buying NFT using native coin or ERC20 tokens.\"},\"constructor\":{\"notice\":\"Constructor Invokes EIP712 constructor with Domain - Used for signature verification\"},\"fiatPurchase((uint256,uint256,uint256,address,address,address,address,uint256,string),uint256,bytes,address)\":{\"notice\":\"This function can only be called by the admin account The fiat payment will be converted into to crypto via on-ramp and transferred to the contract for administering the payment split and token transfer on-chain IMPORTANT: It should only be called after the right amount of crypto/token should received in the contract The transfer should be confirmed off chain before calling this function\"},\"supportsInterface(bytes4)\":{\"notice\":\"Supports Interface         Function to check wether the contract support specific interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PrimaryFixedPriceNFTMarketPlace.sol\":\"PrimaryFixedPriceNFTMarketPlace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"project:/contracts/PrimaryFixedPriceNFTMarketPlace.sol\":{\"keccak256\":\"0xde050fcac3af0681fb5360f70a49c77d962060f9d85ee7c23c3095fdc6fdc413\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e9a5f676bc0a2499020c3762314eb696ba28e8d8dee255a14d58fac86b9bf75\",\"dweb:/ipfs/QmR36A7ik5UgkkfzQ1KkqA6viu47ZUiiKC4iBKS6DkQzs9\"]}},\"version\":1}",
  "bytecode": "0x610140604052600680546001600160401b03191667d9b67a2680ac58cd1790553480156200002c57600080fd5b5060405162002fbf38038062002fbf8339810160408190526200004f91620003ba565b604080518082018252601f81527f5072696d617279466978656450726963654e46544d61726b6574506c61636500602080830191825283518085019094526005845264302e302e3160d81b9084015260016002558151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200014b8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525062000167925084915050620001a8565b6200017460003362000238565b620001a07fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758262000238565b505062000443565b611388816020015111156200020e5760405162461bcd60e51b815260206004820152602260248201527f4665653a206d617820616c6c6f776564207065726563656e7461676520697320604482015261035360f41b606482015260840160405180910390fd5b8051600480546001600160a01b0319166001600160a01b0390921691909117905560200151600555565b62000244828262000248565b5050565b6200025f82826200028b60201b6200096f1760201c565b600082815260016020908152604090912062000286918390620009f36200032b821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000244576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620002e73390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000342836001600160a01b0384166200034b565b90505b92915050565b6000818152600183016020526040812054620003945750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000345565b50600062000345565b80516001600160a01b0381168114620003b557600080fd5b919050565b6000808284036060811215620003cf57600080fd5b6040811215620003de57600080fd5b50604080519081016001600160401b03811182821017156200041057634e487b7160e01b600052604160045260246000fd5b6040526200041e846200039d565b81526020848101519082015291506200043a604084016200039d565b90509250929050565b60805160a05160c05160e0516101005161012051612b2c620004936000396000611ed501526000611f2401526000611eff01526000611e5801526000611e8201526000611eac0152612b2c6000f3fe6080604052600436106100dd5760003560e01c80637a614c501161007f57806391d148541161005957806391d148541461027d578063a217fddf1461029d578063ca15c873146102b2578063d547741f146102d257600080fd5b80637a614c50146102125780637e71cdba146102325780639010d07c1461024557600080fd5b806336568abe116100bb57806336568abe146101775780633dd738bf1461019757806343fad86e146101cb57806375b238fc146101de57600080fd5b806301ffc9a7146100e2578063248a9ca3146101175780632f2ff15d14610155575b600080fd5b3480156100ee57600080fd5b506101026100fd36600461238b565b6102f2565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b506101476101323660046123b5565b60009081526020819052604090206001015490565b60405190815260200161010e565b34801561016157600080fd5b506101756101703660046123ea565b610303565b005b34801561018357600080fd5b506101756101923660046123ea565b61032d565b3480156101a357600080fd5b506101477f81ca36344a4f558cd4400c00adda99aa282181fb2be3acccdcb92f502e4e1d5581565b6101756101d93660046125dc565b6103b0565b3480156101ea57600080fd5b506101477fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b34801561021e57600080fd5b5061017561022d36600461264c565b6106d2565b6101756102403660046126a3565b610728565b34801561025157600080fd5b50610265610260366004612728565b6108eb565b6040516001600160a01b03909116815260200161010e565b34801561028957600080fd5b506101026102983660046123ea565b61090a565b3480156102a957600080fd5b50610147600081565b3480156102be57600080fd5b506101476102cd3660046123b5565b610933565b3480156102de57600080fd5b506101756102ed3660046123ea565b61094a565b60006102fd82610a08565b92915050565b60008281526020819052604090206001015461031e81610a2d565b6103288383610a37565b505050565b6001600160a01b03811633146103a25760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6103ac8282610a59565b5050565b60028054036104015760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610399565b60028055826104525760405162461bcd60e51b815260206004820152601c60248201527f4275794e6674733a2043616e277420427579205a65726f204e465473000000006044820152606401610399565b83604001518311156104a65760405162461bcd60e51b815260206004820152601d60248201527f4275794e6674733a2045786365656473206d6178207175616e746974790000006044820152606401610399565b6104dc846000015185602001518660400151876060015188608001518960a001518a60c001518b60e001518c6101000151610a7b565b6104e7848383610b5e565b5060208401516000906104fa9085610ec6565b606086015190915033906001600160a01b031661056657813410156105615760405162461bcd60e51b815260206004820152601a60248201527f4275794e6674733a20496e73756666696369656e742066756e640000000000006044820152606401610399565b6106ab565b6060860151604051636eb1769f60e11b81526001600160a01b0383811660048301523060248301528492169063dd62ed3e90604401602060405180830381865afa1580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc919061274a565b101561062a5760405162461bcd60e51b815260206004820152601760248201527f4275794e6674733a204c65737320616c6c6f77616e63650000000000000000006044820152606401610399565b60608601516040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a99190612763565b505b6106c586600001518760a00151886080015185858a610ed2565b5050600160025550505050565b6106da6110e1565b61071c5760405162461bcd60e51b81526020600482015260136024820152722932b9ba3934b1ba32b2103a379037bbb732b960691b6044820152606401610399565b61072581611123565b50565b6107306110e1565b6107725760405162461bcd60e51b81526020600482015260136024820152722932b9ba3934b1ba32b2103a379037bbb732b960691b6044820152606401610399565b60028054036107c35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610399565b60028055836108145760405162461bcd60e51b815260206004820152601c60248201527f4275794e6674733a2043616e277420427579205a65726f204e465473000000006044820152606401610399565b84604001518411156108685760405162461bcd60e51b815260206004820152601d60248201527f4275794e6674733a2045786365656473206d6178207175616e746974790000006044820152606401610399565b61089e856000015186602001518760400151886060015189608001518a60a001518b60c001518c60e001518d6101000151610a7b565b6108a9858484610b5e565b5060208501516000906108bc9086610ec6565b905060008290506108dd87600001518860a00151896080015185858b610ed2565b505060016002555050505050565b600082815260016020526040812061090390836111ae565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526001602052604081206102fd906111ba565b60008281526020819052604090206001015461096581610a2d565b6103288383610a59565b610979828261090a565b6103ac576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556109af3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610903836001600160a01b0384166111c4565b60006001600160e01b03198216635a05180f60e01b14806102fd57506102fd82611213565b6107258133611248565b610a41828261096f565b600082815260016020526040902061032890826109f3565b610a6382826112ac565b60008281526001602052604090206103289082611311565b6001600160a01b0380851660009081526003602090815260408083208d84528252808320938916835292905220600281015415610ad15787816002016000828254610ac6919061279b565b90915550610b529050565b89815560018101899055600281018890556003810180546001600160a01b03808a166001600160a01b03199283161790925560048301805489841690831617905560058301805488841690831617905560068301805492871692909116919091179055600781018390558151610b5090600883019060208501906122bc565b505b50505050505050505050565b600033610ba55760405162461bcd60e51b81526020600482015260156024820152744275794e6674733a205a65726f204164647265737360581b6044820152606401610399565b6000846040015111610c045760405162461bcd60e51b815260206004820152602260248201527f4275794e6674733a20576f6e7420416363657074205a65726f205175616e7469604482015261747960f01b6064820152608401610399565b610c118460a00151611326565b610c5d5760405162461bcd60e51b815260206004820152601c60248201527f4275794e6674733a20496e76616c6964204e46542041646472657373000000006044820152606401610399565b60808401516001600160a01b03163303610ccc5760405162461bcd60e51b815260206004820152602a60248201527f4275794e667473203a204f776e6572204973204e6f7420416c6c6f77656420546044820152696f20427579204e66747360b01b6064820152608401610399565b60808401516001600160a01b0316610d265760405162461bcd60e51b815260206004820152601760248201527f53656c6c204e6674733a205a65726f20416464726573730000000000000000006044820152606401610399565b610d2e6110e1565b15610d7b5760405162461bcd60e51b815260206004820152601e60248201527f4275794e6674733a2041646d696e2043616e6e6f7420427579204e66747300006044820152606401610399565b6000846020015111610dcf5760405162461bcd60e51b815260206004820152601f60248201527f4275794e6674733a20576f6e7420416363657074205a65726f205072696365006044820152606401610399565b6000610e27610deb866000015187608001518860a0015161147c565b85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061159d92505050565b9050610e537fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758261090a565b80610e645750610e6460008261090a565b610ebb5760405162461bcd60e51b815260206004820152602260248201527f4e4654205369676e617475726520766572696669636174696f6e206661696c65604482015261642160f01b6064820152608401610399565b506001949350505050565b600061090382846127b3565b6001600160a01b0380861660009081526003602090815260408083208a8452825280832088851684529091529020600681015460078201546008830180549394610fb29488948c948e948a949290921692909190610f2f906127d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5b906127d2565b8015610fa85780601f10610f7d57610100808354040283529160200191610fa8565b820191906000526020600020905b815481529060010190602001808311610f8b57829003601f168201915b50505050506115b2565b6003810154610fcc9085906001600160a01b0316876117c5565b818160020154610fdc919061280c565b60028201819055600003611074576001600160a01b0380871660009081526003602081815260408084208c85528252808420948a168452939052918120818155600181018290556002810182905591820180546001600160a01b031990811690915560048301805482169055600583018054821690556006830180549091169055600782018190556110716008830182612340565b50505b60018101546003820154604080519283526001600160a01b03918216602084015285821683820152606083018590525187821692918916918a917f8f52f68a77e5305f8c032bbf718984be7fc7e37748db7a9fd3690c9f64a6b0c79181900360800190a450505050505050565b600061110d7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361090a565b8061111e575061111e60003361090a565b905090565b611388816020015111156111845760405162461bcd60e51b815260206004820152602260248201527f4665653a206d617820616c6c6f776564207065726563656e7461676520697320604482015261035360f41b6064820152608401610399565b8051600480546001600160a01b0319166001600160a01b0390921691909117905560200151600555565b60006109038383611b08565b60006102fd825490565b600081815260018301602052604081205461120b575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102fd565b5060006102fd565b60006001600160e01b03198216637965db0b60e01b14806102fd57506301ffc9a760e01b6001600160e01b03198316146102fd565b611252828261090a565b6103ac5761126a816001600160a01b03166014611b32565b611275836020611b32565b604051602001611286929190612853565b60408051601f198184030181529082905262461bcd60e51b8252610399916004016128f4565b6112b6828261090a565b156103ac576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610903836001600160a01b038416611cce565b60006001600160a01b0382166113745760405162461bcd60e51b815260206004820152601360248201527269734e46543a205a65726f204164647265737360681b6044820152606401610399565b6006546040516301ffc9a760e01b81526001600160a01b038416916301ffc9a7916113b59160e01b906004016001600160e01b031991909116815260200190565b602060405180830381865afa1580156113d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f69190612763565b806102fd57506006546040516301ffc9a760e01b815264010000000090910460e01b6001600160e01b03191660048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa158015611458573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd9190612763565b6001600160a01b0380821660009081526003602081815260408084208885528252808420878616855290915280832060018101546002820154938201546004830154600584015460068501546007860154965198999598611594987f81ca36344a4f558cd4400c00adda99aa282181fb2be3acccdcb92f502e4e1d55988f989196821695821694821693909116916115189060088d0190612907565b60408051918290038220602083019b909b52810198909852606088019690965260808701949094526001600160a01b0392831660a087015290821660c0860152811660e0850152166101008301526101208201526101408101919091526101600160405160208183030381529060405280519060200120611dc1565b95945050505050565b6000806115aa8484611e0f565b949350505050565b6006546040516301ffc9a760e01b81526001600160a01b038816916301ffc9a7916115f39160e01b906004016001600160e01b031991909116815260200190565b602060405180830381865afa158015611610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116349190612763565b156116b9576040805180820182526001600160a01b038086168252602082018590529151630cc3961b60e41b8152909188169063cc3961b090611681908b908a90879087906004016129a2565b600060405180830381600087803b15801561169b57600080fd5b505af11580156116af573d6000803e3d6000fd5b50505050506117bc565b6006546040516301ffc9a760e01b815264010000000090910460e01b6001600160e01b03191660048201526001600160a01b038716906301ffc9a790602401602060405180830381865afa158015611715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117399190612763565b156117bc576040805180820182526001600160a01b03808616825260208201859052915163fc038ab360e01b8152909188169063fc038ab390611788908b908a908a90889088906004016129ee565b600060405180830381600087803b1580156117a257600080fd5b505af11580156117b6573d6000803e3d6000fd5b50505050505b50505050505050565b6005546000908190156117f1576005546117ee90612710906117e8908890610ec6565b90611e33565b90505b6117fb8582611e3f565b91506001600160a01b03841661198a576004546001600160a01b0316158015906118255750600081115b156118e1576004546040516000916001600160a01b03169083908381818185875af1925050503d8060008114611877576040519150601f19603f3d011682016040523d82523d6000602084013e61187c565b606091505b50509050806118df5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220746f20706c6174666f726d20666565207265636569766560448201526839103330b4b632b21760b91b6064820152608401610399565b505b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461192e576040519150601f19603f3d011682016040523d82523d6000602084013e611933565b606091505b50509050806119845760405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220746f2073656c6c6572206661696c65642e0000000000006044820152606401610399565b50611a99565b6004546001600160a01b0316158015906119a45750600081115b15611a24576004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820183905285169063a9059cbb906044016020604051808303816000875af11580156119fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a229190612763565b505b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb906044016020604051808303816000875af1158015611a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a979190612763565b505b6040805180820182526001600160a01b0380861682526020808301869052835180850185526004549092168252810184905291517f40487f252a20d8f2b6b418aa086921caabfdfcef0fd4c378ac2c09dff3cfb70b92611af99291612a41565b60405180910390a15050505050565b6000826000018281548110611b1f57611b1f612a7b565b9060005260206000200154905092915050565b60606000611b418360026127b3565b611b4c90600261279b565b67ffffffffffffffff811115611b6457611b64612416565b6040519080825280601f01601f191660200182016040528015611b8e576020820181803683370190505b509050600360fc1b81600081518110611ba957611ba9612a7b565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611bd857611bd8612a7b565b60200101906001600160f81b031916908160001a9053506000611bfc8460026127b3565b611c0790600161279b565b90505b6001811115611c7f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611c3b57611c3b612a7b565b1a60f81b828281518110611c5157611c51612a7b565b60200101906001600160f81b031916908160001a90535060049490941c93611c7881612a91565b9050611c0a565b5083156109035760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610399565b60008181526001830160205260408120548015611db7576000611cf260018361280c565b8554909150600090611d069060019061280c565b9050818114611d6b576000866000018281548110611d2657611d26612a7b565b9060005260206000200154905080876000018481548110611d4957611d49612a7b565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611d7c57611d7c612aa8565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102fd565b60009150506102fd565b60006102fd611dce611e4b565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611e1e8585611f72565b91509150611e2b81611fe0565b509392505050565b60006109038284612abe565b6000610903828461280c565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611ea457507f000000000000000000000000000000000000000000000000000000000000000046145b15611ece57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604103611fa85760208301516040840151606085015160001a611f9c87828585612196565b94509450505050611fd9565b8251604003611fd15760208301516040840151611fc6868383612283565b935093505050611fd9565b506000905060025b9250929050565b6000816004811115611ff457611ff4612ae0565b03611ffc5750565b600181600481111561201057612010612ae0565b0361205d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610399565b600281600481111561207157612071612ae0565b036120be5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610399565b60038160048111156120d2576120d2612ae0565b0361212a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610399565b600481600481111561213e5761213e612ae0565b036107255760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610399565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156121cd575060009050600361227a565b8460ff16601b141580156121e557508460ff16601c14155b156121f6575060009050600461227a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561224a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166122735760006001925092505061227a565b9150600090505b94509492505050565b6000806001600160ff1b038316816122a060ff86901c601b61279b565b90506122ae87828885612196565b935093505050935093915050565b8280546122c8906127d2565b90600052602060002090601f0160209004810192826122ea5760008555612330565b82601f1061230357805160ff1916838001178555612330565b82800160010185558215612330579182015b82811115612330578251825591602001919060010190612315565b5061233c929150612376565b5090565b50805461234c906127d2565b6000825580601f1061235c575050565b601f01602090049060005260206000209081019061072591905b5b8082111561233c5760008155600101612377565b60006020828403121561239d57600080fd5b81356001600160e01b03198116811461090357600080fd5b6000602082840312156123c757600080fd5b5035919050565b80356001600160a01b03811681146123e557600080fd5b919050565b600080604083850312156123fd57600080fd5b8235915061240d602084016123ce565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff8111828210171561245057612450612416565b60405290565b600082601f83011261246757600080fd5b813567ffffffffffffffff8082111561248257612482612416565b604051601f8301601f19908116603f011681019082821181831017156124aa576124aa612416565b816040528381528660208588010111156124c357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600061012082840312156124f657600080fd5b6124fe61242c565b9050813581526020820135602082015260408201356040820152612524606083016123ce565b6060820152612535608083016123ce565b608082015261254660a083016123ce565b60a082015261255760c083016123ce565b60c082015260e082013560e08201526101008083013567ffffffffffffffff81111561258257600080fd5b61258e85828601612456565b82840152505092915050565b60008083601f8401126125ac57600080fd5b50813567ffffffffffffffff8111156125c457600080fd5b602083019150836020828501011115611fd957600080fd5b600080600080606085870312156125f257600080fd5b843567ffffffffffffffff8082111561260a57600080fd5b612616888389016124e3565b955060208701359450604087013591508082111561263357600080fd5b506126408782880161259a565b95989497509550505050565b60006040828403121561265e57600080fd5b6040516040810181811067ffffffffffffffff8211171561268157612681612416565b60405261268d836123ce565b8152602083013560208201528091505092915050565b6000806000806000608086880312156126bb57600080fd5b853567ffffffffffffffff808211156126d357600080fd5b6126df89838a016124e3565b96506020880135955060408801359150808211156126fc57600080fd5b506127098882890161259a565b909450925061271c9050606087016123ce565b90509295509295909350565b6000806040838503121561273b57600080fd5b50508035926020909101359150565b60006020828403121561275c57600080fd5b5051919050565b60006020828403121561277557600080fd5b8151801515811461090357600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156127ae576127ae612785565b500190565b60008160001904831182151516156127cd576127cd612785565b500290565b600181811c908216806127e657607f821691505b60208210810361280657634e487b7160e01b600052602260045260246000fd5b50919050565b60008282101561281e5761281e612785565b500390565b60005b8381101561283e578181015183820152602001612826565b8381111561284d576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161288b816017850160208801612823565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516128bc816028840160208801612823565b01602801949350505050565b600081518084526128e0816020860160208601612823565b601f01601f19169290920160200192915050565b60208152600061090360208301846128c8565b600080835481600182811c91508083168061292357607f831692505b6020808410820361294257634e487b7160e01b86526022600452602486fd5b818015612956576001811461296757612994565b60ff19861689528489019650612994565b60008a81526020902060005b8681101561298c5781548b820152908501908301612973565b505084890196505b509498975050505050505050565b60018060a01b038516815283602082015260a0604082015260006129c960a08301856128c8565b83516001600160a01b0316606084015260208401516080840152905095945050505050565b60018060a01b038616815284602082015283604082015260c060608201526000612a1b60c08301856128c8565b83516001600160a01b03166080840152602084015160a084015290509695505050505050565b82516001600160a01b03168152602080840151908201526080810182516001600160a01b0316604083015260208301516060830152610903565b634e487b7160e01b600052603260045260246000fd5b600081612aa057612aa0612785565b506000190190565b634e487b7160e01b600052603160045260246000fd5b600082612adb57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea264697066735822122043a09511a756d6ffff6c865c2070fd14db50f416f9b086c084173816aa53dcaf64736f6c634300080d0033",
  "deployedBytecode": "",
  "immutableReferences": {
    "6037": [
      {
        "length": 32,
        "start": 7852
      }
    ],
    "6039": [
      {
        "length": 32,
        "start": 7810
      }
    ],
    "6041": [
      {
        "length": 32,
        "start": 7768
      }
    ],
    "6043": [
      {
        "length": 32,
        "start": 7935
      }
    ],
    "6045": [
      {
        "length": 32,
        "start": 7972
      }
    ],
    "6047": [
      {
        "length": 32,
        "start": 7893
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1869:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:50"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:50",
                "type": ""
              }
            ],
            "src": "14:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "315:655:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "325:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "339:7:50"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "348:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "335:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "335:23:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "329:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "382:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "391:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "394:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "384:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "384:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "384:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "374:2:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "378:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "370:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "370:11:50"
                  },
                  "nodeType": "YulIf",
                  "src": "367:31:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "424:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "433:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "436:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "426:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "426:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "426:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "414:2:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:4:50",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "410:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "407:33:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "449:25:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "469:4:50",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "463:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:11:50"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "453:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "483:35:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "505:6:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "513:4:50",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "501:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "501:17:50"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "487:10:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "601:111:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "622:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "629:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "634:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "625:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "625:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "615:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "615:31:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "615:31:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "666:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "669:4:50",
                              "type": "",
                              "value": "0x41"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "659:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "659:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "659:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "694:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "697:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "687:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "687:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "687:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "536:10:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "556:2:50",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "560:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "552:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "552:10:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "564:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "548:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "548:18:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "533:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "533:34:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "572:10:50"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "584:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "569:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "530:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "530:62:50"
                  },
                  "nodeType": "YulIf",
                  "src": "527:185:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "728:4:50",
                        "type": "",
                        "value": "0x40"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "734:10:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "721:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "721:24:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "721:24:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "761:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "769:29:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:40:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "754:56:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "830:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "838:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "826:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "826:15:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "853:9:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "864:2:50",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "849:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "849:18:50"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "843:5:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:25:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "819:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "819:50:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "819:50:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "878:16:50",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "888:6:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "878:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "903:61:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "947:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "958:4:50",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "943:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "943:20:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "913:29:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "913:51:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Fee_$9943_memory_ptrt_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "273:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "284:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "304:6:50",
                "type": ""
              }
            ],
            "src": "196:774:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1188:276:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1198:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1210:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1221:3:50",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1206:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1198:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1241:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1252:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1234:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1234:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1234:25:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1279:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1290:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1275:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1295:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1268:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1268:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1322:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1333:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1318:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1318:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1338:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1311:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1311:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1311:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1365:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1376:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1361:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1361:18:50"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1381:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1354:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1354:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1354:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1408:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1419:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1404:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1404:19:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "1429:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1445:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1450:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1441:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1441:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1454:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1437:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1437:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1425:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1425:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1397:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1397:61:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1397:61:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1125:9:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1136:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1144:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1152:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1160:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1168:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1179:4:50",
                "type": ""
              }
            ],
            "src": "975:489:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1643:224:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1660:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1671:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1653:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1653:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1653:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1694:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1705:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1690:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1690:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1710:2:50",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1683:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1683:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1683:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1733:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1744:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1729:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1729:18:50"
                      },
                      {
                        "hexValue": "4665653a206d617820616c6c6f776564207065726563656e7461676520697320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1749:34:50",
                        "type": "",
                        "value": "Fee: max allowed perecentage is "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1722:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1722:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1804:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1815:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1800:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1800:18:50"
                      },
                      {
                        "hexValue": "3530",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1820:4:50",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1793:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:32:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1793:32:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1834:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1846:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1857:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1842:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1834:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_712c8bde25a5526dd8d8d797eba631a3fbc2b43878da80d60a478dc1d0627030__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1620:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1634:4:50",
                "type": ""
              }
            ],
            "src": "1469:398:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Fee_$9943_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 96) { revert(0, 0) }\n        if slt(_1, 0x40) { revert(0, 0) }\n        let memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(0x40, newFreePtr)\n        mstore(memPtr, abi_decode_address_fromMemory(headStart))\n        mstore(add(memPtr, 32), mload(add(headStart, 32)))\n        value0 := memPtr\n        value1 := abi_decode_address_fromMemory(add(headStart, 0x40))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_712c8bde25a5526dd8d8d797eba631a3fbc2b43878da80d60a478dc1d0627030__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Fee: max allowed perecentage is \")\n        mstore(add(headStart, 96), \"50\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:26014:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:50",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:50",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:50"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:50",
                "type": ""
              }
            ],
            "src": "14:286:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:50",
                "type": ""
              }
            ],
            "src": "305:187:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "567:110:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "613:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "622:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "625:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "615:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "615:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "615:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "588:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "597:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "584:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "584:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "609:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "580:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "580:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "577:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "638:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "661:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "648:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "533:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "544:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "556:6:50",
                "type": ""
              }
            ],
            "src": "497:180:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "783:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "793:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "805:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "816:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "801:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "793:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "835:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "846:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "828:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "828:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "828:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "752:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "763:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "774:4:50",
                "type": ""
              }
            ],
            "src": "682:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "913:124:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "923:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "945:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "932:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "932:20:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "923:5:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1015:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1024:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1027:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1017:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1017:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1017:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "974:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "985:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1000:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1005:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "996:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "996:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1009:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "992:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "992:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "981:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "981:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "971:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "971:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "964:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "961:70:50"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "892:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "903:5:50",
                "type": ""
              }
            ],
            "src": "864:173:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1129:167:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1175:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1184:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1187:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1177:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1177:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1177:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1150:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1159:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1146:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1146:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1171:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1142:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1142:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1139:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1200:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1223:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1210:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1210:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1242:48:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1275:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1286:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1271:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1252:18:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1252:38:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1087:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1098:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1110:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1118:6:50",
                "type": ""
              }
            ],
            "src": "1042:254:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1333:95:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1350:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1357:3:50",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1362:10:50",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1353:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:20:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1343:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1343:31:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1390:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1393:4:50",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1383:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1383:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1383:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1414:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1417:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1407:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1407:15:50"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1301:127:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1474:209:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1484:19:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1500:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1494:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1494:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1484:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1512:37:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1534:6:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1542:6:50",
                        "type": "",
                        "value": "0x0120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1530:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:19:50"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1516:10:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1624:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1626:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1626:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1626:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1567:10:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1579:18:50",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1564:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1564:34:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1603:10:50"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1615:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1600:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1600:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1561:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1561:62:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1558:88:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1662:2:50",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1666:10:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1655:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:22:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1655:22:50"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1463:6:50",
                "type": ""
              }
            ],
            "src": "1433:250:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1741:666:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1790:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1799:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1802:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1792:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1792:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1792:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1769:6:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1777:4:50",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1765:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1765:17:50"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1784:3:50"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1761:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1761:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1754:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1754:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1751:55:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1815:30:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1838:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1825:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1825:20:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1819:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1854:28:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1864:18:50",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1858:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1905:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1907:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1907:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1907:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1897:2:50"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1901:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1894:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:10:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1891:36:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1936:17:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1950:2:50",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1946:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1946:7:50"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1940:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1962:23:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1982:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1976:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1976:9:50"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1966:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1994:71:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2016:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2040:2:50"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2044:4:50",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2036:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2036:13:50"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2051:2:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2032:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2032:22:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2056:2:50",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2028:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2028:31:50"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2061:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2024:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2024:40:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2012:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2012:53:50"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1998:10:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2124:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2126:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2126:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2126:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2083:10:50"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2095:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2080:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2080:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2103:10:50"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2115:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2100:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2100:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2077:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2077:46:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2074:72:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2162:2:50",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2166:10:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2155:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2155:22:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2155:22:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2193:6:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2201:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2186:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:18:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2186:18:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2252:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2261:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2264:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2254:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2254:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2254:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2227:6:50"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2235:2:50"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2223:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2223:15:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2240:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2219:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2219:26:50"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2247:3:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2216:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2216:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2213:55:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2294:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2302:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2290:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2290:17:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2313:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2321:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2309:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2309:17:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2328:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2277:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:54:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2277:54:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2355:6:50"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2363:2:50"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2351:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2351:15:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2368:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2347:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2347:26:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2375:1:50",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2340:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:37:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2340:37:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2386:15:50",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2395:6:50"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2386:5:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1715:6:50",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1723:3:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1731:5:50",
                "type": ""
              }
            ],
            "src": "1688:719:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2477:852:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2523:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2532:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2535:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2525:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2525:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2525:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2498:3:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2503:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2494:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2494:19:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2515:6:50",
                        "type": "",
                        "value": "0x0120"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2490:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2490:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2487:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2548:26:50",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2557:15:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:17:50"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2548:5:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2590:5:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2610:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2597:12:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2597:23:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2583:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2583:38:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2583:38:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2641:5:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2648:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2637:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2637:14:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2670:9:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2681:2:50",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2666:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2666:18:50"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2653:12:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2653:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2630:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2630:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2630:56:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2706:5:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2713:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2702:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2702:14:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2735:9:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2746:2:50",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2731:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2731:18:50"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2718:12:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2718:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2695:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2695:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2695:56:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2771:5:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2778:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2767:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2767:14:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2806:9:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2817:2:50",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2802:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2802:18:50"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2783:18:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2783:38:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2760:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2760:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2760:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2842:5:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2849:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2838:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2838:15:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2878:9:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2889:3:50",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2874:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2874:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2855:18:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2855:39:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2831:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2831:64:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2831:64:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2915:5:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2922:3:50",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2911:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2911:15:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2951:9:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2962:3:50",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2947:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2947:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2928:18:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2928:39:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2904:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2904:64:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2904:64:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2988:5:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2995:3:50",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2984:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2984:15:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3024:9:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3035:3:50",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3020:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3020:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "3001:18:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3001:39:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2977:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2977:64:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2977:64:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3061:5:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3068:3:50",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:15:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3091:9:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3102:3:50",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3087:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3087:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3074:12:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3074:33:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:58:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3050:58:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3117:13:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3127:3:50",
                    "type": "",
                    "value": "256"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3121:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3139:46:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3170:9:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3181:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3166:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3166:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3153:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3153:32:50"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3143:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3228:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3237:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3240:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3230:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3230:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3230:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3200:6:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3208:18:50",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3197:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:30:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3194:50:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3264:5:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3271:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3260:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3260:14:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3298:9:50"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3309:6:50"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3294:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3294:22:50"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3318:3:50"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string",
                          "nodeType": "YulIdentifier",
                          "src": "3276:17:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3276:46:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3253:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3253:70:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3253:70:50"
                }
              ]
            },
            "name": "abi_decode_struct_Metadata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2448:9:50",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2459:3:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2467:5:50",
                "type": ""
              }
            ],
            "src": "2412:917:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3406:275:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3455:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3464:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3467:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3457:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3457:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3457:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3434:6:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3442:4:50",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3430:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3430:17:50"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3449:3:50"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3426:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3426:27:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3419:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3419:35:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3416:55:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3480:30:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3503:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3490:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3490:20:50"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3480:6:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3553:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3562:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3565:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3555:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3555:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3555:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3525:6:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3533:18:50",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3522:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3522:30:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3519:50:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3578:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3594:6:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3602:4:50",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3590:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3590:17:50"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "3578:8:50"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3659:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3668:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3671:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3661:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3661:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3661:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3630:6:50"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3638:6:50"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3626:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3626:19:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3647:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3622:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3622:30:50"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3654:3:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3619:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3619:39:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3616:59:50"
                }
              ]
            },
            "name": "abi_decode_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3369:6:50",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3377:3:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "3385:8:50",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3395:6:50",
                "type": ""
              }
            ],
            "src": "3334:347:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3835:574:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3881:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3890:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3893:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3883:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3883:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3883:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3856:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3865:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3852:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3852:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3877:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3848:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3848:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3845:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3906:37:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3933:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3920:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3920:23:50"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3910:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3952:28:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3962:18:50",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3956:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4007:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4016:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4019:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4009:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4009:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4009:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3995:6:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4003:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3992:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3992:14:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3989:34:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4032:69:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4073:9:50"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4084:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4069:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4069:22:50"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4093:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_Metadata",
                      "nodeType": "YulIdentifier",
                      "src": "4042:26:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4042:59:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4032:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4110:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4137:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4148:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4133:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4133:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4120:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4120:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4110:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4161:48:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4194:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4205:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4190:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4190:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4177:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:32:50"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "4165:8:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4238:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4247:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4250:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4240:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4240:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4240:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "4224:8:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4234:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4221:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4221:16:50"
                  },
                  "nodeType": "YulIf",
                  "src": "4218:36:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4263:86:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4319:9:50"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "4330:8:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4315:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4315:24:50"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4341:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4289:25:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4289:60:50"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "4267:8:50",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "4277:8:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4358:18:50",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "4368:8:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4358:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4385:18:50",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "4395:8:50"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4385:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Metadata_$9938_memory_ptrt_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3777:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3788:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3800:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3808:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3816:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3824:6:50",
                "type": ""
              }
            ],
            "src": "3686:723:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4505:415:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4551:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4560:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4563:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4553:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4553:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4553:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4526:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4535:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4522:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4522:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4547:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4518:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4518:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "4515:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4576:23:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4596:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4590:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:9:50"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "4580:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4608:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4630:6:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4638:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4626:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4626:15:50"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "4612:10:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4716:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4718:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4718:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4718:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4659:10:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4671:18:50",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4656:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4656:34:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4695:10:50"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4707:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4692:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4692:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4653:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:62:50"
                  },
                  "nodeType": "YulIf",
                  "src": "4650:88:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4754:2:50",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "4758:10:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4747:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4747:22:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4747:22:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4785:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4812:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "4793:18:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4793:29:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4778:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4778:45:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4778:45:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4843:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4851:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4839:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4839:15:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4873:9:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4884:2:50",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4869:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4869:18:50"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4856:12:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4856:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4832:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4832:57:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4832:57:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4898:16:50",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "4908:6:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4898:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Fee_$9943_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4471:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4482:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4494:6:50",
                "type": ""
              }
            ],
            "src": "4414:506:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5091:632:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5138:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5147:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5150:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5140:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5140:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5140:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5112:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5121:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5108:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5108:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5133:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5104:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5104:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5101:53:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5163:37:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5190:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5177:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5177:23:50"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "5167:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5209:28:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5219:18:50",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5213:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5264:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5273:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5276:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5266:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5266:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5266:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5252:6:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5260:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5249:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5249:14:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5246:34:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5289:69:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5330:9:50"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5341:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5326:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5326:22:50"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5350:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_Metadata",
                      "nodeType": "YulIdentifier",
                      "src": "5299:26:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5299:59:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5289:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5367:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5394:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5405:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5390:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5390:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5377:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5377:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5367:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5418:48:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5451:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5462:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5447:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5447:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5434:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5434:32:50"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "5422:8:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5495:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5504:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5507:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5497:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5497:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5497:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "5481:8:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5491:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5478:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5478:16:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5475:36:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5520:86:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5576:9:50"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "5587:8:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5572:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5572:24:50"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5598:7:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5546:25:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5546:60:50"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "5524:8:50",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "5534:8:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5615:18:50",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "5625:8:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5615:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5642:18:50",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "5652:8:50"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5642:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5669:48:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5702:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5713:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5698:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5698:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5679:18:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5679:38:50"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "5669:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Metadata_$9938_memory_ptrt_uint256t_bytes_calldata_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5025:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5036:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5048:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5056:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5064:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5072:6:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5080:6:50",
                "type": ""
              }
            ],
            "src": "4925:798:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5815:161:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5861:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5870:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5873:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5863:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5863:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5863:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5836:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5845:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5832:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5832:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5857:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5828:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5828:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "5825:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5886:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5909:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5896:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5886:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5928:42:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5955:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5966:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5951:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5951:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5938:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5938:32:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5928:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5773:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5784:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5796:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5804:6:50",
                "type": ""
              }
            ],
            "src": "5728:248:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6082:102:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6092:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6104:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6115:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6100:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6100:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6092:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6134:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6149:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6165:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6170:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6161:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6161:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6174:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6157:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6157:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6145:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6145:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6127:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6127:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6127:51:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6051:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6062:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6073:4:50",
                "type": ""
              }
            ],
            "src": "5981:203:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6290:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6300:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6312:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6323:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6308:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6308:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6300:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6342:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6353:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6335:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6335:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6335:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6259:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6270:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6281:4:50",
                "type": ""
              }
            ],
            "src": "6189:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6545:237:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6562:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6573:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6555:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6555:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6555:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6596:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6607:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6592:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6592:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6612:2:50",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6585:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6585:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6585:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6635:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6646:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6631:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6631:18:50"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6651:34:50",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6624:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6624:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6624:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6706:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6717:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6702:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6702:18:50"
                      },
                      {
                        "hexValue": "20726f6c657320666f722073656c66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6722:17:50",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6695:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6695:45:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6695:45:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6749:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6761:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6772:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6757:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6757:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6749:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6522:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6536:4:50",
                "type": ""
              }
            ],
            "src": "6371:411:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6961:181:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6978:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6989:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6971:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6971:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6971:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7012:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7023:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7008:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7008:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7028:2:50",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7001:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7001:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7001:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7051:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7062:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7047:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7047:18:50"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7067:33:50",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7040:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7040:61:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7040:61:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7110:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7122:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7133:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7118:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7118:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7110:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6938:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6952:4:50",
                "type": ""
              }
            ],
            "src": "6787:355:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7321:178:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7338:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7349:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7331:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7331:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7331:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7372:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7383:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7368:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7368:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7388:2:50",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7361:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7361:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7361:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7411:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7422:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7407:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7407:18:50"
                      },
                      {
                        "hexValue": "4275794e6674733a2043616e277420427579205a65726f204e465473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7427:30:50",
                        "type": "",
                        "value": "BuyNfts: Can't Buy Zero NFTs"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7400:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7400:58:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7400:58:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7467:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7479:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7490:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7475:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7475:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7467:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7298:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7312:4:50",
                "type": ""
              }
            ],
            "src": "7147:352:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7678:179:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7695:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7706:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7688:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7688:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7688:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7729:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7740:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7725:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7725:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7745:2:50",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7718:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7718:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7718:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7768:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7779:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7764:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7764:18:50"
                      },
                      {
                        "hexValue": "4275794e6674733a2045786365656473206d6178207175616e74697479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7784:31:50",
                        "type": "",
                        "value": "BuyNfts: Exceeds max quantity"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7757:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7757:59:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7757:59:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7825:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7837:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7848:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7833:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7833:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7825:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7655:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7669:4:50",
                "type": ""
              }
            ],
            "src": "7504:353:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8036:176:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8053:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8064:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8046:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8046:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8046:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8087:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8098:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8083:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8083:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8103:2:50",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8076:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8076:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8076:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8126:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8137:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8122:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8122:18:50"
                      },
                      {
                        "hexValue": "4275794e6674733a20496e73756666696369656e742066756e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8142:28:50",
                        "type": "",
                        "value": "BuyNfts: Insufficient fund"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8115:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8115:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8115:56:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8180:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8192:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8203:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8188:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8188:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8180:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_32bc38a528a1742431d1db4a30d337d8ee9bb9ef55ca3ee87b0f7837d96439c0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8013:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8027:4:50",
                "type": ""
              }
            ],
            "src": "7862:350:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8346:175:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8356:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8368:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8379:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8364:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8364:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8356:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8391:29:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8409:3:50",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8414:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8405:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8405:11:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8418:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8401:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8401:19:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8395:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8436:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8451:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8459:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8447:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8447:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8429:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8429:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8429:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8483:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8494:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8479:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8479:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8503:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8511:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8499:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8499:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8472:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8472:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8472:43:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8307:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8318:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8326:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8337:4:50",
                "type": ""
              }
            ],
            "src": "8217:304:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8607:103:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8653:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8662:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8665:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8655:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8655:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8655:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8628:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8637:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8624:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8624:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8649:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8620:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8620:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "8617:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8678:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8694:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8688:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8688:16:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8678:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8573:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8584:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8596:6:50",
                "type": ""
              }
            ],
            "src": "8526:184:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8889:173:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8906:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8917:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8899:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8899:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8899:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8940:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8951:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8936:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8936:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8956:2:50",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8929:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8929:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8929:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8979:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8990:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8975:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8975:18:50"
                      },
                      {
                        "hexValue": "4275794e6674733a204c65737320616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8995:25:50",
                        "type": "",
                        "value": "BuyNfts: Less allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8968:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8968:53:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8968:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9030:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9042:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9053:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9038:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9038:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9030:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9039ff3629dfc047e7c378a0927995387665464bb6450471a1ac3dad4e66b6b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8866:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8880:4:50",
                "type": ""
              }
            ],
            "src": "8715:347:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9224:218:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9234:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9246:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9257:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9242:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9242:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9234:4:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9269:29:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9287:3:50",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9292:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9283:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9283:11:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9296:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9279:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9279:19:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9273:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9314:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9329:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9337:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9325:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9325:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9307:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9307:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9307:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9361:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9372:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9357:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9357:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "9381:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9389:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9377:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9377:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9350:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9350:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9350:43:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9413:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9424:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9409:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9409:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9429:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9402:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9402:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9402:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9177:9:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9188:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9196:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9204:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9215:4:50",
                "type": ""
              }
            ],
            "src": "9067:375:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9525:199:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9571:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9580:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9583:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9573:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9573:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9573:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9546:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9555:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9542:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9542:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9567:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9538:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9538:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "9535:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9596:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9615:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9609:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9609:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9600:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9678:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9687:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9690:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9680:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9680:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9680:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9647:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9668:5:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9661:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9661:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9654:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9654:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9644:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9644:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9637:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9637:40:50"
                  },
                  "nodeType": "YulIf",
                  "src": "9634:60:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9703:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9713:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9703:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9491:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9502:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9514:6:50",
                "type": ""
              }
            ],
            "src": "9447:277:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9903:169:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9920:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9931:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9913:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9913:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9913:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9954:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9965:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9950:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9950:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9970:2:50",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9943:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9943:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9943:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9993:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10004:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9989:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9989:18:50"
                      },
                      {
                        "hexValue": "5265737472696374656420746f206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10009:21:50",
                        "type": "",
                        "value": "Restricted to owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9982:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9982:49:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9982:49:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10040:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10052:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10063:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10048:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10048:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10040:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_10032e8ce005db737e680718e0a2839e155b031b8b697283f48cf4f56cfc2ead__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9880:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9894:4:50",
                "type": ""
              }
            ],
            "src": "9729:343:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10109:95:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10126:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10133:3:50",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10138:10:50",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10129:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10129:20:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10119:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10119:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10119:31:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10166:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10169:4:50",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10159:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10159:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10159:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10190:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10193:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10183:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10183:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10183:15:50"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10077:127:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10257:80:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10284:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10286:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10286:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10286:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10273:1:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10280:1:50"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10276:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10276:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10270:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10270:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "10267:39:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10315:16:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10326:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10329:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10322:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10322:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10315:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10240:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10243:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10249:3:50",
                "type": ""
              }
            ],
            "src": "10209:128:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10516:171:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10533:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10544:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10526:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10526:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10526:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10567:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10578:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10563:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10563:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10583:2:50",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10556:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10556:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10556:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10606:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10617:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10602:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10602:18:50"
                      },
                      {
                        "hexValue": "4275794e6674733a205a65726f2041646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10622:23:50",
                        "type": "",
                        "value": "BuyNfts: Zero Address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10595:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10595:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10595:51:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10655:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10667:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10678:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10663:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10663:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10655:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aa271b88c32d3234da7d07fc7f30dc88fba182c0fa298864814cf342fa288714__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10493:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10507:4:50",
                "type": ""
              }
            ],
            "src": "10342:345:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10866:224:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10883:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10894:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10876:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10876:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10876:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10917:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10928:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10913:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10913:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10933:2:50",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10906:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10906:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10906:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10956:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10967:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10952:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10952:18:50"
                      },
                      {
                        "hexValue": "4275794e6674733a20576f6e7420416363657074205a65726f205175616e7469",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10972:34:50",
                        "type": "",
                        "value": "BuyNfts: Wont Accept Zero Quanti"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10945:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10945:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10945:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11027:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11038:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11023:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11023:18:50"
                      },
                      {
                        "hexValue": "7479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11043:4:50",
                        "type": "",
                        "value": "ty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11016:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11016:32:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11016:32:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11057:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11069:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11080:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11065:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11065:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11057:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8f30f61fef552400ebf434d0d7eea0d1b7a24f066b0708c0e3ce136b7ec1f076__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10843:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10857:4:50",
                "type": ""
              }
            ],
            "src": "10692:398:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11269:178:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11286:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11297:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11279:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11279:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11279:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11320:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11331:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11316:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11316:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11336:2:50",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11309:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11309:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11309:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11359:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11370:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11355:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11355:18:50"
                      },
                      {
                        "hexValue": "4275794e6674733a20496e76616c6964204e46542041646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11375:30:50",
                        "type": "",
                        "value": "BuyNfts: Invalid NFT Address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11348:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11348:58:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11348:58:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11415:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11427:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11438:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11423:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11423:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11415:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9d60ac7755a8b00452aed6883f99d4a91e3ac129fd50a3028870f20b507a36b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11246:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11260:4:50",
                "type": ""
              }
            ],
            "src": "11095:352:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11626:232:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11643:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11654:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11636:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11636:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11636:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11677:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11688:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11673:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11673:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11693:2:50",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11666:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11666:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11666:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11716:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11727:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11712:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11712:18:50"
                      },
                      {
                        "hexValue": "4275794e667473203a204f776e6572204973204e6f7420416c6c6f7765642054",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11732:34:50",
                        "type": "",
                        "value": "BuyNfts : Owner Is Not Allowed T"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11705:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11705:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11705:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11787:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11798:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11783:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11783:18:50"
                      },
                      {
                        "hexValue": "6f20427579204e667473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11803:12:50",
                        "type": "",
                        "value": "o Buy Nfts"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11776:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11776:40:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11776:40:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11825:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11837:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11848:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11833:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11833:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11825:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_78f80ddbc2671690a6507ba913241694debc57b2eb824899e3b042a8bdb29cdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11603:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11617:4:50",
                "type": ""
              }
            ],
            "src": "11452:406:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12037:173:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12054:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12065:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12047:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12047:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12047:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12088:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12099:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12084:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12084:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12104:2:50",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12077:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12077:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12077:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12127:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12138:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12123:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12123:18:50"
                      },
                      {
                        "hexValue": "53656c6c204e6674733a205a65726f2041646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12143:25:50",
                        "type": "",
                        "value": "Sell Nfts: Zero Address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12116:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12116:53:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12116:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12178:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12190:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12201:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12186:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12186:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12178:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7406758b822a8687bbf850ced7a7db3a20f055ad5fc6908d4afbd26c4dacf812__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12014:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12028:4:50",
                "type": ""
              }
            ],
            "src": "11863:347:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12389:180:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12406:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12417:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12399:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12399:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12399:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12440:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12451:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12436:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12436:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12456:2:50",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12429:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12429:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12429:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12479:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12490:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12475:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12475:18:50"
                      },
                      {
                        "hexValue": "4275794e6674733a2041646d696e2043616e6e6f7420427579204e667473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12495:32:50",
                        "type": "",
                        "value": "BuyNfts: Admin Cannot Buy Nfts"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12468:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12468:60:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12468:60:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12537:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12549:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12560:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12545:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12545:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12537:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_885760e13b84a1d9b8569669da08725ccaee701f4007f864da65857d61693345__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12366:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12380:4:50",
                "type": ""
              }
            ],
            "src": "12215:354:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12748:181:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12765:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12776:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12758:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12758:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12758:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12799:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12810:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12795:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12795:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12815:2:50",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12788:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12788:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12788:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12838:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12849:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12834:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12834:18:50"
                      },
                      {
                        "hexValue": "4275794e6674733a20576f6e7420416363657074205a65726f205072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12854:33:50",
                        "type": "",
                        "value": "BuyNfts: Wont Accept Zero Price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12827:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12827:61:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12827:61:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12897:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12909:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12920:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12905:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12905:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12897:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2612f3887621795a8aa2d43a51ec307bae971707393304aeba72332cf413c82a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12725:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12739:4:50",
                "type": ""
              }
            ],
            "src": "12574:355:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13108:224:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13125:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13136:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13118:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13118:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13118:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13159:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13170:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13155:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13155:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13175:2:50",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13148:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13148:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13148:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13198:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13209:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13194:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13194:18:50"
                      },
                      {
                        "hexValue": "4e4654205369676e617475726520766572696669636174696f6e206661696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13214:34:50",
                        "type": "",
                        "value": "NFT Signature verification faile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13187:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13187:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13187:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13269:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13280:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13265:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13265:18:50"
                      },
                      {
                        "hexValue": "6421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13285:4:50",
                        "type": "",
                        "value": "d!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13258:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13258:32:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13258:32:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13299:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13311:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13322:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13307:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13307:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13299:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9183a2843d187209da0ee338ff08b4db3558bce1e64c72ccd7923d89d054953d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13085:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13099:4:50",
                "type": ""
              }
            ],
            "src": "12934:398:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13389:116:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13448:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13450:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13450:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13450:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13420:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13413:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13413:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13406:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13406:17:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13428:1:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13439:1:50",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13435:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13435:6:50"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13443:1:50"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "13431:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13431:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13425:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13425:21:50"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13402:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13402:45:50"
                  },
                  "nodeType": "YulIf",
                  "src": "13399:71:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13479:20:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13494:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13497:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13490:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13490:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13479:7:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13368:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13371:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "13377:7:50",
                "type": ""
              }
            ],
            "src": "13337:168:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13565:325:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13575:22:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13589:1:50",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "13592:4:50"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "13585:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13585:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "13575:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13606:38:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "13636:4:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13642:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13632:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13632:12:50"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "13610:18:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13683:31:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13685:27:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "13699:6:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13707:4:50",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "13695:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13695:17:50"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "13685:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "13663:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13656:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13656:26:50"
                  },
                  "nodeType": "YulIf",
                  "src": "13653:61:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13773:111:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13794:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13801:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13806:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "13797:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13797:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13787:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13787:31:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13787:31:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13838:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13841:4:50",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13831:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13831:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13831:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13866:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13869:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13859:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13859:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13859:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "13729:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "13752:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13760:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "13749:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13749:14:50"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "13726:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13726:38:50"
                  },
                  "nodeType": "YulIf",
                  "src": "13723:161:50"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "13545:4:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13554:6:50",
                "type": ""
              }
            ],
            "src": "13510:380:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13944:76:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13966:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13968:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13968:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13968:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13960:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13963:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13957:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13957:8:50"
                  },
                  "nodeType": "YulIf",
                  "src": "13954:34:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13997:17:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14009:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14012:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14005:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14005:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13997:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13926:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13929:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13935:4:50",
                "type": ""
              }
            ],
            "src": "13895:125:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14210:262:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14220:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14232:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14243:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14228:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14228:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14220:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14263:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14274:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14256:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14256:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14256:25:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14290:29:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14308:3:50",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14313:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "14304:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14304:11:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14317:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14300:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14300:19:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "14294:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14339:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14350:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14335:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14335:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14359:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14367:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14355:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14355:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14328:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14328:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14328:43:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14391:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14402:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14387:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14387:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "14411:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14419:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14407:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14407:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14380:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14380:43:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14380:43:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14443:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14454:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14439:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14439:18:50"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "14459:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14432:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14432:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14432:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14155:9:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "14166:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14174:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14182:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14190:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14201:4:50",
                "type": ""
              }
            ],
            "src": "14025:447:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14651:224:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14668:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14679:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14661:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14661:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14661:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14702:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14713:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14698:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14698:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14718:2:50",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14691:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14691:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14691:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14741:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14752:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14737:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14737:18:50"
                      },
                      {
                        "hexValue": "4665653a206d617820616c6c6f776564207065726563656e7461676520697320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14757:34:50",
                        "type": "",
                        "value": "Fee: max allowed perecentage is "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14730:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14730:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14730:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14812:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14823:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14808:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14808:18:50"
                      },
                      {
                        "hexValue": "3530",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14828:4:50",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14801:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14801:32:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14801:32:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14842:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14854:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14865:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14850:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14850:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14842:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_712c8bde25a5526dd8d8d797eba631a3fbc2b43878da80d60a478dc1d0627030__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14628:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14642:4:50",
                "type": ""
              }
            ],
            "src": "14477:398:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14933:205:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14943:10:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "14952:1:50",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "14947:1:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15012:63:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "15037:3:50"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "15042:1:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15033:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15033:11:50"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "15056:3:50"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "15061:1:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "15052:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15052:11:50"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "15046:5:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15046:18:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15026:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15026:39:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15026:39:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14973:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14976:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14970:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14970:13:50"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "14984:19:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14986:15:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "14995:1:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14998:2:50",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14991:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14991:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14986:1:50"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "14966:3:50",
                    "statements": []
                  },
                  "src": "14962:113:50"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15101:31:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "15114:3:50"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "15119:6:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15110:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15110:16:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15128:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15103:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15103:27:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15103:27:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "15090:1:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15093:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15087:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15087:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "15084:48:50"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "14911:3:50",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "14916:3:50",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14921:6:50",
                "type": ""
              }
            ],
            "src": "14880:258:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15532:397:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15549:3:50"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15554:25:50",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15542:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15542:38:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15542:38:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15589:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15609:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15603:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15603:13:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "15593:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15651:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15659:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15647:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15647:17:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15670:3:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15675:2:50",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15666:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15666:12:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15680:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "15625:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15625:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15625:62:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15696:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15710:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15715:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15706:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15706:16:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15700:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15742:2:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15746:2:50",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15738:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15738:11:50"
                      },
                      {
                        "hexValue": "206973206d697373696e6720726f6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15751:19:50",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15731:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15731:40:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15731:40:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15780:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15802:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15796:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15796:13:50"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "15784:8:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "15844:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15852:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15840:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15840:17:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15863:2:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15867:2:50",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15859:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15859:11:50"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "15872:8:50"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "15818:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15818:63:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15818:63:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15890:33:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15905:2:50"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "15909:8:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15901:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15901:17:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15920:2:50",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15897:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15897:26:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15890:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15500:3:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15505:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15513:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15524:3:50",
                "type": ""
              }
            ],
            "src": "15143:786:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15984:208:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15994:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16014:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16008:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16008:12:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "15998:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16036:3:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16041:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16029:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16029:19:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16029:19:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16083:5:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16090:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16079:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16079:16:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16101:3:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16106:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16097:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16097:14:50"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16113:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "16057:21:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16057:63:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16057:63:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16129:57:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "16144:3:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "16157:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16165:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16153:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16153:15:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16174:2:50",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "16170:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16170:7:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "16149:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16149:29:50"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16140:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16140:39:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16181:4:50",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16136:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16136:50:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16129:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15961:5:50",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15968:3:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15976:3:50",
                "type": ""
              }
            ],
            "src": "15934:258:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16318:99:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16335:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16346:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16328:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16328:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16328:21:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16358:53:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16384:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16396:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16407:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16392:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16392:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "16366:17:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16366:45:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16358:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16287:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16298:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16309:4:50",
                "type": ""
              }
            ],
            "src": "16197:220:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16596:169:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16613:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16624:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16606:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16606:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16606:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16647:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16658:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16643:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16643:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16663:2:50",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16636:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16636:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16636:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16686:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16697:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16682:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16682:18:50"
                      },
                      {
                        "hexValue": "69734e46543a205a65726f2041646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16702:21:50",
                        "type": "",
                        "value": "isNFT: Zero Address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16675:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16675:49:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16675:49:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16733:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16745:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16756:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16741:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16741:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16733:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7c96d5fea898c152e4c149cec6c4894771bf6d21beb569ae431fa06be2aa1783__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16573:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16587:4:50",
                "type": ""
              }
            ],
            "src": "16422:343:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16869:103:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16879:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16891:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16902:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16887:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16887:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16879:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16921:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16936:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16948:3:50",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16953:10:50",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "16944:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16944:20:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16932:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16932:33:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16914:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16914:52:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16914:52:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16838:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16849:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16860:4:50",
                "type": ""
              }
            ],
            "src": "16770:202:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17036:65:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17053:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "17056:3:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17046:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17046:14:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17046:14:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17069:26:50",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17087:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17090:4:50",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "17077:9:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17077:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "17069:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_bytes_storage_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "17019:3:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "17027:4:50",
                "type": ""
              }
            ],
            "src": "16977:124:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17244:966:50",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17254:12:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17265:1:50",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "ret",
                      "nodeType": "YulTypedName",
                      "src": "17258:3:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17275:30:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17298:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "17292:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17292:13:50"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "17279:9:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17314:17:50",
                  "value": {
                    "name": "ret",
                    "nodeType": "YulIdentifier",
                    "src": "17328:3:50"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "17318:6:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17340:11:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17350:1:50",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "17344:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17360:28:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "17374:2:50"
                      },
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "17378:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "17370:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17370:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "17360:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17397:44:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "17427:9:50"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "17438:2:50"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17423:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17423:18:50"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "17401:18:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17480:31:50",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17482:27:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "17496:6:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17504:4:50",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "17492:3:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17492:17:50"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "17482:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "17460:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17453:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17453:26:50"
                  },
                  "nodeType": "YulIf",
                  "src": "17450:61:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17520:12:50",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17530:2:50",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "17524:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17591:115:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "17612:3:50"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "17621:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "17626:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "17617:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17617:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17605:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17605:33:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17605:33:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17658:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17661:4:50",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17651:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17651:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17651:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "17686:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17691:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17679:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17679:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17679:17:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "17547:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "17570:6:50"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "17578:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "17567:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17567:14:50"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "17544:2:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17544:38:50"
                  },
                  "nodeType": "YulIf",
                  "src": "17541:165:50"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "17756:97:50",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17777:3:50"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "17786:9:50"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17801:3:50",
                                          "type": "",
                                          "value": "255"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "17797:3:50"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17797:8:50"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "17782:3:50"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17782:24:50"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "17770:6:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17770:37:50"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "17770:37:50"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "17820:23:50",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17831:3:50"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17836:6:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17827:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17827:16:50"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "17820:3:50"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "17749:104:50",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17754:1:50",
                        "type": "",
                        "value": "0"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "17869:316:50",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "17883:55:50",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "17931:6:50"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_bytes_storage_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "17898:32:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17898:40:50"
                            },
                            "variables": [
                              {
                                "name": "dataPos",
                                "nodeType": "YulTypedName",
                                "src": "17887:7:50",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "17951:10:50",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17960:1:50",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "17955:1:50",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "18028:111:50",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "18057:3:50"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "18062:1:50"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "18053:3:50"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "18053:11:50"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "18072:7:50"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "18066:5:50"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "18066:14:50"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "18046:6:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18046:35:50"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "18046:35:50"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "18098:27:50",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "18113:7:50"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "18122:2:50"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18109:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18109:16:50"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulIdentifier",
                                      "src": "18098:7:50"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "17985:1:50"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17988:6:50"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "17982:2:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17982:13:50"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "17996:19:50",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "17998:15:50",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "18007:1:50"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "18010:2:50"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18003:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18003:10:50"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "17998:1:50"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "17978:3:50",
                              "statements": []
                            },
                            "src": "17974:165:50"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "18152:23:50",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18163:3:50"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "18168:6:50"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "18159:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18159:16:50"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "18152:3:50"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "17862:323:50",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17867:1:50",
                        "type": "",
                        "value": "1"
                      }
                    }
                  ],
                  "expression": {
                    "name": "outOfPlaceEncoding",
                    "nodeType": "YulIdentifier",
                    "src": "17722:18:50"
                  },
                  "nodeType": "YulSwitch",
                  "src": "17715:470:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18194:10:50",
                  "value": {
                    "name": "ret",
                    "nodeType": "YulIdentifier",
                    "src": "18201:3:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18194:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17220:3:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17225:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17236:3:50",
                "type": ""
              }
            ],
            "src": "17106:1104:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18568:544:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18578:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18590:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18601:3:50",
                        "type": "",
                        "value": "320"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18586:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18586:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18578:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18621:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18632:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18614:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18614:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18614:25:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18659:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18670:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18655:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18655:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18675:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18648:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18648:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18648:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18702:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18713:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18698:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18698:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "18718:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18691:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18691:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18691:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18745:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18756:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18741:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18741:18:50"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "18761:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18734:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18734:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18734:34:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18777:29:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18795:3:50",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18800:1:50",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "18791:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18791:11:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18804:1:50",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "18787:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18787:19:50"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18781:2:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18826:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18837:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18822:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18822:19:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "18847:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18855:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18843:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18843:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18815:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18815:44:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18815:44:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18879:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18890:3:50",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18875:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18875:19:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "18900:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18908:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18896:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18896:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18868:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18868:44:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18868:44:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18932:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18943:3:50",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18928:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18928:19:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "18953:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18961:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18949:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18949:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18921:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18921:44:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18921:44:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18985:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18996:3:50",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18981:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18981:19:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value7",
                            "nodeType": "YulIdentifier",
                            "src": "19006:6:50"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19014:2:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19002:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19002:15:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18974:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18974:44:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18974:44:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19038:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19049:3:50",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19034:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19034:19:50"
                      },
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "19055:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19027:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19027:35:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19027:35:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19082:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19093:3:50",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19078:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19078:19:50"
                      },
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "19099:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19071:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19071:35:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19071:35:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint256_t_uint256_t_uint256_t_address_t_address_t_address_t_address_t_uint256_t_bytes32__to_t_bytes32_t_uint256_t_uint256_t_uint256_t_address_t_address_t_address_t_address_t_uint256_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18465:9:50",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "18476:6:50",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "18484:6:50",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "18492:6:50",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "18500:6:50",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "18508:6:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "18516:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "18524:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18532:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18540:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18548:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18559:4:50",
                "type": ""
              }
            ],
            "src": "18215:897:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19170:123:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19187:3:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19202:5:50"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "19196:5:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19196:12:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19218:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19223:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "19214:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19214:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19227:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "19210:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19210:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19192:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19192:38:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19180:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19180:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19180:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "19251:3:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19256:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19247:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19247:14:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19273:5:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19280:4:50",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19269:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19269:16:50"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "19263:5:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19263:23:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19240:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19240:47:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19240:47:50"
                }
              ]
            },
            "name": "abi_encode_struct_Royalties",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19154:5:50",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19161:3:50",
                "type": ""
              }
            ],
            "src": "19117:176:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19557:277:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19574:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "19589:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19605:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19610:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "19601:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19601:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19614:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "19597:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19597:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19585:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19585:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19567:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19567:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19567:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19638:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19649:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19634:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19634:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19654:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19627:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19627:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19627:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19681:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19692:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19677:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19677:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19697:3:50",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19670:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19670:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19670:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19710:54:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "19736:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19748:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19759:3:50",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19744:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19744:19:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "19718:17:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19718:46:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19710:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19801:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19813:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19824:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19809:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19809:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Royalties",
                      "nodeType": "YulIdentifier",
                      "src": "19773:27:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19773:55:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19773:55:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_struct$_Royalties_$9893_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr_t_struct$_Royalties_$9893_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19502:9:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "19513:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19521:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19529:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19537:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19548:4:50",
                "type": ""
              }
            ],
            "src": "19298:536:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20124:321:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20141:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20156:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20172:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20177:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "20168:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20168:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20181:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "20164:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20164:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20152:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20152:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20134:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20134:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20134:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20205:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20216:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20201:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20201:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20221:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20194:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20194:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20194:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20248:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20259:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20244:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20244:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "20264:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20237:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20237:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20237:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20291:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20302:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20287:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20287:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20307:3:50",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20280:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20280:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20280:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20320:54:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "20346:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20358:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20369:3:50",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20354:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20354:19:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "20328:17:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20328:46:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20320:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "20411:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20423:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20434:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20419:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20419:19:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Royalties",
                      "nodeType": "YulIdentifier",
                      "src": "20383:27:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20383:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20383:56:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_memory_ptr_t_struct$_Royalties_$9859_memory_ptr__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr_t_struct$_Royalties_$9859_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20061:9:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "20072:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "20080:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "20088:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20096:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20104:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20115:4:50",
                "type": ""
              }
            ],
            "src": "19839:606:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20641:14:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20643:10:50",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "20650:3:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20643:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20625:3:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20633:3:50",
                "type": ""
              }
            ],
            "src": "20450:205:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20834:231:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20851:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20862:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20844:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20844:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20844:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20885:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20896:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20881:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20881:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20901:2:50",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20874:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20874:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20874:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20924:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20935:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20920:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20920:18:50"
                      },
                      {
                        "hexValue": "5472616e7366657220746f20706c6174666f726d206665652072656365697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20940:34:50",
                        "type": "",
                        "value": "Transfer to platform fee receive"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20913:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20913:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20913:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20995:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21006:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20991:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20991:18:50"
                      },
                      {
                        "hexValue": "72206661696c65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21011:11:50",
                        "type": "",
                        "value": "r failed."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20984:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20984:39:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20984:39:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21032:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21044:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21055:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21040:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21040:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21032:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_27bf476ffb9cb11b7dd1e159b6058af2ed090c8bdb984a4b0e17d04844ed51cc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20811:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20825:4:50",
                "type": ""
              }
            ],
            "src": "20660:405:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21244:176:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21261:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21272:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21254:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21254:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21254:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21295:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21306:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21291:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21291:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21311:2:50",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21284:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21284:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21284:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21334:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21345:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21330:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21330:18:50"
                      },
                      {
                        "hexValue": "5472616e7366657220746f2073656c6c6572206661696c65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21350:28:50",
                        "type": "",
                        "value": "Transfer to seller failed."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21323:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21323:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21323:56:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21388:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21400:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21411:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21396:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21396:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21388:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7551da239d0b71316f7c4694a6e46074b76966ce6e035c3e477215f7cdbbe220__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21221:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21235:4:50",
                "type": ""
              }
            ],
            "src": "21070:350:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21554:145:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21564:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21576:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21587:2:50",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21572:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21572:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21564:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21606:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21621:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21637:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21642:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "21633:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21633:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21646:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "21629:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21629:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21617:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21617:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21599:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21599:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21599:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21670:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21681:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21666:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21666:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21686:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21659:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21659:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21659:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21515:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21526:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21534:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21545:4:50",
                "type": ""
              }
            ],
            "src": "21425:274:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21917:162:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21927:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21939:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21950:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21935:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21935:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21927:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21991:6:50"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21999:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Royalties",
                      "nodeType": "YulIdentifier",
                      "src": "21963:27:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21963:46:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21963:46:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22046:6:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22058:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22069:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22054:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22054:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Royalties",
                      "nodeType": "YulIdentifier",
                      "src": "22018:27:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22018:55:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22018:55:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Fee_$9943_memory_ptr_t_struct$_Fee_$9943_memory_ptr__to_t_struct$_Fee_$9943_memory_ptr_t_struct$_Fee_$9943_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21878:9:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21889:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21897:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21908:4:50",
                "type": ""
              }
            ],
            "src": "21704:375:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22116:95:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22133:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22140:3:50",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22145:10:50",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "22136:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22136:20:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22126:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22126:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22126:31:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22173:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22176:4:50",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22166:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22166:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22166:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22197:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22200:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "22190:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22190:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22190:15:50"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "22084:127:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22263:89:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22290:22:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22292:16:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22292:18:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22292:18:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22283:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22276:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22276:13:50"
                  },
                  "nodeType": "YulIf",
                  "src": "22273:39:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22321:25:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22332:5:50"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22343:1:50",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "22339:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22339:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22328:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22328:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "22321:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "22245:5:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "22255:3:50",
                "type": ""
              }
            ],
            "src": "22216:136:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22531:182:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22548:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22559:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22541:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22541:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22541:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22582:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22593:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22578:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22578:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22598:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22571:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22571:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22571:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22621:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22632:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22617:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22617:18:50"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22637:34:50",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22610:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22610:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22610:62:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22681:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22693:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22704:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22689:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22689:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22681:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22508:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22522:4:50",
                "type": ""
              }
            ],
            "src": "22357:356:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22750:95:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22767:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22774:3:50",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22779:10:50",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "22770:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22770:20:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22760:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22760:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22760:31:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22807:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22810:4:50",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22800:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22800:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22800:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22831:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22834:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "22824:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22824:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22824:15:50"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "22718:127:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22896:171:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22927:111:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22948:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22955:3:50",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "22960:10:50",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "22951:3:50"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "22951:20:50"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22941:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22941:31:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22941:31:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22992:1:50",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "22995:4:50",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "22985:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22985:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22985:15:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23020:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "23023:4:50",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "23013:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23013:15:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23013:15:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "22916:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "22909:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22909:9:50"
                  },
                  "nodeType": "YulIf",
                  "src": "22906:132:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23047:14:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23056:1:50"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23059:1:50"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "23052:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23052:9:50"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "23047:1:50"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "22881:1:50",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "22884:1:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "22890:1:50",
                "type": ""
              }
            ],
            "src": "22850:217:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23320:144:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23337:3:50"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23346:3:50",
                            "type": "",
                            "value": "240"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23351:4:50",
                            "type": "",
                            "value": "6401"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "23342:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23342:14:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23330:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23330:27:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23330:27:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "23377:3:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23382:1:50",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23373:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23373:11:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "23386:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23366:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23366:27:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23366:27:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "23413:3:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23418:2:50",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23409:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23409:12:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "23423:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23402:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23402:28:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23402:28:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23439:19:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23450:3:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23455:2:50",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23446:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23446:12:50"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "23439:3:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23288:3:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "23293:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23301:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23312:3:50",
                "type": ""
              }
            ],
            "src": "23072:392:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23501:95:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23518:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23525:3:50",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23530:10:50",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "23521:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23521:20:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23511:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23511:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23511:31:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23558:1:50",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23561:4:50",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23551:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23551:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23551:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23582:1:50",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23585:4:50",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23575:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23575:15:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23575:15:50"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "23469:127:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23775:174:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23792:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23803:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23785:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23785:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23785:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23826:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23837:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23822:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23822:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23842:2:50",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23815:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23815:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23815:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23865:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23876:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23861:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23861:18:50"
                      },
                      {
                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23881:26:50",
                        "type": "",
                        "value": "ECDSA: invalid signature"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23854:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23854:54:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23854:54:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23917:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23929:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23940:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23925:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23925:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23917:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23752:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23766:4:50",
                "type": ""
              }
            ],
            "src": "23601:348:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24128:181:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24145:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24156:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24138:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24138:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24138:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24179:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24190:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24175:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24175:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24195:2:50",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24168:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24168:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24168:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24218:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24229:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24214:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24214:18:50"
                      },
                      {
                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24234:33:50",
                        "type": "",
                        "value": "ECDSA: invalid signature length"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24207:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24207:61:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24207:61:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24277:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24289:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24300:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24285:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24285:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24277:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24105:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24119:4:50",
                "type": ""
              }
            ],
            "src": "23954:355:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24488:224:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24505:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24516:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24498:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24498:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24498:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24539:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24550:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24535:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24535:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24555:2:50",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24528:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24528:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24528:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24578:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24589:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24574:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24574:18:50"
                      },
                      {
                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24594:34:50",
                        "type": "",
                        "value": "ECDSA: invalid signature 's' val"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24567:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24567:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24567:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24649:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24660:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24645:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24645:18:50"
                      },
                      {
                        "hexValue": "7565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24665:4:50",
                        "type": "",
                        "value": "ue"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24638:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24638:32:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24638:32:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24679:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24691:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24702:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24687:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24687:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24679:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24465:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24479:4:50",
                "type": ""
              }
            ],
            "src": "24314:398:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24891:224:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24908:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24919:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24901:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24901:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24901:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24942:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24953:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24938:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24938:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24958:2:50",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24931:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24931:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24931:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24981:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24992:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24977:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24977:18:50"
                      },
                      {
                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24997:34:50",
                        "type": "",
                        "value": "ECDSA: invalid signature 'v' val"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24970:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24970:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24970:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25052:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25063:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25048:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25048:18:50"
                      },
                      {
                        "hexValue": "7565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25068:4:50",
                        "type": "",
                        "value": "ue"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25041:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25041:32:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25041:32:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25082:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25094:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25105:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25090:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25090:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25082:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24868:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24882:4:50",
                "type": ""
              }
            ],
            "src": "24717:398:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25333:276:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25343:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25355:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25366:3:50",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25351:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25351:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25343:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25386:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "25397:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25379:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25379:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25379:25:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25424:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25435:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25420:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25420:18:50"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "25440:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25413:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25413:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25413:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25467:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25478:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25463:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25463:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "25483:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25456:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25456:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25456:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25510:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25521:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25506:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25506:18:50"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "25526:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25499:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25499:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25499:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25553:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25564:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25549:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25549:19:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "25574:6:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25590:3:50",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25595:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "25586:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25586:11:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25599:1:50",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "25582:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25582:19:50"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "25570:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25570:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25542:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25542:61:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25542:61:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25270:9:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "25281:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "25289:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "25297:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "25305:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "25313:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25324:4:50",
                "type": ""
              }
            ],
            "src": "25120:489:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25795:217:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25805:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25817:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25828:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25813:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25813:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25805:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25848:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "25859:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25841:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25841:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25841:25:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25886:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25897:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25882:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25882:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "25906:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25914:4:50",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "25902:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25902:17:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25875:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25875:45:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25875:45:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25940:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25951:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25936:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25936:18:50"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "25956:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25929:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25929:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25929:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25983:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25994:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25979:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25979:18:50"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "25999:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25972:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25972:34:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25972:34:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25740:9:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "25751:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "25759:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "25767:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "25775:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25786:4:50",
                "type": ""
              }
            ],
            "src": "25614:398:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0120)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_struct_Metadata(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x0120) { revert(0, 0) }\n        value := allocate_memory()\n        mstore(value, calldataload(headStart))\n        mstore(add(value, 32), calldataload(add(headStart, 32)))\n        mstore(add(value, 64), calldataload(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_address(add(headStart, 96)))\n        mstore(add(value, 128), abi_decode_address(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_address(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_address(add(headStart, 192)))\n        mstore(add(value, 224), calldataload(add(headStart, 224)))\n        let _1 := 256\n        let offset := calldataload(add(headStart, _1))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        mstore(add(value, _1), abi_decode_string(add(headStart, offset), end))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Metadata_$9938_memory_ptrt_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_struct_Metadata(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_struct$_Fee_$9943_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_address(headStart))\n        mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_struct$_Metadata_$9938_memory_ptrt_uint256t_bytes_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_struct_Metadata(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"BuyNfts: Can't Buy Zero NFTs\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"BuyNfts: Exceeds max quantity\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_32bc38a528a1742431d1db4a30d337d8ee9bb9ef55ca3ee87b0f7837d96439c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"BuyNfts: Insufficient fund\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9039ff3629dfc047e7c378a0927995387665464bb6450471a1ac3dad4e66b6b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"BuyNfts: Less allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_10032e8ce005db737e680718e0a2839e155b031b8b697283f48cf4f56cfc2ead__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Restricted to owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_aa271b88c32d3234da7d07fc7f30dc88fba182c0fa298864814cf342fa288714__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"BuyNfts: Zero Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f30f61fef552400ebf434d0d7eea0d1b7a24f066b0708c0e3ce136b7ec1f076__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BuyNfts: Wont Accept Zero Quanti\")\n        mstore(add(headStart, 96), \"ty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9d60ac7755a8b00452aed6883f99d4a91e3ac129fd50a3028870f20b507a36b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"BuyNfts: Invalid NFT Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_78f80ddbc2671690a6507ba913241694debc57b2eb824899e3b042a8bdb29cdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"BuyNfts : Owner Is Not Allowed T\")\n        mstore(add(headStart, 96), \"o Buy Nfts\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7406758b822a8687bbf850ced7a7db3a20f055ad5fc6908d4afbd26c4dacf812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Sell Nfts: Zero Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_885760e13b84a1d9b8569669da08725ccaee701f4007f864da65857d61693345__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"BuyNfts: Admin Cannot Buy Nfts\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2612f3887621795a8aa2d43a51ec307bae971707393304aeba72332cf413c82a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"BuyNfts: Wont Accept Zero Price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9183a2843d187209da0ee338ff08b4db3558bce1e64c72ccd7923d89d054953d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"NFT Signature verification faile\")\n        mstore(add(headStart, 96), \"d!\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_712c8bde25a5526dd8d8d797eba631a3fbc2b43878da80d60a478dc1d0627030__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Fee: max allowed perecentage is \")\n        mstore(add(headStart, 96), \"50\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_7c96d5fea898c152e4c149cec6c4894771bf6d21beb569ae431fa06be2aa1783__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"isNFT: Zero Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function array_dataslot_bytes_storage_ptr(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_bytes_storage_ptr(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_uint256_t_uint256_t_address_t_address_t_address_t_address_t_uint256_t_bytes32__to_t_bytes32_t_uint256_t_uint256_t_uint256_t_address_t_address_t_address_t_address_t_uint256_t_bytes32__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n        mstore(add(headStart, 224), and(value7, _1))\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n    }\n    function abi_encode_struct_Royalties(value, pos)\n    {\n        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_struct$_Royalties_$9893_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr_t_struct$_Royalties_$9893_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_string(value2, add(headStart, 160))\n        abi_encode_struct_Royalties(value3, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes_memory_ptr_t_struct$_Royalties_$9859_memory_ptr__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr_t_struct$_Royalties_$9859_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 192)\n        tail := abi_encode_string(value3, add(headStart, 192))\n        abi_encode_struct_Royalties(value4, add(headStart, 128))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_27bf476ffb9cb11b7dd1e159b6058af2ed090c8bdb984a4b0e17d04844ed51cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer to platform fee receive\")\n        mstore(add(headStart, 96), \"r failed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7551da239d0b71316f7c4694a6e46074b76966ce6e035c3e477215f7cdbbe220__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Transfer to seller failed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_struct$_Fee_$9943_memory_ptr_t_struct$_Fee_$9943_memory_ptr__to_t_struct$_Fee_$9943_memory_ptr_t_struct$_Fee_$9943_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        abi_encode_struct_Royalties(value0, headStart)\n        abi_encode_struct_Royalties(value1, add(headStart, 64))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 'v' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1528:14300:48:-:0;;;2472:45;;;-1:-1:-1;;;;;;2547:46:48;;;;;3382:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2455:602:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2455:602:40;;;;1701:1:28;1806:7;:22;2541::40;;;;2778:25;;;;2597;2813:31;;;;2873:13;2854:32;;2455:602;;;2651:117;2923:58;2651:117;2541:22;2597:25;3633:73;;;;;;1234:25:50;;;1275:18;;;1268:34;;;1318:18;;;1311:34;;;3677:13:40;1361:18:50;;;1354:34;3700:4:40;1404:19:50;;;1397:61;3597:7:40;;1206:19:50;;3633:73:40;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;;2923:58;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;3496:29:48::1;::::0;-1:-1:-1;3512:12:48;;-1:-1:-1;;3496:15:48::1;:29::i;:::-;3531:42;2072:4:22;3562:10:48;3531;:42::i;:::-;3579:34;2445:23;3602:10:::0;3579::::1;:34::i;:::-;3382:236:::0;;1528:14300;;10301:185;10406:4;10374:12;:28;;;:36;;10366:83;;;;-1:-1:-1;;;10366:83:48;;1671:2:50;10366:83:48;;;1653:21:50;1710:2;1690:18;;;1683:30;1749:34;1729:18;;;1722:62;-1:-1:-1;;;1800:18:50;;;1793:32;1842:19;;10366:83:48;;;;;;;;10455:26;;:11;:26;;-1:-1:-1;;;;;;10455:26:48;-1:-1:-1;;;;;10455:26:48;;;;;;;;;;;;;;10301:185::o;6824:110:22:-;6902:25;6913:4;6919:7;6902:10;:25::i;:::-;6824:110;;:::o;1978:166:23:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;7474:233:22:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:22;;;;;;;;;;;;7552:149;;7595:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7595:29:22;;;;;;;;;:36;;-1:-1:-1;;7595:36:22;7627:4;7595:36;;;7677:12;719:10:37;;640:96;7677:12:22;-1:-1:-1;;;;;7650:40:22;7668:7;-1:-1:-1;;;;;7650:40:22;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;8028:150:44:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:44;;8121:4;:50::i;:::-;8114:57;;8028:150;;;;;:::o;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:44;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:44;2488:12;;14:177:50;93:13;;-1:-1:-1;;;;;135:31:50;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:774::-;296:6;304;348:9;339:7;335:23;378:2;374;370:11;367:31;;;394:1;391;384:12;367:31;418:4;414:2;410:13;407:33;;;436:1;433;426:12;407:33;-1:-1:-1;469:4:50;463:11;;;501:17;;-1:-1:-1;;;;;533:34:50;;569:22;;;530:62;527:185;;;634:10;629:3;625:20;622:1;615:31;669:4;666:1;659:15;697:4;694:1;687:15;527:185;728:4;721:24;769:40;799:9;769:40;:::i;:::-;754:56;;864:2;849:18;;;843:25;826:15;;;819:50;761:6;-1:-1:-1;913:51:50;958:4;943:20;;913:51;:::i;:::-;903:61;;196:774;;;;;:::o;1469:398::-;1528:14300:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1528:14300:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9707:162;;;;;;;;;;-1:-1:-1;9707:162:48;;;;;:::i;:::-;;:::i;:::-;;;470:14:50;;463:22;445:41;;433:2;418:18;9707:162:48;;;;;;;;4391:129:22;;;;;;;;;;-1:-1:-1;4391:129:22;;;;;:::i;:::-;4465:7;4491:12;;;;;;;;;;:22;;;;4391:129;;;;828:25:50;;;816:2;801:18;4391:129:22;682:177:50;4816:145:22;;;;;;;;;;-1:-1:-1;4816:145:22;;;;;:::i;:::-;;:::i;:::-;;5925:214;;;;;;;;;;-1:-1:-1;5925:214:22;;;;;:::i;:::-;;:::i;2701:253:48:-;;;;;;;;;;;;2752:202;2701:253;;5602:1205;;;;;;:::i;:::-;;:::i;2408:60::-;;;;;;;;;;;;2445:23;2408:60;;3738:105;;;;;;;;;;-1:-1:-1;3738:105:48;;;;;:::i;:::-;;:::i;7493:867::-;;;;;;:::i;:::-;;:::i;1431:151:23:-;;;;;;;;;;-1:-1:-1;1431:151:23;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;6145:32:50;;;6127:51;;6115:2;6100:18;1431:151:23;5981:203:50;2895:145:22;;;;;;;;;;-1:-1:-1;2895:145:22;;;;;:::i;:::-;;:::i;2027:49::-;;;;;;;;;;-1:-1:-1;2027:49:22;2072:4;2027:49;;1750:140:23;;;;;;;;;;-1:-1:-1;1750:140:23;;;;;:::i;:::-;;:::i;5241:147:22:-;;;;;;;;;;-1:-1:-1;5241:147:22;;;;;:::i;:::-;;:::i;9707:162:48:-;9809:4;9828:36;9852:11;9828:23;:36::i;:::-;9821:43;9707:162;-1:-1:-1;;9707:162:48:o;4816:145:22:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;5925:214::-;-1:-1:-1;;;;;6020:23:22;;719:10:37;6020:23:22;6012:83;;;;-1:-1:-1;;;6012:83:22;;6573:2:50;6012:83:22;;;6555:21:50;6612:2;6592:18;;;6585:30;6651:34;6631:18;;;6624:62;-1:-1:-1;;;6702:18:50;;;6695:45;6757:19;;6012:83:22;;;;;;;;;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;5602:1205:48:-;1744:1:28;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:28;;6989:2:50;2317:63:28;;;6971:21:50;7028:2;7008:18;;;7001:30;7067:33;7047:18;;;7040:61;7118:18;;2317:63:28;6787:355:50;2317:63:28;1744:1;2455:18;;5759:23:48;5751:64:::1;;;::::0;-1:-1:-1;;;5751:64:48;;7349:2:50;5751:64:48::1;::::0;::::1;7331:21:50::0;7388:2;7368:18;;;7361:30;7427;7407:18;;;7400:58;7475:18;;5751:64:48::1;7147:352:50::0;5751:64:48::1;5852:9;:18;;;5829:19;:41;;5821:83;;;::::0;-1:-1:-1;;;5821:83:48;;7706:2:50;5821:83:48::1;::::0;::::1;7688:21:50::0;7745:2;7725:18;;;7718:30;7784:31;7764:18;;;7757:59;7833:18;;5821:83:48::1;7504:353:50::0;5821:83:48::1;5911:269;5934:9;:17;;;5959:9;:15;;;5982:9;:18;;;6008:9;:20;;;6036:9;:16;;;6060:9;:20;;;6088:9;:25;;;6121:9;:27;;;6156:9;:18;;;5911:15;:269::i;:::-;6187:33;6198:9;6209:10;;6187;:33::i;:::-;-1:-1:-1::0;6247:15:48::1;::::0;::::1;::::0;6227:17:::1;::::0;6247:40:::1;::::0;6267:19;6247::::1;:40::i;:::-;6330:20;::::0;::::1;::::0;6227:60;;-1:-1:-1;6309:10:48::1;::::0;-1:-1:-1;;;;;6330:34:48::1;6326:365;;6395:9;6382;:22;;6374:61;;;::::0;-1:-1:-1;;;6374:61:48;;8064:2:50;6374:61:48::1;::::0;::::1;8046:21:50::0;8103:2;8083:18;;;8076:30;8142:28;8122:18;;;8115:56;8188:18;;6374:61:48::1;7862:350:50::0;6374:61:48::1;6326:365;;;6508:20;::::0;::::1;::::0;6501:60:::1;::::0;-1:-1:-1;;;6501:60:48;;-1:-1:-1;;;;;8447:15:50;;;6501:60:48::1;::::0;::::1;8429:34:50::0;6555:4:48::1;8479:18:50::0;;;8472:43;6565:9:48;;6501:38:::1;::::0;::::1;::::0;8364:18:50;;6501:60:48::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;6493:109;;;::::0;-1:-1:-1;;;6493:109:48;;8917:2:50;6493:109:48::1;::::0;::::1;8899:21:50::0;8956:2;8936:18;;;8929:30;8995:25;8975:18;;;8968:53;9038:18;;6493:109:48::1;8715:347:50::0;6493:109:48::1;6617:20;::::0;::::1;::::0;6610:74:::1;::::0;-1:-1:-1;;;6610:74:48;;-1:-1:-1;;;;;9325:15:50;;;6610:74:48::1;::::0;::::1;9307:34:50::0;6667:4:48::1;9357:18:50::0;;;9350:43;9409:18;;;9402:34;;;6610:41:48;;::::1;::::0;::::1;::::0;9242:18:50;;6610:74:48::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6326:365;6696:106;6705:9;:17;;;6724:9;:20;;;6746:9;:16;;;6764:9;6775:5;6782:19;6696:8;:106::i;:::-;-1:-1:-1::0;;1701:1:28;2628:7;:22;-1:-1:-1;;;;5602:1205:48:o;3738:105::-;3104:10;:8;:10::i;:::-;3096:42;;;;-1:-1:-1;;;3096:42:48;;9931:2:50;3096:42:48;;;9913:21:50;9970:2;9950:18;;;9943:30;-1:-1:-1;;;9989:18:50;;;9982:49;10048:18;;3096:42:48;9729:343:50;3096:42:48;3809:29:::1;3825:12;3809:15;:29::i;:::-;3738:105:::0;:::o;7493:867::-;3104:10;:8;:10::i;:::-;3096:42;;;;-1:-1:-1;;;3096:42:48;;9931:2:50;3096:42:48;;;9913:21:50;9970:2;9950:18;;;9943:30;-1:-1:-1;;;9989:18:50;;;9982:49;10048:18;;3096:42:48;9729:343:50;3096:42:48;1744:1:28::1;2325:7:::0;::::1;:19:::0;2317:63:::1;;;::::0;-1:-1:-1;;;2317:63:28;;6989:2:50;2317:63:28::1;::::0;::::1;6971:21:50::0;7028:2;7008:18;;;7001:30;7067:33;7047:18;;;7040:61;7118:18;;2317:63:28::1;6787:355:50::0;2317:63:28::1;1744:1;2455:18:::0;;7686:23:48;7678:64:::2;;;::::0;-1:-1:-1;;;7678:64:48;;7349:2:50;7678:64:48::2;::::0;::::2;7331:21:50::0;7388:2;7368:18;;;7361:30;7427;7407:18;;;7400:58;7475:18;;7678:64:48::2;7147:352:50::0;7678:64:48::2;7779:9;:18;;;7756:19;:41;;7748:83;;;::::0;-1:-1:-1;;;7748:83:48;;7706:2:50;7748:83:48::2;::::0;::::2;7688:21:50::0;7745:2;7725:18;;;7718:30;7784:31;7764:18;;;7757:59;7833:18;;7748:83:48::2;7504:353:50::0;7748:83:48::2;7838:269;7861:9;:17;;;7886:9;:15;;;7909:9;:18;;;7935:9;:20;;;7963:9;:16;;;7987:9;:20;;;8015:9;:25;;;8048:9;:27;;;8083:9;:18;;;7838:15;:269::i;:::-;8114:33;8125:9;8136:10;;8114;:33::i;:::-;-1:-1:-1::0;8174:15:48::2;::::0;::::2;::::0;8154:17:::2;::::0;8174:40:::2;::::0;8194:19;8174::::2;:40::i;:::-;8154:60;;8220:13;8236:6;8220:22;;8249:106;8258:9;:17;;;8277:9;:20;;;8299:9;:16;;;8317:9;8328:5;8335:19;8249:8;:106::i;:::-;-1:-1:-1::0;;1701:1:28::1;2628:7;:22:::0;-1:-1:-1;;;;;7493:867:48:o;1431:151:23:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:23:o;2895:145:22:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:22;;;;;;;;;;;;;;;2895:145::o;1750:140:23:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;5241:147:22:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;7474:233::-:0;7557:22;7565:4;7571:7;7557;:22::i;:::-;7552:149;;7595:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7595:29:22;;;;;;;;;:36;;-1:-1:-1;;7595:36:22;7627:4;7595:36;;;7677:12;719:10:37;;640:96;7677:12:22;-1:-1:-1;;;;;7650:40:22;7668:7;-1:-1:-1;;;;;7650:40:22;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;8028:150:44:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:44;;8121:4;:50::i;634:212:23:-;719:4;-1:-1:-1;;;;;;742:57:23;;-1:-1:-1;;;742:57:23;;:97;;;803:36;827:11;803:23;:36::i;3334:103:22:-;3400:30;3411:4;719:10:37;3400::22;:30::i;1978:166:23:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;4357:940:48:-;-1:-1:-1;;;;;4658:20:48;;;4628:27;4658:20;;;:7;:20;;;;;;;;:30;;;;;;;;:39;;;;;;;;;4829:19;;;;:23;4825:468;;4885:9;4862:10;:19;;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;4825:468:48;;-1:-1:-1;4825:468:48;;4915:29;;;4952:16;;;:25;;;4985:19;;;:31;;;5024:21;;;:35;;-1:-1:-1;;;;;5024:35:48;;;-1:-1:-1;;;;;;5024:35:48;;;;;;;5067:17;;;:27;;;;;;;;;;;5102:21;;;:35;;;;;;;;;;;5145:26;;;:45;;;;;;;;;;;;;;;5198:28;;;:49;;;5255:31;;;;:19;;;;:31;;;;;:::i;:::-;;4825:468;4622:675;4357:940;;;;;;;;;:::o;14962:864::-;15057:4;15077:10;15069:58;;;;-1:-1:-1;;;15069:58:48;;10544:2:50;15069:58:48;;;10526:21:50;10583:2;10563:18;;;10556:30;-1:-1:-1;;;10602:18:50;;;10595:51;10663:18;;15069:58:48;10342:345:50;15069:58:48;15161:1;15141:8;:17;;;:21;15133:68;;;;-1:-1:-1;;;15133:68:48;;10894:2:50;15133:68:48;;;10876:21:50;10933:2;10913:18;;;10906:30;10972:34;10952:18;;;10945:62;-1:-1:-1;;;11023:18:50;;;11016:32;11065:19;;15133:68:48;10692:398:50;15133:68:48;15215:27;15222:8;:19;;;15215:6;:27::i;:::-;15207:68;;;;-1:-1:-1;;;15207:68:48;;11297:2:50;15207:68:48;;;11279:21:50;11336:2;11316:18;;;11309:30;11375;11355:18;;;11348:58;11423:18;;15207:68:48;11095:352:50;15207:68:48;15303:15;;;;-1:-1:-1;;;;;15289:29:48;:10;:29;15281:84;;;;-1:-1:-1;;;15281:84:48;;11654:2:50;15281:84:48;;;11636:21:50;11693:2;11673:18;;;11666:30;11732:34;11712:18;;;11705:62;-1:-1:-1;;;11783:18:50;;;11776:40;11833:19;;15281:84:48;11452:406:50;15281:84:48;15379:15;;;;-1:-1:-1;;;;;15379:29:48;15371:65;;;;-1:-1:-1;;;15371:65:48;;12065:2:50;15371:65:48;;;12047:21:50;12104:2;12084:18;;;12077:30;12143:25;12123:18;;;12116:53;12186:18;;15371:65:48;11863:347:50;15371:65:48;15451:10;:8;:10::i;:::-;15450:11;15442:54;;;;-1:-1:-1;;;15442:54:48;;12417:2:50;15442:54:48;;;12399:21:50;12456:2;12436:18;;;12429:30;12495:32;12475:18;;;12468:60;12545:18;;15442:54:48;12215:354:50;15442:54:48;15527:1;15510:8;:14;;;:18;15502:62;;;;-1:-1:-1;;;15502:62:48;;12776:2:50;15502:62:48;;;12758:21:50;12815:2;12795:18;;;12788:30;12854:33;12834:18;;;12827:61;12905:18;;15502:62:48;12574:355:50;15502:62:48;15571:14;15588:96;15602:70;15617:8;:16;;;15635:8;:15;;;15652:8;:19;;;15602:14;:70::i;:::-;15674:9;;15588:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15588:13:48;;-1:-1:-1;;;15588:96:48:i;:::-;15571:113;;15698:27;2445:23;15718:6;15698:7;:27::i;:::-;:66;;;-1:-1:-1;15729:35:48;2072:4:22;15757:6:48;15729:7;:35::i;:::-;15690:113;;;;-1:-1:-1;;;15690:113:48;;13136:2:50;15690:113:48;;;13118:21:50;13175:2;13155:18;;;13148:30;13214:34;13194:18;;;13187:62;-1:-1:-1;;;13265:18:50;;;13258:32;13307:19;;15690:113:48;12934:398:50;15690:113:48;-1:-1:-1;15817:4:48;;14962:864;-1:-1:-1;;;;14962:864:48:o;3465:96:43:-;3523:7;3549:5;3553:1;3549;:5;:::i;12123:854:48:-;-1:-1:-1;;;;;12341:20:48;;;12305:33;12341:20;;;:7;:20;;;;;;;;:30;;;;;;;;:39;;;;;;;;;;12479:32;;;;12519:34;;;;12561:25;;;12387:205;;12341:39;;12387:205;;12403:6;;12349:11;;12362:8;;12452:19;;12479:32;;;;;12519:34;;12561:25;12387:205;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:205::i;:::-;12618:27;;;;12598:57;;12606:10;;-1:-1:-1;;;;;12618:27:48;12647:7;12598;:57::i;:::-;12718:19;12690:16;:25;;;:47;;;;:::i;:::-;12662:25;;;:75;;;12777:1;12748:30;12744:97;;-1:-1:-1;;;;;12795:20:48;;;;;;;:7;:20;;;;;;;;:30;;;;;;;;:39;;;;;;;;;;;12788:46;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12788:46:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12795:20;12788:46;:::i;:::-;;;12744:97;12891:22;;;;12915:27;;;;12851:121;;;14256:25:50;;;-1:-1:-1;;;;;12915:27:48;;;14350:2:50;14335:18;;14328:43;14407:15;;;14387:18;;;14380:43;14454:2;14439:18;;14432:34;;;12851:121:48;;;;;;;;;12859:8;;12851:121;;;;;14243:3:50;12851:121:48;;;12299:678;12123:854;;;;;;:::o;9991:147::-;10034:4;10054:33;2445:23;719:10:37;2895:145:22;:::i;10054:33:48:-;:78;;;-1:-1:-1;10091:41:48;2072:4:22;719:10:37;2895:145:22;:::i;10091:41:48:-;10046:87;;9991:147;:::o;10301:185::-;10406:4;10374:12;:28;;;:36;;10366:83;;;;-1:-1:-1;;;10366:83:48;;14679:2:50;10366:83:48;;;14661:21:50;14718:2;14698:18;;;14691:30;14757:34;14737:18;;;14730:62;-1:-1:-1;;;14808:18:50;;;14801:32;14850:19;;10366:83:48;14477:398:50;10366:83:48;10455:26;;:11;:26;;-1:-1:-1;;;;;;10455:26:48;-1:-1:-1;;;;;10455:26:48;;;;;;;;;;;;;;10301:185::o;9286:156:44:-;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;8829:115::-;8892:7;8918:19;8926:3;4444:18;;4362:107;2113:404;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:44;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:44;2488:12;;2606:202:22;2691:4;-1:-1:-1;;;;;;2714:47:22;;-1:-1:-1;;;2714:47:22;;:87;;-1:-1:-1;;;;;;;;;;937:40:41;;;2765:36:22;829:155:41;3718:492:22;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:22;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:22;;;;;;;;;;-1:-1:-1;;;3844:349:22;;;;;;;:::i;7878:234::-;7961:22;7969:4;7975:7;7961;:22::i;:::-;7957:149;;;8031:5;7999:12;;;;;;;;;;;-1:-1:-1;;;;;7999:29:22;;;;;;;;;;:37;;-1:-1:-1;;7999:37:22;;;8055:40;719:10:37;;7999:12:22;;8055:40;;8031:5;8055:40;7878:234;;:::o;8346:156:44:-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:44;;8442:7;:53::i;13149:269:48:-;13209:4;-1:-1:-1;;;;;13229:25:48;;13221:57;;;;-1:-1:-1;;;13221:57:48;;16624:2:50;13221:57:48;;;16606:21:50;16663:2;16643:18;;;16636:30;-1:-1:-1;;;16682:18:50;;;16675:49;16741:18;;13221:57:48;16422:343:50;13221:57:48;13331:17;;13292:57;;-1:-1:-1;;;13292:57:48;;-1:-1:-1;;;;;13292:38:48;;;;;:57;;13331:17;;;13292:57;;-1:-1:-1;;;;;;16932:33:50;;;;16914:52;;16902:2;16887:18;;16770:202;13292:57:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:120;;;-1:-1:-1;13393:18:48;;13353:59;;-1:-1:-1;;;13353:59:48;;13393:18;;;;;;-1:-1:-1;;;;;;16932:33:50;13393:18:48;13353:59;;16914:52:50;-1:-1:-1;;;;;13353:39:48;;;;;16887:18:50;;13353:59:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13652:660::-;-1:-1:-1;;;;;13813:19:48;;;13768:7;13813:19;;;:7;:19;;;;;;;;:28;;;;;;;;:36;;;;;;;;;;;13994:16;;;;14024:19;;;;14057:21;;;;14092:17;;;;14123:21;;;;14158:26;;;;14198:28;;;;14240:37;;13768:7;;13813:36;;13868:439;;2752:202;;13833:7;;14024:19;;14057:21;;;14092:17;;;14123:21;;;14158:26;;;;14240:37;;14256:19;;;;14240:37;:::i;:::-;;;;;;;;;;13915:374;;;18614:25:50;;;;18655:18;;18648:34;;;;18698:18;;;18691:34;;;;18741:18;;;18734:34;;;;-1:-1:-1;;;;;18843:15:50;;;18822:19;;;18815:44;18896:15;;;18875:19;;;18868:44;18949:15;;18928:19;;;18921:44;19002:15;18981:19;;;18974:44;19034:19;;;19027:35;19078:19;;;19071:35;;;;18586:19;;13915:374:48;;;;;;;;;;;;13894:405;;;;;;13868:16;:439::i;:::-;13855:452;13652:660;-1:-1:-1;;;;;13652:660:48:o;14505:174::-;14591:7;14606:14;14623:32;14637:6;14645:9;14623:13;:32::i;:::-;14606:49;14505:174;-1:-1:-1;;;;14505:174:48:o;8763:758::-;9027:17;;8988:57;;-1:-1:-1;;;8988:57:48;;-1:-1:-1;;;;;8988:38:48;;;;;:57;;9027:17;;;8988:57;;-1:-1:-1;;;;;;16932:33:50;;;;16914:52;;16902:2;16887:18;;16770:202;8988:57:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8984:533;;;9091:63;;;;;;;;-1:-1:-1;;;;;9091:63:48;;;;;;;;;;;9162:67;;-1:-1:-1;;;9162:67:48;;9091:63;;9162:24;;;;;:67;;9187:9;;9198:8;;9208:9;;9091:63;;9162:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9047:189;8984:533;;;9286:18;;9246:59;;-1:-1:-1;;;9246:59:48;;9286:18;;;;;;-1:-1:-1;;;;;;16932:33:50;9286:18:48;9246:59;;16914:52:50;-1:-1:-1;;;;;9246:39:48;;;;;16887:18:50;;9246:59:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9242:275;;;9352:64;;;;;;;;-1:-1:-1;;;;;9352:64:48;;;;;;;;;;;9424:86;;-1:-1:-1;;;9424:86:48;;9352:64;;9424:25;;;;;:86;;9450:9;;9461:8;;9471:9;;9488;;9352:64;;9424:86;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9307:210;9242:275;8763:758;;;;;;;:::o;10667:1127::-;10826:27;;10767:20;;;;10826:31;10822:119;;10895:27;;10884:50;;10928:5;;10884:39;;:6;;:10;:39::i;:::-;:43;;:50::i;:::-;10867:67;;10822:119;10961:26;:6;10972:14;10961:10;:26::i;:::-;10946:41;-1:-1:-1;;;;;;10998:23:48;;10994:702;;11035:11;:20;-1:-1:-1;;;;;11035:20:48;:34;;;;:56;;;11090:1;11073:14;:18;11035:56;11031:276;;;11151:11;:20;11143:63;;11104:33;;-1:-1:-1;;;;;11151:20:48;;11186:14;;11104:33;11143:63;11104:33;11143:63;11186:14;11151:20;11143:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11103:103;;;11224:28;11216:82;;;;-1:-1:-1;;;11216:82:48;;20862:2:50;11216:82:48;;;20844:21:50;20901:2;20881:18;;;20874:30;20940:34;20920:18;;;20913:62;-1:-1:-1;;;20991:18:50;;;20984:39;21040:19;;11216:82:48;20660:405:50;11216:82:48;11093:214;11031:276;11315:28;11357:7;-1:-1:-1;;;;;11349:21:48;11379:12;11349:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11314:83;;;11413:23;11405:62;;;;-1:-1:-1;;;11405:62:48;;21272:2:50;11405:62:48;;;21254:21:50;21311:2;21291:18;;;21284:30;21350:28;21330:18;;;21323:56;21396:18;;11405:62:48;21070:350:50;11405:62:48;11023:451;10994:702;;;11492:11;:20;-1:-1:-1;;;;;11492:20:48;:34;;;;:56;;;11547:1;11530:14;:18;11492:56;11488:145;;;11587:11;:20;;11560:64;;-1:-1:-1;;;11560:64:48;;-1:-1:-1;;;;;11587:20:48;;;11560:64;;;21599:51:50;;;;21666:18;;;21659:34;;;11560:26:48;;;;;21572:18:50;;11560:64:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11488:145;11640:49;;-1:-1:-1;;;11640:49:48;;-1:-1:-1;;;;;21617:32:50;;;11640:49:48;;;21599:51:50;21666:18;;;21659:34;;;11640:26:48;;;;;21572:18:50;;11640:49:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10994:702;11719:26;;;;;;;;-1:-1:-1;;;;;11719:26:48;;;;;;;;;;;;11747:41;;;;;;;11751:11;:20;;;;11747:41;;;;;;;11706:83;;;;;;11719:26;11706:83;:::i;:::-;;;;;;;;10761:1033;;10667:1127;;;:::o;4811:118:44:-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;1652:441:38:-;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:38;;1752:47;;-1:-1:-1;;;1809:6:38;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1809:15:38;;;;;;;;;-1:-1:-1;;;1834:6:38;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1834:15:38;;;;;;;;-1:-1:-1;1864:9:38;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;-1:-1:-1;;;1943:5:38;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1918:37:38;;;;;;;;-1:-1:-1;1979:1:38;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:38;;2000:55;;;;-1:-1:-1;;;2000:55:38;;22559:2:50;2000:55:38;;;22541:21:50;;;22578:18;;;22571:30;22637:34;22617:18;;;22610:62;22689:18;;2000:55:38;22357:356:50;2685:1388:44;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:44;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;4339:165:40;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;9320:57:39;;-1:-1:-1;;;9320:57:39;;;23330:27:50;23373:11;;;23366:27;;;23409:12;;;23402:28;;;9284:7:39;;23446:12:50;;9320:57:39;;;;;;;;;;;;9310:68;;;;;;9303:75;;9191:194;;;;;4402:227;4480:7;4500:17;4519:18;4541:27;4552:4;4558:9;4541:10;:27::i;:::-;4499:69;;;;4578:18;4590:5;4578:11;:18::i;:::-;-1:-1:-1;4613:9:39;4402:227;-1:-1:-1;;;4402:227:39:o;3850:96:43:-;3908:7;3934:5;3938:1;3934;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;3143:308:40:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:40;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:40;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:40;;;3392:10;3633:73;;;;25379:25:50;;;;3404:12:40;25420:18:50;;;25413:34;3418:15:40;25463:18:50;;;25456:34;3677:13:40;25506:18:50;;;25499:34;3700:4:40;25549:19:50;;;;25542:61;;;;3633:73:40;;;;;;;;;;25351:19:50;;;;3633:73:40;;;3623:84;;;;;;9991:147:48:o;2243:1373:39:-;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:1060;;2890:4;2875:20;;2869:27;2939:4;2924:20;;2918:27;2996:4;2981:20;;2975:27;2592:9;2967:36;3037:25;3048:4;2967:36;2869:27;2918;3037:10;:25::i;:::-;3030:32;;;;;;;;;2550:1060;3083:9;:16;3103:2;3083:22;3079:531;;3399:4;3384:20;;3378:27;3449:4;3434:20;;3428:27;3489:23;3500:4;3378:27;3428;3489:10;:23::i;:::-;3482:30;;;;;;;;3079:531;-1:-1:-1;3559:1:39;;-1:-1:-1;3563:35:39;3079:531;2243:1373;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;766:34;;-1:-1:-1;;;766:34:39;;23803:2:50;766:34:39;;;23785:21:50;23842:2;23822:18;;;23815:30;23881:26;23861:18;;;23854:54;23925:18;;766:34:39;23601:348:50;708:465:39;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;881:41;;-1:-1:-1;;;881:41:39;;24156:2:50;881:41:39;;;24138:21:50;24195:2;24175:18;;;24168:30;24234:33;24214:18;;;24207:61;24285:18;;881:41:39;23954:355:50;817:356:39;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;998:44;;-1:-1:-1;;;998:44:39;;24516:2:50;998:44:39;;;24498:21:50;24555:2;24535:18;;;24528:30;24594:34;24574:18;;;24567:62;-1:-1:-1;;;24645:18:50;;;24638:32;24687:19;;998:44:39;24314:398:50;939:234:39;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;1118:44;;-1:-1:-1;;;1118:44:39;;24919:2:50;1118:44:39;;;24901:21:50;24958:2;24938:18;;;24931:30;24997:34;24977:18;;;24970:62;-1:-1:-1;;;25048:18:50;;;25041:32;25090:19;;1118:44:39;24717:398:50;5810:1603:39;5936:7;;6860:66;6847:79;;6843:161;;;-1:-1:-1;6958:1:39;;-1:-1:-1;6962:30:39;6942:51;;6843:161;7017:1;:7;;7022:2;7017:7;;:18;;;;;7028:1;:7;;7033:2;7028:7;;7017:18;7013:100;;;-1:-1:-1;7067:1:39;;-1:-1:-1;7071:30:39;7051:51;;7013:100;7224:24;;;7207:14;7224:24;;;;;;;;;25841:25:50;;;25914:4;25902:17;;25882:18;;;25875:45;;;;25936:18;;;25929:34;;;25979:18;;;25972:34;;;7224:24:39;;25813:19:50;;7224:24:39;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7224:24:39;;-1:-1:-1;;7224:24:39;;;-1:-1:-1;;;;;;;7262:20:39;;7258:101;;7314:1;7318:29;7298:50;;;;;;;7258:101;7377:6;-1:-1:-1;7385:20:39;;-1:-1:-1;5810:1603:39;;;;;;;;:::o;4883:336::-;4993:7;;-1:-1:-1;;;;;5038:80:39;;4993:7;5144:25;5160:3;5145:18;;;5167:2;5144:25;:::i;:::-;5128:42;;5187:25;5198:4;5204:1;5207;5210;5187:10;:25::i;:::-;5180:32;;;;;;4883:336;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:50;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:50;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:50;;497:180;-1:-1:-1;497:180:50:o;864:173::-;932:20;;-1:-1:-1;;;;;981:31:50;;971:42;;961:70;;1027:1;1024;1017:12;961:70;864:173;;;:::o;1042:254::-;1110:6;1118;1171:2;1159:9;1150:7;1146:23;1142:32;1139:52;;;1187:1;1184;1177:12;1139:52;1223:9;1210:23;1200:33;;1252:38;1286:2;1275:9;1271:18;1252:38;:::i;:::-;1242:48;;1042:254;;;;;:::o;1301:127::-;1362:10;1357:3;1353:20;1350:1;1343:31;1393:4;1390:1;1383:15;1417:4;1414:1;1407:15;1433:250;1500:2;1494:9;1542:6;1530:19;;1579:18;1564:34;;1600:22;;;1561:62;1558:88;;;1626:18;;:::i;:::-;1662:2;1655:22;1433:250;:::o;1688:719::-;1731:5;1784:3;1777:4;1769:6;1765:17;1761:27;1751:55;;1802:1;1799;1792:12;1751:55;1838:6;1825:20;1864:18;1901:2;1897;1894:10;1891:36;;;1907:18;;:::i;:::-;1982:2;1976:9;1950:2;2036:13;;-1:-1:-1;;2032:22:50;;;2056:2;2028:31;2024:40;2012:53;;;2080:18;;;2100:22;;;2077:46;2074:72;;;2126:18;;:::i;:::-;2166:10;2162:2;2155:22;2201:2;2193:6;2186:18;2247:3;2240:4;2235:2;2227:6;2223:15;2219:26;2216:35;2213:55;;;2264:1;2261;2254:12;2213:55;2328:2;2321:4;2313:6;2309:17;2302:4;2294:6;2290:17;2277:54;2375:1;2368:4;2363:2;2355:6;2351:15;2347:26;2340:37;2395:6;2386:15;;;;;;1688:719;;;;:::o;2412:917::-;2467:5;2515:6;2503:9;2498:3;2494:19;2490:32;2487:52;;;2535:1;2532;2525:12;2487:52;2557:17;;:::i;:::-;2548:26;;2610:9;2597:23;2590:5;2583:38;2681:2;2670:9;2666:18;2653:32;2648:2;2641:5;2637:14;2630:56;2746:2;2735:9;2731:18;2718:32;2713:2;2706:5;2702:14;2695:56;2783:38;2817:2;2806:9;2802:18;2783:38;:::i;:::-;2778:2;2771:5;2767:14;2760:62;2855:39;2889:3;2878:9;2874:19;2855:39;:::i;:::-;2849:3;2842:5;2838:15;2831:64;2928:39;2962:3;2951:9;2947:19;2928:39;:::i;:::-;2922:3;2915:5;2911:15;2904:64;3001:39;3035:3;3024:9;3020:19;3001:39;:::i;:::-;2995:3;2988:5;2984:15;2977:64;3102:3;3091:9;3087:19;3074:33;3068:3;3061:5;3057:15;3050:58;3127:3;3181:2;3170:9;3166:18;3153:32;3208:18;3200:6;3197:30;3194:50;;;3240:1;3237;3230:12;3194:50;3276:46;3318:3;3309:6;3298:9;3294:22;3276:46;:::i;:::-;3271:2;3264:5;3260:14;3253:70;;;2412:917;;;;:::o;3334:347::-;3385:8;3395:6;3449:3;3442:4;3434:6;3430:17;3426:27;3416:55;;3467:1;3464;3457:12;3416:55;-1:-1:-1;3490:20:50;;3533:18;3522:30;;3519:50;;;3565:1;3562;3555:12;3519:50;3602:4;3594:6;3590:17;3578:29;;3654:3;3647:4;3638:6;3630;3626:19;3622:30;3619:39;3616:59;;;3671:1;3668;3661:12;3686:723;3800:6;3808;3816;3824;3877:2;3865:9;3856:7;3852:23;3848:32;3845:52;;;3893:1;3890;3883:12;3845:52;3933:9;3920:23;3962:18;4003:2;3995:6;3992:14;3989:34;;;4019:1;4016;4009:12;3989:34;4042:59;4093:7;4084:6;4073:9;4069:22;4042:59;:::i;:::-;4032:69;;4148:2;4137:9;4133:18;4120:32;4110:42;;4205:2;4194:9;4190:18;4177:32;4161:48;;4234:2;4224:8;4221:16;4218:36;;;4250:1;4247;4240:12;4218:36;;4289:60;4341:7;4330:8;4319:9;4315:24;4289:60;:::i;:::-;3686:723;;;;-1:-1:-1;4368:8:50;-1:-1:-1;;;;3686:723:50:o;4414:506::-;4494:6;4547:2;4535:9;4526:7;4522:23;4518:32;4515:52;;;4563:1;4560;4553:12;4515:52;4596:2;4590:9;4638:2;4630:6;4626:15;4707:6;4695:10;4692:22;4671:18;4659:10;4656:34;4653:62;4650:88;;;4718:18;;:::i;:::-;4754:2;4747:22;4793:29;4812:9;4793:29;:::i;:::-;4785:6;4778:45;4884:2;4873:9;4869:18;4856:32;4851:2;4843:6;4839:15;4832:57;4908:6;4898:16;;;4414:506;;;;:::o;4925:798::-;5048:6;5056;5064;5072;5080;5133:3;5121:9;5112:7;5108:23;5104:33;5101:53;;;5150:1;5147;5140:12;5101:53;5190:9;5177:23;5219:18;5260:2;5252:6;5249:14;5246:34;;;5276:1;5273;5266:12;5246:34;5299:59;5350:7;5341:6;5330:9;5326:22;5299:59;:::i;:::-;5289:69;;5405:2;5394:9;5390:18;5377:32;5367:42;;5462:2;5451:9;5447:18;5434:32;5418:48;;5491:2;5481:8;5478:16;5475:36;;;5507:1;5504;5497:12;5475:36;;5546:60;5598:7;5587:8;5576:9;5572:24;5546:60;:::i;:::-;5625:8;;-1:-1:-1;5520:86:50;-1:-1:-1;5679:38:50;;-1:-1:-1;5713:2:50;5698:18;;5679:38;:::i;:::-;5669:48;;4925:798;;;;;;;;:::o;5728:248::-;5796:6;5804;5857:2;5845:9;5836:7;5832:23;5828:32;5825:52;;;5873:1;5870;5863:12;5825:52;-1:-1:-1;;5896:23:50;;;5966:2;5951:18;;;5938:32;;-1:-1:-1;5728:248:50:o;8526:184::-;8596:6;8649:2;8637:9;8628:7;8624:23;8620:32;8617:52;;;8665:1;8662;8655:12;8617:52;-1:-1:-1;8688:16:50;;8526:184;-1:-1:-1;8526:184:50:o;9447:277::-;9514:6;9567:2;9555:9;9546:7;9542:23;9538:32;9535:52;;;9583:1;9580;9573:12;9535:52;9615:9;9609:16;9668:5;9661:13;9654:21;9647:5;9644:32;9634:60;;9690:1;9687;9680:12;10077:127;10138:10;10133:3;10129:20;10126:1;10119:31;10169:4;10166:1;10159:15;10193:4;10190:1;10183:15;10209:128;10249:3;10280:1;10276:6;10273:1;10270:13;10267:39;;;10286:18;;:::i;:::-;-1:-1:-1;10322:9:50;;10209:128::o;13337:168::-;13377:7;13443:1;13439;13435:6;13431:14;13428:1;13425:21;13420:1;13413:9;13406:17;13402:45;13399:71;;;13450:18;;:::i;:::-;-1:-1:-1;13490:9:50;;13337:168::o;13510:380::-;13589:1;13585:12;;;;13632;;;13653:61;;13707:4;13699:6;13695:17;13685:27;;13653:61;13760:2;13752:6;13749:14;13729:18;13726:38;13723:161;;13806:10;13801:3;13797:20;13794:1;13787:31;13841:4;13838:1;13831:15;13869:4;13866:1;13859:15;13723:161;;13510:380;;;:::o;13895:125::-;13935:4;13963:1;13960;13957:8;13954:34;;;13968:18;;:::i;:::-;-1:-1:-1;14005:9:50;;13895:125::o;14880:258::-;14952:1;14962:113;14976:6;14973:1;14970:13;14962:113;;;15052:11;;;15046:18;15033:11;;;15026:39;14998:2;14991:10;14962:113;;;15093:6;15090:1;15087:13;15084:48;;;15128:1;15119:6;15114:3;15110:16;15103:27;15084:48;;14880:258;;;:::o;15143:786::-;15554:25;15549:3;15542:38;15524:3;15609:6;15603:13;15625:62;15680:6;15675:2;15670:3;15666:12;15659:4;15651:6;15647:17;15625:62;:::i;:::-;-1:-1:-1;;;15746:2:50;15706:16;;;15738:11;;;15731:40;15796:13;;15818:63;15796:13;15867:2;15859:11;;15852:4;15840:17;;15818:63;:::i;:::-;15901:17;15920:2;15897:26;;15143:786;-1:-1:-1;;;;15143:786:50:o;15934:258::-;15976:3;16014:5;16008:12;16041:6;16036:3;16029:19;16057:63;16113:6;16106:4;16101:3;16097:14;16090:4;16083:5;16079:16;16057:63;:::i;:::-;16174:2;16153:15;-1:-1:-1;;16149:29:50;16140:39;;;;16181:4;16136:50;;15934:258;-1:-1:-1;;15934:258:50:o;16197:220::-;16346:2;16335:9;16328:21;16309:4;16366:45;16407:2;16396:9;16392:18;16384:6;16366:45;:::i;17106:1104::-;17236:3;17265:1;17298:6;17292:13;17328:3;17350:1;17378:9;17374:2;17370:18;17360:28;;17438:2;17427:9;17423:18;17460;17450:61;;17504:4;17496:6;17492:17;17482:27;;17450:61;17530:2;17578;17570:6;17567:14;17547:18;17544:38;17541:165;;-1:-1:-1;;;17605:33:50;;17661:4;17658:1;17651:15;17691:4;17612:3;17679:17;17541:165;17722:18;17749:104;;;;17867:1;17862:323;;;;17715:470;;17749:104;-1:-1:-1;;17782:24:50;;17770:37;;17827:16;;;;-1:-1:-1;17749:104:50;;17862:323;17053:1;17046:14;;;17090:4;17077:18;;17960:1;17974:165;17988:6;17985:1;17982:13;17974:165;;;18066:14;;18053:11;;;18046:35;18109:16;;;;18003:10;;17974:165;;;17978:3;;18168:6;18163:3;18159:16;18152:23;;17715:470;-1:-1:-1;18201:3:50;;17106:1104;-1:-1:-1;;;;;;;;17106:1104:50:o;19298:536::-;19614:1;19610;19605:3;19601:11;19597:19;19589:6;19585:32;19574:9;19567:51;19654:6;19649:2;19638:9;19634:18;19627:34;19697:3;19692:2;19681:9;19677:18;19670:31;19548:4;19718:46;19759:3;19748:9;19744:19;19736:6;19718:46;:::i;:::-;19196:12;;-1:-1:-1;;;;;19192:38:50;19824:2;19809:18;;19180:51;19280:4;19269:16;;19263:23;19247:14;;;19240:47;19710:54;-1:-1:-1;19298:536:50;;;;;;;:::o;19839:606::-;20181:1;20177;20172:3;20168:11;20164:19;20156:6;20152:32;20141:9;20134:51;20221:6;20216:2;20205:9;20201:18;20194:34;20264:6;20259:2;20248:9;20244:18;20237:34;20307:3;20302:2;20291:9;20287:18;20280:31;20115:4;20328:46;20369:3;20358:9;20354:19;20346:6;20328:46;:::i;:::-;19196:12;;-1:-1:-1;;;;;19192:38:50;20434:3;20419:19;;19180:51;19280:4;19269:16;;19263:23;19247:14;;;19240:47;20320:54;-1:-1:-1;19839:606:50;;;;;;;;:::o;21704:375::-;19196:12;;-1:-1:-1;;;;;19192:38:50;19180:51;;19280:4;19269:16;;;19263:23;19247:14;;;19240:47;21950:3;21935:19;;19196:12;;-1:-1:-1;;;;;19192:38:50;22069:2;22054:18;;19180:51;19280:4;19269:16;;19263:23;19247:14;;;19240:47;22018:55;19117:176;22084:127;22145:10;22140:3;22136:20;22133:1;22126:31;22176:4;22173:1;22166:15;22200:4;22197:1;22190:15;22216:136;22255:3;22283:5;22273:39;;22292:18;;:::i;:::-;-1:-1:-1;;;22328:18:50;;22216:136::o;22718:127::-;22779:10;22774:3;22770:20;22767:1;22760:31;22810:4;22807:1;22800:15;22834:4;22831:1;22824:15;22850:217;22890:1;22916;22906:132;;22960:10;22955:3;22951:20;22948:1;22941:31;22995:4;22992:1;22985:15;23023:4;23020:1;23013:15;22906:132;-1:-1:-1;23052:9:50;;22850:217::o;23469:127::-;23530:10;23525:3;23521:20;23518:1;23511:31;23561:4;23558:1;23551:15;23585:4;23582:1;23575:15",
  "source": "/**\n * SPDX-License-Identifier: MIT\n * @author Accubits\n * @title PrimaryFixedPriceNFTMarketPlace\n */\npragma solidity 0.8.13;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\nimport '@openzeppelin/contracts/token/ERC1155/IERC1155.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/access/AccessControlEnumerable.sol';\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\nimport '@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol';\n\n/**\n * @notice ERC1155 interface to support custom functionalites\n */\ninterface ERC1155 {\n  struct Royalties {\n    address payable account;\n    uint256 percentage;\n  }\n\n  function mint(\n    address receiver,\n    uint256 collectibleId,\n    uint256 ntokens,\n    bytes memory IPFS_hash,\n    Royalties calldata royalties\n  ) external;\n\n  function safeTransferFrom(\n    address from,\n    address to,\n    uint256 id,\n    uint256 ntokens,\n    bytes calldata data\n  ) external;\n}\n\n/**\n * @notice ERC721 interface to support custom functionalites\n */\ninterface ERC721 {\n  struct Royalties {\n    address payable account;\n    uint256 percentage;\n  }\n\n  function mint(\n    address receiver,\n    uint256 collectibleId,\n    string memory IPFSHash,\n    Royalties calldata royalties\n  ) external;\n}\n\n/**\n * @title Primary Fixed Price NFT MarketPlace\n * NFT MarketPlace contract to handle primary NFT sales with fixed price\n */\ncontract PrimaryFixedPriceNFTMarketPlace is AccessControlEnumerable, ReentrancyGuard, EIP712 {\n  using SafeMath for uint256;\n  using Address for address;\n\n  /**\n   * @notice To store NFT metadata\n   */\n  struct Metadata {\n    uint256 tokenId;\n    uint256 price;\n    uint256 quantity;\n    address erc20Token;\n    address seller;\n    address nftAddress;\n    address royaltyReceiver;\n    uint256 royaltyPercentage;\n    string IPFSHash;\n  }\n\n  struct Fee {\n    address receiver;\n    uint256 percentageValue;\n  }\n\n  event NftSold(\n    uint256 indexed tokenId,\n    address indexed nftAddress,\n    address indexed seller,\n    uint256 price,\n    address erc20Token,\n    address buyer,\n    uint256 quantity\n  );\n\n  event FundTransfer(Fee sellerProfit, Fee platformFee);\n\n  mapping(address => mapping(uint256 => mapping(address => Metadata))) private mapSale;\n  Fee private platformFee;\n\n  bytes32 public constant ADMIN_ROLE = keccak256('ADMIN_ROLE');\n  bytes4 private ERC721InterfaceId = 0x80ac58cd; // Interface Id of ERC721\n  bytes4 private ERC1155InterfaceId = 0xd9b67a26; // Interface Id of ERC1155\n\n  /**\n    @notice For signature verification of Fixed Price Typed Data\n  */\n  bytes32 public constant FIXED_PRICE_TYPEHASH =\n    keccak256(\n      'FixedPrice(uint256 tokenId,uint256 price,uint256 quantity,address erc20Token,address seller,address nftAddress,address royaltyReceiver,uint256 royaltyPercentage,string IPFSHash)'\n    );\n\n  /**\n   * @notice modifier to check admin rights.\n   * contract owner and root admin have admin rights\n   */\n  modifier onlyAdmin() {\n    require(_isAdmin(), 'Restricted to owner');\n    _;\n  }\n\n  /**\n   * @notice Constructor\n   * Invokes EIP712 constructor with Domain - Used for signature verification\n   * @param _platformFee Fee type. Fee percentage and Receiver address\n   * @param _rootAdmin Root admin address\n   */\n  constructor(Fee memory _platformFee, address _rootAdmin) EIP712('PrimaryFixedPriceNFTMarketPlace', '0.0.1') {\n    _setPlatformFee(_platformFee);\n    _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    _setupRole(ADMIN_ROLE, _rootAdmin);\n  }\n\n  /**\n   * @notice To set platform fee and fee receiver\n   * @param _platformFee Fee and fee receiver details\n   */\n  function PlatformFee(Fee memory _platformFee) external onlyAdmin {\n    _setPlatformFee(_platformFee);\n  }\n\n  /**\n   * @notice SetSaleDetails\n   *         For storing NFT details on sale\n   * @param _tokenId NFT unique ID\n   * @param _price Unit price\n   * @param _quantity Total number of tokens in sale\n   * @param _erc20Token ERC20 token address, which can be used to buy this NFT\n   * @param _seller Seller address\n   * @param _nftAddress ERC721 or ERC1155 address\n   * @param _royaltyReceiver Royalty receiver address\n   * @param _royaltyPercentage Royalty percentage\n   * @param _IPFSHash IPFS Hash of NFT\n   */\n  function _setSaleDetails(\n    uint256 _tokenId,\n    uint256 _price,\n    uint256 _quantity,\n    address _erc20Token,\n    address _seller,\n    address _nftAddress,\n    address _royaltyReceiver,\n    uint256 _royaltyPercentage,\n    string memory _IPFSHash\n  ) internal {\n    Metadata storage NftForSale = mapSale[_nftAddress][_tokenId][_seller];\n\n    /// Giving the ability to increase the quantity if the item is already listed\n    /// Otherwise create a new listing\n    if (NftForSale.quantity > 0) {\n      NftForSale.quantity += _quantity;\n    } else {\n      NftForSale.tokenId = _tokenId;\n      NftForSale.price = _price;\n      NftForSale.quantity = _quantity;\n      NftForSale.erc20Token = _erc20Token;\n      NftForSale.seller = _seller;\n      NftForSale.nftAddress = _nftAddress;\n      NftForSale.royaltyReceiver = _royaltyReceiver;\n      NftForSale.royaltyPercentage = _royaltyPercentage;\n      NftForSale.IPFSHash = _IPFSHash;\n    }\n  }\n\n  /**\n   * @notice buyNft\n   *         For buying NFT using native coin or ERC20 tokens.\n   * @param _metadata Details of NFT in Metadata format\n   * @param _purchasingQuantity Purchasing amount of tokens\n   * @param _signature Metadata signature signed by admin during NFT creation on platform\n   */\n  function buyNft(\n    Metadata memory _metadata,\n    uint256 _purchasingQuantity,\n    bytes calldata _signature\n  ) public payable nonReentrant {\n    require(_purchasingQuantity > 0, \"BuyNfts: Can't Buy Zero NFTs\");\n    require(_purchasingQuantity <= _metadata.quantity, 'BuyNfts: Exceeds max quantity');\n\n    _setSaleDetails(\n      _metadata.tokenId,\n      _metadata.price,\n      _metadata.quantity,\n      _metadata.erc20Token,\n      _metadata.seller,\n      _metadata.nftAddress,\n      _metadata.royaltyReceiver,\n      _metadata.royaltyPercentage,\n      _metadata.IPFSHash\n    );\n\n    _verifyNFT(_metadata, _signature);\n\n    uint256 buyAmount = _metadata.price.mul(_purchasingQuantity);\n    address buyer = msg.sender;\n\n    if (_metadata.erc20Token == address(0)) {\n      require(msg.value >= buyAmount, 'BuyNfts: Insufficient fund');\n      /// else means for erc20 token\n    } else {\n      require(IERC20(_metadata.erc20Token).allowance(buyer, address(this)) >= buyAmount, 'BuyNfts: Less allowance');\n      IERC20(_metadata.erc20Token).transferFrom(buyer, address(this), buyAmount);\n    }\n    _NftSale(_metadata.tokenId, _metadata.nftAddress, _metadata.seller, buyAmount, buyer, _purchasingQuantity);\n  }\n\n  /**\n   * @notice This function can only be called by the admin account\n   * The fiat payment will be converted into to crypto via on-ramp and transferred to the contract for\n   * administering the payment split and token transfer on-chain\n   * IMPORTANT: It should only be called after the right amount of crypto/token should received in the contract\n   * The transfer should be confirmed off chain before calling this function\n   * @param _metadata Details of NFT in Metadata format\n   * @param _purchasingQuantity Purchasing amount of tokens\n   * @param _signature Metadata signature signed by admin during NFT creation on platform\n   * @param _buyer NFT receiver address\n   */\n  function fiatPurchase(\n    Metadata memory _metadata,\n    uint256 _purchasingQuantity,\n    bytes calldata _signature,\n    address _buyer\n  ) public payable onlyAdmin nonReentrant {\n    require(_purchasingQuantity > 0, \"BuyNfts: Can't Buy Zero NFTs\");\n    require(_purchasingQuantity <= _metadata.quantity, 'BuyNfts: Exceeds max quantity');\n\n    _setSaleDetails(\n      _metadata.tokenId,\n      _metadata.price,\n      _metadata.quantity,\n      _metadata.erc20Token,\n      _metadata.seller,\n      _metadata.nftAddress,\n      _metadata.royaltyReceiver,\n      _metadata.royaltyPercentage,\n      _metadata.IPFSHash\n    );\n\n    _verifyNFT(_metadata, _signature);\n\n    uint256 buyAmount = _metadata.price.mul(_purchasingQuantity);\n    address buyer = _buyer;\n\n    _NftSale(_metadata.tokenId, _metadata.nftAddress, _metadata.seller, buyAmount, buyer, _purchasingQuantity);\n  }\n\n  /**\n   * @notice Mint NFT\n   *         Calling ERC20 or ERC1155 Mint function\n   * @param _receiver NFT Receiver\n   * @param _nftAddress ERC721 or ERC1155 address\n   * @param _tokenId NFT unique ID\n   * @param _quantity Purchasing amount of tokens\n   * @param _royaltyReceiver Royalty receiver address\n   * @param _royaltyPercentage Royalty percentage\n   * @param _ipfsHash IPFS Hash of NFT\n   */\n  function _mintNFT(\n    address _receiver,\n    address _nftAddress,\n    uint256 _tokenId,\n    uint256 _quantity,\n    address _royaltyReceiver,\n    uint256 _royaltyPercentage,\n    string memory _ipfsHash\n  ) internal {\n    if (IERC721(_nftAddress).supportsInterface(ERC721InterfaceId)) {\n      ERC721.Royalties memory royalties = ERC721.Royalties(payable(_royaltyReceiver), _royaltyPercentage);\n      ERC721(_nftAddress).mint(_receiver, _tokenId, _ipfsHash, royalties);\n    } else if (IERC1155(_nftAddress).supportsInterface(ERC1155InterfaceId)) {\n      ERC1155.Royalties memory royalties = ERC1155.Royalties(payable(_royaltyReceiver), _royaltyPercentage);\n      ERC1155(_nftAddress).mint(_receiver, _tokenId, _quantity, bytes(_ipfsHash), royalties);\n    }\n  }\n\n  /**\n   * @notice Supports Interface\n   *         Function to check wether the contract support specific interface\n   * @param interfaceId Interface type\n   * @return boolean\n   */\n  function supportsInterface(bytes4 interfaceId) public view override(AccessControlEnumerable) returns (bool) {\n    return super.supportsInterface(interfaceId);\n  }\n\n  /**\n   * @notice Is Admin\n   *         Checks if the msg.sender has admin roles assigned\n   * @return boolean\n   */\n  function _isAdmin() internal view returns (bool) {\n    return (hasRole(ADMIN_ROLE, _msgSender()) || hasRole(DEFAULT_ADMIN_ROLE, _msgSender()));\n  }\n\n  /**\n   * @notice PlatformFee\n   *         Internal function to set platform fee and fee receiver\n   * @param _platformFee Fee and fee receiver details\n   */\n  function _setPlatformFee(Fee memory _platformFee) internal {\n    require(_platformFee.percentageValue <= 5000, 'Fee: max allowed perecentage is 50');\n    platformFee = _platformFee;\n  }\n\n  /**\n   * @notice Pay Out\n   *         To debit fees during NFT purchase\n   * @param _price Fee\n   * @param _currency Type of currency\n   * @param _seller Seller address\n   */\n  function _payOut(\n    uint256 _price,\n    address _currency,\n    address _seller\n  ) internal {\n    uint256 sellerProfit;\n    uint256 platformProfit;\n\n    if (platformFee.percentageValue > 0) {\n      platformProfit = _price.mul(platformFee.percentageValue).div(10000);\n    }\n    sellerProfit = _price.sub(platformProfit);\n\n    if (_currency == address(0)) {\n      if (platformFee.receiver != address(0) && platformProfit > 0) {\n        (bool isPlatformFeeTransferSuccess, ) = payable(platformFee.receiver).call{ value: platformProfit }('');\n        require(isPlatformFeeTransferSuccess, 'Transfer to platform fee receiver failed.');\n      }\n      (bool isSellerTransferSuccess, ) = payable(_seller).call{ value: sellerProfit }('');\n      require(isSellerTransferSuccess, 'Transfer to seller failed.');\n    } else {\n      if (platformFee.receiver != address(0) && platformProfit > 0) {\n        IERC20(_currency).transfer(platformFee.receiver, platformProfit);\n      }\n      IERC20(_currency).transfer(_seller, sellerProfit);\n    }\n    emit FundTransfer(Fee(_seller, sellerProfit), Fee(platformFee.receiver, platformProfit));\n  }\n\n  /**\n   * @notice NFT Sale\n   *         To handle mint and payout\n   * @param _tokenId NFT unique ID\n   * @param _nftAddress ERC721 or ERC1155 address\n   * @param _seller Seller address\n   * @param _buyAmount Total amount\n   * @param _buyer Receiver address\n   * @param _purchasingQuantity Purchasing amount of tokens\n   */\n  function _NftSale(\n    uint256 _tokenId,\n    address _nftAddress,\n    address _seller,\n    uint256 _buyAmount,\n    address _buyer,\n    uint256 _purchasingQuantity\n  ) internal {\n    Metadata storage nftOnSaleStorage = mapSale[_nftAddress][_tokenId][_seller];\n\n    _mintNFT(\n      _buyer,\n      _nftAddress,\n      _tokenId,\n      _purchasingQuantity,\n      nftOnSaleStorage.royaltyReceiver,\n      nftOnSaleStorage.royaltyPercentage,\n      nftOnSaleStorage.IPFSHash\n    );\n    _payOut(_buyAmount, nftOnSaleStorage.erc20Token, _seller);\n\n    nftOnSaleStorage.quantity = nftOnSaleStorage.quantity - _purchasingQuantity;\n\n    if (nftOnSaleStorage.quantity == 0) {\n      delete mapSale[_nftAddress][_tokenId][_seller];\n    }\n    emit NftSold(_tokenId, _nftAddress, _seller, nftOnSaleStorage.price, nftOnSaleStorage.erc20Token, _buyer, _purchasingQuantity);\n  }\n\n  /**\n   * @notice Is NFT\n   *         Checks if the nft address specified is ERC721 or ERC1155\n   * @param _nftAddress NFT Contract address\n   * @return boolean\n   */\n  function _isNFT(address _nftAddress) internal view returns (bool) {\n    require(_nftAddress != address(0), 'isNFT: Zero Address');\n    return (IERC721(_nftAddress).supportsInterface(ERC721InterfaceId) || IERC1155(_nftAddress).supportsInterface(ERC1155InterfaceId));\n  }\n\n  /**\n   * @notice Hash Mint Data\n   *         To hash the nft metadata\n   * @param tokenId NFT unique ID\n   * @param seller Seller address\n   * @param nftAddress ERC721 or ERC1155 address\n   * @return Hash Hash of metadata\n   */\n  function _hashTypedData(\n    uint256 tokenId,\n    address seller,\n    address nftAddress\n  ) internal view returns (bytes32) {\n    Metadata storage NftForSale = mapSale[nftAddress][tokenId][seller];\n    return\n      _hashTypedDataV4(\n        keccak256(\n          abi.encode(\n            FIXED_PRICE_TYPEHASH,\n            tokenId,\n            NftForSale.price,\n            NftForSale.quantity,\n            NftForSale.erc20Token,\n            NftForSale.seller,\n            NftForSale.nftAddress,\n            NftForSale.royaltyReceiver,\n            NftForSale.royaltyPercentage,\n            keccak256(bytes(NftForSale.IPFSHash))\n          )\n        )\n      );\n  }\n\n  /**\n   * @notice Verify Minter\n   *         To extract signer address from signature\n   * @param digest Data hash\n   * @param signature Signature\n   * @return Signer Signer address\n   */\n  function _verifyMinter(bytes32 digest, bytes memory signature) internal pure returns (address) {\n    address signer = ECDSA.recover(digest, signature);\n    return signer;\n  }\n\n  /**\n   * @notice Verify NFT\n   *         To peerform signature verification and common validaitons\n   * @param metadata NFT details in metadata format\n   * @param signature Metadata signed by admin during NFT creation on platform\n   * @return boolean Verification status\n   */\n  function _verifyNFT(Metadata memory metadata, bytes calldata signature) internal view returns (bool) {\n    require(msg.sender != address(0), 'BuyNfts: Zero Address');\n    require(metadata.quantity > 0, 'BuyNfts: Wont Accept Zero Quantity');\n    require(_isNFT(metadata.nftAddress), 'BuyNfts: Invalid NFT Address');\n    require(msg.sender != metadata.seller, 'BuyNfts : Owner Is Not Allowed To Buy Nfts');\n    require(metadata.seller != address(0), 'Sell Nfts: Zero Address');\n    require(!_isAdmin(), 'BuyNfts: Admin Cannot Buy Nfts');\n    require(metadata.price > 0, 'BuyNfts: Wont Accept Zero Price');\n\n    address signer = _verifyMinter(_hashTypedData(metadata.tokenId, metadata.seller, metadata.nftAddress), signature);\n    require(hasRole(ADMIN_ROLE, signer) || hasRole(DEFAULT_ADMIN_ROLE, signer), 'NFT Signature verification failed!');\n\n    return true;\n  }\n}\n",
  "sourcePath": "/home/accubits-prasanth/Documents/Accubits/NFT 2.0/Smart Contract/contracts/PrimaryFixedPriceNFTMarketPlace.sol",
  "ast": {
    "absolutePath": "project:/contracts/PrimaryFixedPriceNFTMarketPlace.sol",
    "exportedSymbols": {
      "AccessControl": [
        4104
      ],
      "AccessControlEnumerable": [
        4229
      ],
      "Address": [
        5376
      ],
      "Context": [
        5398
      ],
      "ECDSA": [
        6031
      ],
      "EIP712": [
        6185
      ],
      "ERC1155": [
        9887
      ],
      "ERC165": [
        6209
      ],
      "ERC721": [
        9906
      ],
      "EnumerableSet": [
        7132
      ],
      "IAccessControl": [
        4302
      ],
      "IAccessControlEnumerable": [
        4327
      ],
      "IERC1155": [
        4511
      ],
      "IERC165": [
        6221
      ],
      "IERC20": [
        4630
      ],
      "IERC721": [
        5063
      ],
      "PrimaryFixedPriceNFTMarketPlace": [
        10943
      ],
      "ReentrancyGuard": [
        4389
      ],
      "SafeMath": [
        6533
      ],
      "Strings": [
        5624
      ]
    },
    "id": 10944,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9845,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "102:23:48"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 9846,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 5064,
        "src": "127:58:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 9847,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 4512,
        "src": "186:60:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 9848,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 4631,
        "src": "247:56:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "id": 9849,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 4230,
        "src": "304:68:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 9850,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 4390,
        "src": "373:62:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 9851,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 6534,
        "src": "436:57:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 9852,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 5377,
        "src": "494:51:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
        "id": 9853,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 6186,
        "src": "546:69:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ERC1155",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9854,
          "nodeType": "StructuredDocumentation",
          "src": "617:69:48",
          "text": " @notice ERC1155 interface to support custom functionalites"
        },
        "fullyImplemented": false,
        "id": 9887,
        "linearizedBaseContracts": [
          9887
        ],
        "name": "ERC1155",
        "nameLocation": "697:7:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC1155.Royalties",
            "id": 9859,
            "members": [
              {
                "constant": false,
                "id": 9856,
                "mutability": "mutable",
                "name": "account",
                "nameLocation": "748:7:48",
                "nodeType": "VariableDeclaration",
                "scope": 9859,
                "src": "732:23:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 9855,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "732:15:48",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9858,
                "mutability": "mutable",
                "name": "percentage",
                "nameLocation": "769:10:48",
                "nodeType": "VariableDeclaration",
                "scope": 9859,
                "src": "761:18:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9857,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "761:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Royalties",
            "nameLocation": "716:9:48",
            "nodeType": "StructDefinition",
            "scope": 9887,
            "src": "709:75:48",
            "visibility": "public"
          },
          {
            "functionSelector": "fc038ab3",
            "id": 9873,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "797:4:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9861,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "815:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "807:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9863,
                  "mutability": "mutable",
                  "name": "collectibleId",
                  "nameLocation": "837:13:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "829:21:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9865,
                  "mutability": "mutable",
                  "name": "ntokens",
                  "nameLocation": "864:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "856:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9867,
                  "mutability": "mutable",
                  "name": "IPFS_hash",
                  "nameLocation": "890:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "877:22:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9866,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9870,
                  "mutability": "mutable",
                  "name": "royalties",
                  "nameLocation": "924:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "905:28:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Royalties_$9859_calldata_ptr",
                    "typeString": "struct ERC1155.Royalties"
                  },
                  "typeName": {
                    "id": 9869,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9868,
                      "name": "Royalties",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9859,
                      "src": "905:9:48"
                    },
                    "referencedDeclaration": 9859,
                    "src": "905:9:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Royalties_$9859_storage_ptr",
                      "typeString": "struct ERC1155.Royalties"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:136:48"
            },
            "returnParameters": {
              "id": 9872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:48"
            },
            "scope": 9887,
            "src": "788:159:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "f242432a",
            "id": 9886,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "960:16:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9875,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "990:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "982:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9877,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1008:2:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "1000:10:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9879,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1024:2:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "1016:10:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9881,
                  "mutability": "mutable",
                  "name": "ntokens",
                  "nameLocation": "1040:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "1032:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9883,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1068:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "1053:19:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9882,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "976:100:48"
            },
            "returnParameters": {
              "id": 9885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1085:0:48"
            },
            "scope": 9887,
            "src": "951:135:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10944,
        "src": "687:401:48",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9888,
          "nodeType": "StructuredDocumentation",
          "src": "1090:68:48",
          "text": " @notice ERC721 interface to support custom functionalites"
        },
        "fullyImplemented": false,
        "id": 9906,
        "linearizedBaseContracts": [
          9906
        ],
        "name": "ERC721",
        "nameLocation": "1169:6:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC721.Royalties",
            "id": 9893,
            "members": [
              {
                "constant": false,
                "id": 9890,
                "mutability": "mutable",
                "name": "account",
                "nameLocation": "1219:7:48",
                "nodeType": "VariableDeclaration",
                "scope": 9893,
                "src": "1203:23:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 9889,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1203:15:48",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9892,
                "mutability": "mutable",
                "name": "percentage",
                "nameLocation": "1240:10:48",
                "nodeType": "VariableDeclaration",
                "scope": 9893,
                "src": "1232:18:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9891,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1232:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Royalties",
            "nameLocation": "1187:9:48",
            "nodeType": "StructDefinition",
            "scope": 9906,
            "src": "1180:75:48",
            "visibility": "public"
          },
          {
            "functionSelector": "cc3961b0",
            "id": 9905,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1268:4:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9895,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1286:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9905,
                  "src": "1278:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9897,
                  "mutability": "mutable",
                  "name": "collectibleId",
                  "nameLocation": "1308:13:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9905,
                  "src": "1300:21:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1300:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9899,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "1341:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9905,
                  "src": "1327:22:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9898,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9902,
                  "mutability": "mutable",
                  "name": "royalties",
                  "nameLocation": "1374:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9905,
                  "src": "1355:28:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Royalties_$9893_calldata_ptr",
                    "typeString": "struct ERC721.Royalties"
                  },
                  "typeName": {
                    "id": 9901,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9900,
                      "name": "Royalties",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9893,
                      "src": "1355:9:48"
                    },
                    "referencedDeclaration": 9893,
                    "src": "1355:9:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Royalties_$9893_storage_ptr",
                      "typeString": "struct ERC721.Royalties"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1272:115:48"
            },
            "returnParameters": {
              "id": 9904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1396:0:48"
            },
            "scope": 9906,
            "src": "1259:138:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10944,
        "src": "1159:240:48",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9908,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4229,
              "src": "1572:23:48"
            },
            "id": 9909,
            "nodeType": "InheritanceSpecifier",
            "src": "1572:23:48"
          },
          {
            "baseName": {
              "id": 9910,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4389,
              "src": "1597:15:48"
            },
            "id": 9911,
            "nodeType": "InheritanceSpecifier",
            "src": "1597:15:48"
          },
          {
            "baseName": {
              "id": 9912,
              "name": "EIP712",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6185,
              "src": "1614:6:48"
            },
            "id": 9913,
            "nodeType": "InheritanceSpecifier",
            "src": "1614:6:48"
          }
        ],
        "canonicalName": "PrimaryFixedPriceNFTMarketPlace",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9907,
          "nodeType": "StructuredDocumentation",
          "src": "1401:126:48",
          "text": " @title Primary Fixed Price NFT MarketPlace\n NFT MarketPlace contract to handle primary NFT sales with fixed price"
        },
        "fullyImplemented": true,
        "id": 10943,
        "linearizedBaseContracts": [
          10943,
          6185,
          4389,
          4229,
          4104,
          6209,
          6221,
          4327,
          4302,
          5398
        ],
        "name": "PrimaryFixedPriceNFTMarketPlace",
        "nameLocation": "1537:31:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 9916,
            "libraryName": {
              "id": 9914,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6533,
              "src": "1631:8:48"
            },
            "nodeType": "UsingForDirective",
            "src": "1625:27:48",
            "typeName": {
              "id": 9915,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1644:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 9919,
            "libraryName": {
              "id": 9917,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5376,
              "src": "1661:7:48"
            },
            "nodeType": "UsingForDirective",
            "src": "1655:26:48",
            "typeName": {
              "id": 9918,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1673:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "canonicalName": "PrimaryFixedPriceNFTMarketPlace.Metadata",
            "id": 9938,
            "members": [
              {
                "constant": false,
                "id": 9921,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "1762:7:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1754:15:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9920,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1754:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9923,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1783:5:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1775:13:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9922,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1775:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9925,
                "mutability": "mutable",
                "name": "quantity",
                "nameLocation": "1802:8:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1794:16:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9924,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1794:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9927,
                "mutability": "mutable",
                "name": "erc20Token",
                "nameLocation": "1824:10:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1816:18:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9926,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1816:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9929,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "1848:6:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1840:14:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9928,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1840:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9931,
                "mutability": "mutable",
                "name": "nftAddress",
                "nameLocation": "1868:10:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1860:18:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9930,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1860:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9933,
                "mutability": "mutable",
                "name": "royaltyReceiver",
                "nameLocation": "1892:15:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1884:23:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9932,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1884:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9935,
                "mutability": "mutable",
                "name": "royaltyPercentage",
                "nameLocation": "1921:17:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1913:25:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9934,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1913:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9937,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1951:8:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1944:15:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9936,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1944:6:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Metadata",
            "nameLocation": "1739:8:48",
            "nodeType": "StructDefinition",
            "scope": 10943,
            "src": "1732:232:48",
            "visibility": "public"
          },
          {
            "canonicalName": "PrimaryFixedPriceNFTMarketPlace.Fee",
            "id": 9943,
            "members": [
              {
                "constant": false,
                "id": 9940,
                "mutability": "mutable",
                "name": "receiver",
                "nameLocation": "1993:8:48",
                "nodeType": "VariableDeclaration",
                "scope": 9943,
                "src": "1985:16:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9939,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1985:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9942,
                "mutability": "mutable",
                "name": "percentageValue",
                "nameLocation": "2015:15:48",
                "nodeType": "VariableDeclaration",
                "scope": 9943,
                "src": "2007:23:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9941,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2007:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Fee",
            "nameLocation": "1975:3:48",
            "nodeType": "StructDefinition",
            "scope": 10943,
            "src": "1968:67:48",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8f52f68a77e5305f8c032bbf718984be7fc7e37748db7a9fd3690c9f64a6b0c7",
            "id": 9959,
            "name": "NftSold",
            "nameLocation": "2045:7:48",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9945,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2074:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2058:23:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9947,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "2103:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2087:26:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9949,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2135:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2119:22:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2119:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9951,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2155:5:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2147:13:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9953,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "erc20Token",
                  "nameLocation": "2174:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2166:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2166:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9955,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2198:5:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2190:13:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9957,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "2217:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2209:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2209:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2052:177:48"
            },
            "src": "2039:191:48"
          },
          {
            "anonymous": false,
            "eventSelector": "40487f252a20d8f2b6b418aa086921caabfdfcef0fd4c378ac2c09dff3cfb70b",
            "id": 9967,
            "name": "FundTransfer",
            "nameLocation": "2240:12:48",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9962,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sellerProfit",
                  "nameLocation": "2257:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9967,
                  "src": "2253:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 9961,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9960,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "2253:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "2253:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9965,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "platformFee",
                  "nameLocation": "2275:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9967,
                  "src": "2271:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 9964,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9963,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "2271:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "2271:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2252:35:48"
            },
            "src": "2234:54:48"
          },
          {
            "constant": false,
            "id": 9976,
            "mutability": "mutable",
            "name": "mapSale",
            "nameLocation": "2369:7:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2292:84:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
              "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata)))"
            },
            "typeName": {
              "id": 9975,
              "keyType": {
                "id": 9968,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2300:7:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2292:68:48",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata)))"
              },
              "valueType": {
                "id": 9974,
                "keyType": {
                  "id": 9969,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2319:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2311:48:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                  "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata))"
                },
                "valueType": {
                  "id": 9973,
                  "keyType": {
                    "id": 9970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2330:28:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                    "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata)"
                  },
                  "valueType": {
                    "id": 9972,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9971,
                      "name": "Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9938,
                      "src": "2349:8:48"
                    },
                    "referencedDeclaration": 9938,
                    "src": "2349:8:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                    }
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9979,
            "mutability": "mutable",
            "name": "platformFee",
            "nameLocation": "2392:11:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2380:23:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fee_$9943_storage",
              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
            },
            "typeName": {
              "id": 9978,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9977,
                "name": "Fee",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9943,
                "src": "2380:3:48"
              },
              "referencedDeclaration": 9943,
              "src": "2380:3:48",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "75b238fc",
            "id": 9984,
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nameLocation": "2432:10:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2408:60:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9980,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2408:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f524f4c45",
                  "id": 9982,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2455:12:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  },
                  "value": "ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  }
                ],
                "id": 9981,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2445:9:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9983,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2445:23:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9987,
            "mutability": "mutable",
            "name": "ERC721InterfaceId",
            "nameLocation": "2487:17:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2472:45:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 9985,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2472:6:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783830616335386364",
              "id": 9986,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2507:10:48",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2158778573_by_1",
                "typeString": "int_const 2158778573"
              },
              "value": "0x80ac58cd"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9990,
            "mutability": "mutable",
            "name": "ERC1155InterfaceId",
            "nameLocation": "2562:18:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2547:46:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 9988,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2547:6:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30786439623637613236",
              "id": 9989,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2583:10:48",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3652614694_by_1",
                "typeString": "int_const 3652614694"
              },
              "value": "0xd9b67a26"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9991,
              "nodeType": "StructuredDocumentation",
              "src": "2625:73:48",
              "text": "@notice For signature verification of Fixed Price Typed Data"
            },
            "functionSelector": "3dd738bf",
            "id": 9996,
            "mutability": "constant",
            "name": "FIXED_PRICE_TYPEHASH",
            "nameLocation": "2725:20:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2701:253:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9992,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2701:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "466978656450726963652875696e7432353620746f6b656e49642c75696e743235362070726963652c75696e74323536207175616e746974792c61646472657373206572633230546f6b656e2c616464726573732073656c6c65722c61646472657373206e6674416464726573732c6164647265737320726f79616c747952656365697665722c75696e7432353620726f79616c747950657263656e746167652c737472696e6720495046534861736829",
                  "id": 9994,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2769:179:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_81ca36344a4f558cd4400c00adda99aa282181fb2be3acccdcb92f502e4e1d55",
                    "typeString": "literal_string \"FixedPrice(uint256 tokenId,uint256 price,uint256 quantity,address erc20Token,address seller,address nftAddress,address royaltyReceiver,uint256 royaltyPercentage,string IPFSHash)\""
                  },
                  "value": "FixedPrice(uint256 tokenId,uint256 price,uint256 quantity,address erc20Token,address seller,address nftAddress,address royaltyReceiver,uint256 royaltyPercentage,string IPFSHash)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_81ca36344a4f558cd4400c00adda99aa282181fb2be3acccdcb92f502e4e1d55",
                    "typeString": "literal_string \"FixedPrice(uint256 tokenId,uint256 price,uint256 quantity,address erc20Token,address seller,address nftAddress,address royaltyReceiver,uint256 royaltyPercentage,string IPFSHash)\""
                  }
                ],
                "id": 9993,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2752:9:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9995,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2752:202:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10006,
              "nodeType": "Block",
              "src": "3090:60:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10000,
                          "name": "_isAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10485,
                          "src": "3104:8:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 10001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3104:10:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265737472696374656420746f206f776e6572",
                        "id": 10002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3116:21:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10032e8ce005db737e680718e0a2839e155b031b8b697283f48cf4f56cfc2ead",
                          "typeString": "literal_string \"Restricted to owner\""
                        },
                        "value": "Restricted to owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10032e8ce005db737e680718e0a2839e155b031b8b697283f48cf4f56cfc2ead",
                          "typeString": "literal_string \"Restricted to owner\""
                        }
                      ],
                      "id": 9999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3096:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:42:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10004,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:42:48"
                },
                {
                  "id": 10005,
                  "nodeType": "PlaceholderStatement",
                  "src": "3144:1:48"
                }
              ]
            },
            "documentation": {
              "id": 9997,
              "nodeType": "StructuredDocumentation",
              "src": "2959:107:48",
              "text": " @notice modifier to check admin rights.\n contract owner and root admin have admin rights"
            },
            "id": 10007,
            "name": "onlyAdmin",
            "nameLocation": "3078:9:48",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3087:2:48"
            },
            "src": "3069:81:48",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10035,
              "nodeType": "Block",
              "src": "3490:128:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10021,
                        "name": "_platformFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10011,
                        "src": "3512:12:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      ],
                      "id": 10020,
                      "name": "_setPlatformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10505,
                      "src": "3496:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fee_$9943_memory_ptr_$returns$__$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Fee memory)"
                      }
                    },
                    "id": 10022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3496:29:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10023,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:29:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10025,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "3542:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 10026,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3562:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3562:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10024,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "3531:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 10028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3531:42:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10029,
                  "nodeType": "ExpressionStatement",
                  "src": "3531:42:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10031,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9984,
                        "src": "3590:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10032,
                        "name": "_rootAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10013,
                        "src": "3602:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10030,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "3579:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 10033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3579:34:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10034,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:34:48"
                }
              ]
            },
            "documentation": {
              "id": 10008,
              "nodeType": "StructuredDocumentation",
              "src": "3154:225:48",
              "text": " @notice Constructor\n Invokes EIP712 constructor with Domain - Used for signature verification\n @param _platformFee Fee type. Fee percentage and Receiver address\n @param _rootAdmin Root admin address"
            },
            "id": 10036,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5072696d617279466978656450726963654e46544d61726b6574506c616365",
                    "id": 10016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3446:33:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9160c7e1b2c95ce26d59f1c22ec699410675fae8886f214b7494271507523b62",
                      "typeString": "literal_string \"PrimaryFixedPriceNFTMarketPlace\""
                    },
                    "value": "PrimaryFixedPriceNFTMarketPlace"
                  },
                  {
                    "hexValue": "302e302e31",
                    "id": 10017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3481:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                      "typeString": "literal_string \"0.0.1\""
                    },
                    "value": "0.0.1"
                  }
                ],
                "id": 10018,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10015,
                  "name": "EIP712",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6185,
                  "src": "3439:6:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "3439:50:48"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10011,
                  "mutability": "mutable",
                  "name": "_platformFee",
                  "nameLocation": "3405:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10036,
                  "src": "3394:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 10010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10009,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "3394:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "3394:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10013,
                  "mutability": "mutable",
                  "name": "_rootAdmin",
                  "nameLocation": "3427:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10036,
                  "src": "3419:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3393:45:48"
            },
            "returnParameters": {
              "id": 10019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3490:0:48"
            },
            "scope": 10943,
            "src": "3382:236:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10049,
              "nodeType": "Block",
              "src": "3803:40:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10046,
                        "name": "_platformFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10040,
                        "src": "3825:12:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      ],
                      "id": 10045,
                      "name": "_setPlatformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10505,
                      "src": "3809:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fee_$9943_memory_ptr_$returns$__$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Fee memory)"
                      }
                    },
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3809:29:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10048,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:29:48"
                }
              ]
            },
            "documentation": {
              "id": 10037,
              "nodeType": "StructuredDocumentation",
              "src": "3622:113:48",
              "text": " @notice To set platform fee and fee receiver\n @param _platformFee Fee and fee receiver details"
            },
            "functionSelector": "7a614c50",
            "id": 10050,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10042,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10007,
                  "src": "3793:9:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "3793:9:48"
              }
            ],
            "name": "PlatformFee",
            "nameLocation": "3747:11:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10040,
                  "mutability": "mutable",
                  "name": "_platformFee",
                  "nameLocation": "3770:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "3759:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 10039,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10038,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "3759:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "3759:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3758:25:48"
            },
            "returnParameters": {
              "id": 10044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3803:0:48"
            },
            "scope": 10943,
            "src": "3738:105:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10150,
              "nodeType": "Block",
              "src": "4622:675:48",
              "statements": [
                {
                  "assignments": [
                    10074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10074,
                      "mutability": "mutable",
                      "name": "NftForSale",
                      "nameLocation": "4645:10:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10150,
                      "src": "4628:27:48",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                      },
                      "typeName": {
                        "id": 10073,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10072,
                          "name": "Metadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9938,
                          "src": "4628:8:48"
                        },
                        "referencedDeclaration": 9938,
                        "src": "4628:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10082,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10075,
                          "name": "mapSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9976,
                          "src": "4658:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                            "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)))"
                          }
                        },
                        "id": 10077,
                        "indexExpression": {
                          "id": 10076,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10063,
                          "src": "4666:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4658:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref))"
                        }
                      },
                      "id": 10079,
                      "indexExpression": {
                        "id": 10078,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10053,
                        "src": "4679:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4658:30:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                        "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)"
                      }
                    },
                    "id": 10081,
                    "indexExpression": {
                      "id": 10080,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10061,
                      "src": "4689:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4658:39:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4628:69:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10083,
                        "name": "NftForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10074,
                        "src": "4829:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                        }
                      },
                      "id": 10084,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "quantity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9925,
                      "src": "4829:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4851:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4829:23:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Giving the ability to increase the quantity if the item is already listed\n Otherwise create a new listing",
                  "falseBody": {
                    "id": 10148,
                    "nodeType": "Block",
                    "src": "4907:386:48",
                    "statements": [
                      {
                        "expression": {
                          "id": 10098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10094,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "4915:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10096,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9921,
                            "src": "4915:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10097,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10053,
                            "src": "4936:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4915:29:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10099,
                        "nodeType": "ExpressionStatement",
                        "src": "4915:29:48"
                      },
                      {
                        "expression": {
                          "id": 10104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10100,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "4952:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10102,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9923,
                            "src": "4952:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10103,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10055,
                            "src": "4971:6:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4952:25:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10105,
                        "nodeType": "ExpressionStatement",
                        "src": "4952:25:48"
                      },
                      {
                        "expression": {
                          "id": 10110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10106,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "4985:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10108,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "quantity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9925,
                            "src": "4985:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10109,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10057,
                            "src": "5007:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4985:31:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10111,
                        "nodeType": "ExpressionStatement",
                        "src": "4985:31:48"
                      },
                      {
                        "expression": {
                          "id": 10116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10112,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5024:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10114,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "erc20Token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9927,
                            "src": "5024:21:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10115,
                            "name": "_erc20Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10059,
                            "src": "5048:11:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5024:35:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10117,
                        "nodeType": "ExpressionStatement",
                        "src": "5024:35:48"
                      },
                      {
                        "expression": {
                          "id": 10122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10118,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5067:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10120,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9929,
                            "src": "5067:17:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10121,
                            "name": "_seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10061,
                            "src": "5087:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5067:27:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10123,
                        "nodeType": "ExpressionStatement",
                        "src": "5067:27:48"
                      },
                      {
                        "expression": {
                          "id": 10128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10124,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5102:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10126,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9931,
                            "src": "5102:21:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10127,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10063,
                            "src": "5126:11:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5102:35:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10129,
                        "nodeType": "ExpressionStatement",
                        "src": "5102:35:48"
                      },
                      {
                        "expression": {
                          "id": 10134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10130,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5145:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "royaltyReceiver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9933,
                            "src": "5145:26:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10133,
                            "name": "_royaltyReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10065,
                            "src": "5174:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5145:45:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10135,
                        "nodeType": "ExpressionStatement",
                        "src": "5145:45:48"
                      },
                      {
                        "expression": {
                          "id": 10140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10136,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5198:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10138,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "royaltyPercentage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9935,
                            "src": "5198:28:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10139,
                            "name": "_royaltyPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10067,
                            "src": "5229:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5198:49:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10141,
                        "nodeType": "ExpressionStatement",
                        "src": "5198:49:48"
                      },
                      {
                        "expression": {
                          "id": 10146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10142,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5255:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10144,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "IPFSHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9937,
                            "src": "5255:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10145,
                            "name": "_IPFSHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10069,
                            "src": "5277:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "5255:31:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 10147,
                        "nodeType": "ExpressionStatement",
                        "src": "5255:31:48"
                      }
                    ]
                  },
                  "id": 10149,
                  "nodeType": "IfStatement",
                  "src": "4825:468:48",
                  "trueBody": {
                    "id": 10093,
                    "nodeType": "Block",
                    "src": "4854:47:48",
                    "statements": [
                      {
                        "expression": {
                          "id": 10091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10087,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "4862:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10089,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "quantity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9925,
                            "src": "4862:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 10090,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10057,
                            "src": "4885:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4862:32:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10092,
                        "nodeType": "ExpressionStatement",
                        "src": "4862:32:48"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10051,
              "nodeType": "StructuredDocumentation",
              "src": "3847:507:48",
              "text": " @notice SetSaleDetails\n         For storing NFT details on sale\n @param _tokenId NFT unique ID\n @param _price Unit price\n @param _quantity Total number of tokens in sale\n @param _erc20Token ERC20 token address, which can be used to buy this NFT\n @param _seller Seller address\n @param _nftAddress ERC721 or ERC1155 address\n @param _royaltyReceiver Royalty receiver address\n @param _royaltyPercentage Royalty percentage\n @param _IPFSHash IPFS Hash of NFT"
            },
            "id": 10151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSaleDetails",
            "nameLocation": "4366:15:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10053,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4395:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4387:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4387:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10055,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4417:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4409:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4409:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10057,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4437:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4429:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10059,
                  "mutability": "mutable",
                  "name": "_erc20Token",
                  "nameLocation": "4460:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4452:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4452:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10061,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "4485:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4477:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4477:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10063,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "4506:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4498:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4498:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10065,
                  "mutability": "mutable",
                  "name": "_royaltyReceiver",
                  "nameLocation": "4531:16:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4523:24:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4523:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10067,
                  "mutability": "mutable",
                  "name": "_royaltyPercentage",
                  "nameLocation": "4561:18:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4553:26:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4553:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10069,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "4599:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4585:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10068,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4585:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4381:231:48"
            },
            "returnParameters": {
              "id": 10071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4622:0:48"
            },
            "scope": 10943,
            "src": "4357:940:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10278,
              "nodeType": "Block",
              "src": "5745:1062:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10165,
                          "name": "_purchasingQuantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10157,
                          "src": "5759:19:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5781:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5759:23:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2043616e277420427579205a65726f204e465473",
                        "id": 10168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5784:30:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94",
                          "typeString": "literal_string \"BuyNfts: Can't Buy Zero NFTs\""
                        },
                        "value": "BuyNfts: Can't Buy Zero NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94",
                          "typeString": "literal_string \"BuyNfts: Can't Buy Zero NFTs\""
                        }
                      ],
                      "id": 10164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5751:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:64:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10170,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:64:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10172,
                          "name": "_purchasingQuantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10157,
                          "src": "5829:19:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 10173,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10155,
                            "src": "5852:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10174,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9925,
                          "src": "5852:18:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5829:41:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2045786365656473206d6178207175616e74697479",
                        "id": 10176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5872:31:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083",
                          "typeString": "literal_string \"BuyNfts: Exceeds max quantity\""
                        },
                        "value": "BuyNfts: Exceeds max quantity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083",
                          "typeString": "literal_string \"BuyNfts: Exceeds max quantity\""
                        }
                      ],
                      "id": 10171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5821:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5821:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10178,
                  "nodeType": "ExpressionStatement",
                  "src": "5821:83:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10180,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "5934:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9921,
                        "src": "5934:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10182,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "5959:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10183,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "5959:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10184,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "5982:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9925,
                        "src": "5982:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10186,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6008:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10187,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9927,
                        "src": "6008:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10188,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6036:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9929,
                        "src": "6036:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10190,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6060:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10191,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9931,
                        "src": "6060:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10192,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6088:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10193,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyReceiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9933,
                        "src": "6088:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10194,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6121:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10195,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyPercentage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9935,
                        "src": "6121:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10196,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6156:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10197,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IPFSHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9937,
                        "src": "6156:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 10179,
                      "name": "_setSaleDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10151,
                      "src": "5911:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,address,address,address,uint256,string memory)"
                      }
                    },
                    "id": 10198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5911:269:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10199,
                  "nodeType": "ExpressionStatement",
                  "src": "5911:269:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10201,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10155,
                        "src": "6198:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        }
                      },
                      {
                        "id": 10202,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10159,
                        "src": "6209:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 10200,
                      "name": "_verifyNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10942,
                      "src": "6187:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Metadata_$9938_memory_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Metadata memory,bytes calldata) view returns (bool)"
                      }
                    },
                    "id": 10203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6187:33:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10204,
                  "nodeType": "ExpressionStatement",
                  "src": "6187:33:48"
                },
                {
                  "assignments": [
                    10206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10206,
                      "mutability": "mutable",
                      "name": "buyAmount",
                      "nameLocation": "6235:9:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10278,
                      "src": "6227:17:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6227:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10212,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10210,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10157,
                        "src": "6267:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10207,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6247:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10208,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "6247:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6427,
                      "src": "6247:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6247:40:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6227:60:48"
                },
                {
                  "assignments": [
                    10214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10214,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nameLocation": "6301:5:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10278,
                      "src": "6293:13:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10213,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6293:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10217,
                  "initialValue": {
                    "expression": {
                      "id": 10215,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6309:3:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 10216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6309:10:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6293:26:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10218,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10155,
                        "src": "6330:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        }
                      },
                      "id": 10219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc20Token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9927,
                      "src": "6330:20:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 10222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6362:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 10221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6354:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6354:7:48",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6354:10:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6330:34:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10264,
                    "nodeType": "Block",
                    "src": "6485:206:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 10240,
                                    "name": "buyer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10214,
                                    "src": "6540:5:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 10243,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "6555:4:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_PrimaryFixedPriceNFTMarketPlace_$10943",
                                          "typeString": "contract PrimaryFixedPriceNFTMarketPlace"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_PrimaryFixedPriceNFTMarketPlace_$10943",
                                          "typeString": "contract PrimaryFixedPriceNFTMarketPlace"
                                        }
                                      ],
                                      "id": 10242,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6547:7:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 10241,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6547:7:48",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6547:13:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 10236,
                                          "name": "_metadata",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10155,
                                          "src": "6508:9:48",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                                          }
                                        },
                                        "id": 10237,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "erc20Token",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9927,
                                        "src": "6508:20:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 10235,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4630,
                                      "src": "6501:6:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$4630_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 10238,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6501:28:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$4630",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 10239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4607,
                                  "src": "6501:38:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 10245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6501:60:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 10246,
                                "name": "buyAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10206,
                                "src": "6565:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6501:73:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4275794e6674733a204c65737320616c6c6f77616e6365",
                              "id": 10248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6576:25:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9039ff3629dfc047e7c378a0927995387665464bb6450471a1ac3dad4e66b6b5",
                                "typeString": "literal_string \"BuyNfts: Less allowance\""
                              },
                              "value": "BuyNfts: Less allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9039ff3629dfc047e7c378a0927995387665464bb6450471a1ac3dad4e66b6b5",
                                "typeString": "literal_string \"BuyNfts: Less allowance\""
                              }
                            ],
                            "id": 10234,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6493:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6493:109:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10250,
                        "nodeType": "ExpressionStatement",
                        "src": "6493:109:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10256,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10214,
                              "src": "6652:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 10259,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6667:4:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PrimaryFixedPriceNFTMarketPlace_$10943",
                                    "typeString": "contract PrimaryFixedPriceNFTMarketPlace"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PrimaryFixedPriceNFTMarketPlace_$10943",
                                    "typeString": "contract PrimaryFixedPriceNFTMarketPlace"
                                  }
                                ],
                                "id": 10258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6659:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10257,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6659:7:48",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6659:13:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10261,
                              "name": "buyAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10206,
                              "src": "6674:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 10252,
                                    "name": "_metadata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10155,
                                    "src": "6617:9:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                                    }
                                  },
                                  "id": 10253,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "erc20Token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9927,
                                  "src": "6617:20:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10251,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4630,
                                "src": "6610:6:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$4630_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6610:28:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4630",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4629,
                            "src": "6610:41:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 10262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6610:74:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10263,
                        "nodeType": "ExpressionStatement",
                        "src": "6610:74:48"
                      }
                    ]
                  },
                  "id": 10265,
                  "nodeType": "IfStatement",
                  "src": "6326:365:48",
                  "trueBody": {
                    "id": 10233,
                    "nodeType": "Block",
                    "src": "6366:113:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 10226,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "6382:3:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 10227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6382:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 10228,
                                "name": "buyAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10206,
                                "src": "6395:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6382:22:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4275794e6674733a20496e73756666696369656e742066756e64",
                              "id": 10230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6406:28:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32bc38a528a1742431d1db4a30d337d8ee9bb9ef55ca3ee87b0f7837d96439c0",
                                "typeString": "literal_string \"BuyNfts: Insufficient fund\""
                              },
                              "value": "BuyNfts: Insufficient fund"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_32bc38a528a1742431d1db4a30d337d8ee9bb9ef55ca3ee87b0f7837d96439c0",
                                "typeString": "literal_string \"BuyNfts: Insufficient fund\""
                              }
                            ],
                            "id": 10225,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6374:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6374:61:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10232,
                        "nodeType": "ExpressionStatement",
                        "src": "6374:61:48"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10267,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6705:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10268,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9921,
                        "src": "6705:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10269,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6724:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9931,
                        "src": "6724:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10271,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6746:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10272,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9929,
                        "src": "6746:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10273,
                        "name": "buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10206,
                        "src": "6764:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10274,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10214,
                        "src": "6775:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10275,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10157,
                        "src": "6782:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10266,
                      "name": "_NftSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10729,
                      "src": "6696:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 10276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6696:106:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10277,
                  "nodeType": "ExpressionStatement",
                  "src": "6696:106:48"
                }
              ]
            },
            "documentation": {
              "id": 10152,
              "nodeType": "StructuredDocumentation",
              "src": "5301:298:48",
              "text": " @notice buyNft\n         For buying NFT using native coin or ERC20 tokens.\n @param _metadata Details of NFT in Metadata format\n @param _purchasingQuantity Purchasing amount of tokens\n @param _signature Metadata signature signed by admin during NFT creation on platform"
            },
            "functionSelector": "43fad86e",
            "id": 10279,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10162,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10161,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4388,
                  "src": "5732:12:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "5732:12:48"
              }
            ],
            "name": "buyNft",
            "nameLocation": "5611:6:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10155,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "5639:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "5623:25:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                  },
                  "typeName": {
                    "id": 10154,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10153,
                      "name": "Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9938,
                      "src": "5623:8:48"
                    },
                    "referencedDeclaration": 9938,
                    "src": "5623:8:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10157,
                  "mutability": "mutable",
                  "name": "_purchasingQuantity",
                  "nameLocation": "5662:19:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "5654:27:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5654:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10159,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5702:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "5687:25:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10158,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5687:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5617:99:48"
            },
            "returnParameters": {
              "id": 10163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5745:0:48"
            },
            "scope": 10943,
            "src": "5602:1205:48",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10361,
              "nodeType": "Block",
              "src": "7672:688:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10297,
                          "name": "_purchasingQuantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10285,
                          "src": "7686:19:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7708:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7686:23:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2043616e277420427579205a65726f204e465473",
                        "id": 10300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7711:30:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94",
                          "typeString": "literal_string \"BuyNfts: Can't Buy Zero NFTs\""
                        },
                        "value": "BuyNfts: Can't Buy Zero NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94",
                          "typeString": "literal_string \"BuyNfts: Can't Buy Zero NFTs\""
                        }
                      ],
                      "id": 10296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7678:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7678:64:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10302,
                  "nodeType": "ExpressionStatement",
                  "src": "7678:64:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10304,
                          "name": "_purchasingQuantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10285,
                          "src": "7756:19:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 10305,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10283,
                            "src": "7779:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9925,
                          "src": "7779:18:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7756:41:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2045786365656473206d6178207175616e74697479",
                        "id": 10308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7799:31:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083",
                          "typeString": "literal_string \"BuyNfts: Exceeds max quantity\""
                        },
                        "value": "BuyNfts: Exceeds max quantity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083",
                          "typeString": "literal_string \"BuyNfts: Exceeds max quantity\""
                        }
                      ],
                      "id": 10303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7748:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7748:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10310,
                  "nodeType": "ExpressionStatement",
                  "src": "7748:83:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10312,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7861:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10313,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9921,
                        "src": "7861:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10314,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7886:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10315,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "7886:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10316,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7909:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10317,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9925,
                        "src": "7909:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10318,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7935:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10319,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9927,
                        "src": "7935:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10320,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7963:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10321,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9929,
                        "src": "7963:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10322,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7987:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10323,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9931,
                        "src": "7987:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10324,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8015:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10325,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyReceiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9933,
                        "src": "8015:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10326,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8048:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyPercentage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9935,
                        "src": "8048:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10328,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8083:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10329,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IPFSHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9937,
                        "src": "8083:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 10311,
                      "name": "_setSaleDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10151,
                      "src": "7838:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,address,address,address,uint256,string memory)"
                      }
                    },
                    "id": 10330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:269:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10331,
                  "nodeType": "ExpressionStatement",
                  "src": "7838:269:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10333,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10283,
                        "src": "8125:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        }
                      },
                      {
                        "id": 10334,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10287,
                        "src": "8136:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 10332,
                      "name": "_verifyNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10942,
                      "src": "8114:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Metadata_$9938_memory_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Metadata memory,bytes calldata) view returns (bool)"
                      }
                    },
                    "id": 10335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8114:33:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10336,
                  "nodeType": "ExpressionStatement",
                  "src": "8114:33:48"
                },
                {
                  "assignments": [
                    10338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10338,
                      "mutability": "mutable",
                      "name": "buyAmount",
                      "nameLocation": "8162:9:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10361,
                      "src": "8154:17:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8154:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10344,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10342,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10285,
                        "src": "8194:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10339,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8174:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "8174:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6427,
                      "src": "8174:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8174:40:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8154:60:48"
                },
                {
                  "assignments": [
                    10346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10346,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nameLocation": "8228:5:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10361,
                      "src": "8220:13:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10345,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8220:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10348,
                  "initialValue": {
                    "id": 10347,
                    "name": "_buyer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10289,
                    "src": "8236:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8220:22:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10350,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8258:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10351,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9921,
                        "src": "8258:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10352,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8277:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9931,
                        "src": "8277:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10354,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8299:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10355,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9929,
                        "src": "8299:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10356,
                        "name": "buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10338,
                        "src": "8317:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10357,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10346,
                        "src": "8328:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10358,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10285,
                        "src": "8335:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10349,
                      "name": "_NftSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10729,
                      "src": "8249:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 10359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8249:106:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10360,
                  "nodeType": "ExpressionStatement",
                  "src": "8249:106:48"
                }
              ]
            },
            "documentation": {
              "id": 10280,
              "nodeType": "StructuredDocumentation",
              "src": "6811:679:48",
              "text": " @notice This function can only be called by the admin account\n The fiat payment will be converted into to crypto via on-ramp and transferred to the contract for\n administering the payment split and token transfer on-chain\n IMPORTANT: It should only be called after the right amount of crypto/token should received in the contract\n The transfer should be confirmed off chain before calling this function\n @param _metadata Details of NFT in Metadata format\n @param _purchasingQuantity Purchasing amount of tokens\n @param _signature Metadata signature signed by admin during NFT creation on platform\n @param _buyer NFT receiver address"
            },
            "functionSelector": "7e71cdba",
            "id": 10362,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10292,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10291,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10007,
                  "src": "7649:9:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "7649:9:48"
              },
              {
                "id": 10294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10293,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4388,
                  "src": "7659:12:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "7659:12:48"
              }
            ],
            "name": "fiatPurchase",
            "nameLocation": "7502:12:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10283,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "7536:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "7520:25:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                  },
                  "typeName": {
                    "id": 10282,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10281,
                      "name": "Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9938,
                      "src": "7520:8:48"
                    },
                    "referencedDeclaration": 9938,
                    "src": "7520:8:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10285,
                  "mutability": "mutable",
                  "name": "_purchasingQuantity",
                  "nameLocation": "7559:19:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "7551:27:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7551:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10287,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7599:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "7584:25:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10286,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7584:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10289,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "7623:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "7615:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7615:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7514:119:48"
            },
            "returnParameters": {
              "id": 10295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7672:0:48"
            },
            "scope": 10943,
            "src": "7493:867:48",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10448,
              "nodeType": "Block",
              "src": "8978:543:48",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 10384,
                        "name": "ERC721InterfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9987,
                        "src": "9027:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10381,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10367,
                            "src": "8996:11:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10380,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5063,
                          "src": "8988:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5063_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 10382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8988:20:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5063",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 10383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6220,
                      "src": "8988:38:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 10385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8988:57:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 10415,
                          "name": "ERC1155InterfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9990,
                          "src": "9286:18:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 10412,
                              "name": "_nftAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10367,
                              "src": "9255:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10411,
                            "name": "IERC1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4511,
                            "src": "9246:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC1155_$4511_$",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 10413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9246:21:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$4511",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 10414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6220,
                        "src": "9246:39:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view external returns (bool)"
                        }
                      },
                      "id": 10416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9246:59:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 10446,
                    "nodeType": "IfStatement",
                    "src": "9242:275:48",
                    "trueBody": {
                      "id": 10445,
                      "nodeType": "Block",
                      "src": "9307:210:48",
                      "statements": [
                        {
                          "assignments": [
                            10421
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 10421,
                              "mutability": "mutable",
                              "name": "royalties",
                              "nameLocation": "9340:9:48",
                              "nodeType": "VariableDeclaration",
                              "scope": 10445,
                              "src": "9315:34:48",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Royalties_$9859_memory_ptr",
                                "typeString": "struct ERC1155.Royalties"
                              },
                              "typeName": {
                                "id": 10420,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 10419,
                                  "name": "ERC1155.Royalties",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 9859,
                                  "src": "9315:17:48"
                                },
                                "referencedDeclaration": 9859,
                                "src": "9315:17:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Royalties_$9859_storage_ptr",
                                  "typeString": "struct ERC1155.Royalties"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 10430,
                          "initialValue": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10426,
                                    "name": "_royaltyReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10373,
                                    "src": "9378:16:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9370:8:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 10424,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9370:8:48",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9370:25:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 10428,
                                "name": "_royaltyPercentage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10375,
                                "src": "9397:18:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10422,
                                "name": "ERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9887,
                                "src": "9352:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC1155_$9887_$",
                                  "typeString": "type(contract ERC1155)"
                                }
                              },
                              "id": 10423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Royalties",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9859,
                              "src": "9352:17:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Royalties_$9859_storage_ptr_$",
                                "typeString": "type(struct ERC1155.Royalties storage pointer)"
                              }
                            },
                            "id": 10429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9352:64:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Royalties_$9859_memory_ptr",
                              "typeString": "struct ERC1155.Royalties memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9315:101:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 10435,
                                "name": "_receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10365,
                                "src": "9450:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10436,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10369,
                                "src": "9461:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 10437,
                                "name": "_quantity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10371,
                                "src": "9471:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 10440,
                                    "name": "_ipfsHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10377,
                                    "src": "9488:9:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 10439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9482:5:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 10438,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9482:5:48",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9482:16:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 10442,
                                "name": "royalties",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10421,
                                "src": "9500:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Royalties_$9859_memory_ptr",
                                  "typeString": "struct ERC1155.Royalties memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Royalties_$9859_memory_ptr",
                                  "typeString": "struct ERC1155.Royalties memory"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10432,
                                    "name": "_nftAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10367,
                                    "src": "9432:11:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10431,
                                  "name": "ERC1155",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9887,
                                  "src": "9424:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$9887_$",
                                    "typeString": "type(contract ERC1155)"
                                  }
                                },
                                "id": 10433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9424:20:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC1155_$9887",
                                  "typeString": "contract ERC1155"
                                }
                              },
                              "id": 10434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9873,
                              "src": "9424:25:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_struct$_Royalties_$9859_memory_ptr_$returns$__$",
                                "typeString": "function (address,uint256,uint256,bytes memory,struct ERC1155.Royalties memory) external"
                              }
                            },
                            "id": 10443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9424:86:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10444,
                          "nodeType": "ExpressionStatement",
                          "src": "9424:86:48"
                        }
                      ]
                    }
                  },
                  "id": 10447,
                  "nodeType": "IfStatement",
                  "src": "8984:533:48",
                  "trueBody": {
                    "id": 10410,
                    "nodeType": "Block",
                    "src": "9047:189:48",
                    "statements": [
                      {
                        "assignments": [
                          10390
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10390,
                            "mutability": "mutable",
                            "name": "royalties",
                            "nameLocation": "9079:9:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 10410,
                            "src": "9055:33:48",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Royalties_$9893_memory_ptr",
                              "typeString": "struct ERC721.Royalties"
                            },
                            "typeName": {
                              "id": 10389,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 10388,
                                "name": "ERC721.Royalties",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9893,
                                "src": "9055:16:48"
                              },
                              "referencedDeclaration": 9893,
                              "src": "9055:16:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Royalties_$9893_storage_ptr",
                                "typeString": "struct ERC721.Royalties"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10399,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 10395,
                                  "name": "_royaltyReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10373,
                                  "src": "9116:16:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9108:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 10393,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9108:8:48",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9108:25:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 10397,
                              "name": "_royaltyPercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10375,
                              "src": "9135:18:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10391,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9906,
                              "src": "9091:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$9906_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 10392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Royalties",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9893,
                            "src": "9091:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Royalties_$9893_storage_ptr_$",
                              "typeString": "type(struct ERC721.Royalties storage pointer)"
                            }
                          },
                          "id": 10398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9091:63:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Royalties_$9893_memory_ptr",
                            "typeString": "struct ERC721.Royalties memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9055:99:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10404,
                              "name": "_receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10365,
                              "src": "9187:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10405,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10369,
                              "src": "9198:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10406,
                              "name": "_ipfsHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10377,
                              "src": "9208:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 10407,
                              "name": "royalties",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10390,
                              "src": "9219:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Royalties_$9893_memory_ptr",
                                "typeString": "struct ERC721.Royalties memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_Royalties_$9893_memory_ptr",
                                "typeString": "struct ERC721.Royalties memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10401,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10367,
                                  "src": "9169:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10400,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9906,
                                "src": "9162:6:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$9906_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 10402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9162:19:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$9906",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 10403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9905,
                            "src": "9162:24:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_struct$_Royalties_$9893_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,string memory,struct ERC721.Royalties memory) external"
                            }
                          },
                          "id": 10408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9162:67:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10409,
                        "nodeType": "ExpressionStatement",
                        "src": "9162:67:48"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10363,
              "nodeType": "StructuredDocumentation",
              "src": "8364:396:48",
              "text": " @notice Mint NFT\n         Calling ERC20 or ERC1155 Mint function\n @param _receiver NFT Receiver\n @param _nftAddress ERC721 or ERC1155 address\n @param _tokenId NFT unique ID\n @param _quantity Purchasing amount of tokens\n @param _royaltyReceiver Royalty receiver address\n @param _royaltyPercentage Royalty percentage\n @param _ipfsHash IPFS Hash of NFT"
            },
            "id": 10449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintNFT",
            "nameLocation": "8772:8:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10365,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "8794:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8786:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8786:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10367,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "8817:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8809:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8809:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10369,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8842:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8834:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8834:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10371,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8864:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8856:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8856:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10373,
                  "mutability": "mutable",
                  "name": "_royaltyReceiver",
                  "nameLocation": "8887:16:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8879:24:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8879:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10375,
                  "mutability": "mutable",
                  "name": "_royaltyPercentage",
                  "nameLocation": "8917:18:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8909:26:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8909:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10377,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nameLocation": "8955:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8941:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10376,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8941:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8780:188:48"
            },
            "returnParameters": {
              "id": 10379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8978:0:48"
            },
            "scope": 10943,
            "src": "8763:758:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4145
            ],
            "body": {
              "id": 10464,
              "nodeType": "Block",
              "src": "9815:54:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10461,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10452,
                        "src": "9852:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 10459,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9828:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PrimaryFixedPriceNFTMarketPlace_$10943_$",
                          "typeString": "type(contract super PrimaryFixedPriceNFTMarketPlace)"
                        }
                      },
                      "id": 10460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4145,
                      "src": "9828:23:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 10462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9828:36:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10458,
                  "id": 10463,
                  "nodeType": "Return",
                  "src": "9821:43:48"
                }
              ]
            },
            "documentation": {
              "id": 10450,
              "nodeType": "StructuredDocumentation",
              "src": "9525:179:48",
              "text": " @notice Supports Interface\n         Function to check wether the contract support specific interface\n @param interfaceId Interface type\n @return boolean"
            },
            "functionSelector": "01ffc9a7",
            "id": 10465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "9716:17:48",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10455,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 10454,
                  "name": "AccessControlEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4229,
                  "src": "9775:23:48"
                }
              ],
              "src": "9766:33:48"
            },
            "parameters": {
              "id": 10453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10452,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "9741:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10465,
                  "src": "9734:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10451,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "9734:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9733:20:48"
            },
            "returnParameters": {
              "id": 10458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10465,
                  "src": "9809:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10456,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9809:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9808:6:48"
            },
            "scope": 10943,
            "src": "9707:162:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10484,
              "nodeType": "Block",
              "src": "10040:98:48",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10472,
                              "name": "ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9984,
                              "src": "10062:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 10473,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5388,
                                "src": "10074:10:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 10474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10074:12:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10471,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "10054:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 10475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10054:33:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10477,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3812,
                              "src": "10099:18:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 10478,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5388,
                                "src": "10119:10:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 10479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10119:12:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10476,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "10091:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 10480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10091:41:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10054:78:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 10482,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10053:80:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10470,
                  "id": 10483,
                  "nodeType": "Return",
                  "src": "10046:87:48"
                }
              ]
            },
            "documentation": {
              "id": 10466,
              "nodeType": "StructuredDocumentation",
              "src": "9873:115:48",
              "text": " @notice Is Admin\n         Checks if the msg.sender has admin roles assigned\n @return boolean"
            },
            "id": 10485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAdmin",
            "nameLocation": "10000:8:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10008:2:48"
            },
            "returnParameters": {
              "id": 10470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10485,
                  "src": "10034:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10468,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10034:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10033:6:48"
            },
            "scope": 10943,
            "src": "9991:147:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10504,
              "nodeType": "Block",
              "src": "10360:126:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10493,
                            "name": "_platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10489,
                            "src": "10374:12:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                            }
                          },
                          "id": 10494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "percentageValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9942,
                          "src": "10374:28:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35303030",
                          "id": 10495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10406:4:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5000_by_1",
                            "typeString": "int_const 5000"
                          },
                          "value": "5000"
                        },
                        "src": "10374:36:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4665653a206d617820616c6c6f776564207065726563656e74616765206973203530",
                        "id": 10497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10412:36:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_712c8bde25a5526dd8d8d797eba631a3fbc2b43878da80d60a478dc1d0627030",
                          "typeString": "literal_string \"Fee: max allowed perecentage is 50\""
                        },
                        "value": "Fee: max allowed perecentage is 50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_712c8bde25a5526dd8d8d797eba631a3fbc2b43878da80d60a478dc1d0627030",
                          "typeString": "literal_string \"Fee: max allowed perecentage is 50\""
                        }
                      ],
                      "id": 10492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10366:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10366:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10499,
                  "nodeType": "ExpressionStatement",
                  "src": "10366:83:48"
                },
                {
                  "expression": {
                    "id": 10502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10500,
                      "name": "platformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9979,
                      "src": "10455:11:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$9943_storage",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10501,
                      "name": "_platformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10489,
                      "src": "10469:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                      }
                    },
                    "src": "10455:26:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                    }
                  },
                  "id": 10503,
                  "nodeType": "ExpressionStatement",
                  "src": "10455:26:48"
                }
              ]
            },
            "documentation": {
              "id": 10486,
              "nodeType": "StructuredDocumentation",
              "src": "10142:156:48",
              "text": " @notice PlatformFee\n         Internal function to set platform fee and fee receiver\n @param _platformFee Fee and fee receiver details"
            },
            "id": 10505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setPlatformFee",
            "nameLocation": "10310:15:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10489,
                  "mutability": "mutable",
                  "name": "_platformFee",
                  "nameLocation": "10337:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10505,
                  "src": "10326:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 10488,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10487,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "10326:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "10326:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10325:25:48"
            },
            "returnParameters": {
              "id": 10491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10360:0:48"
            },
            "scope": 10943,
            "src": "10301:185:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10644,
              "nodeType": "Block",
              "src": "10761:1033:48",
              "statements": [
                {
                  "assignments": [
                    10516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10516,
                      "mutability": "mutable",
                      "name": "sellerProfit",
                      "nameLocation": "10775:12:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10644,
                      "src": "10767:20:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10767:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10517,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10767:20:48"
                },
                {
                  "assignments": [
                    10519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10519,
                      "mutability": "mutable",
                      "name": "platformProfit",
                      "nameLocation": "10801:14:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10644,
                      "src": "10793:22:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10518,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10793:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10520,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10793:22:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10521,
                        "name": "platformFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9979,
                        "src": "10826:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_storage",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                        }
                      },
                      "id": 10522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "percentageValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9942,
                      "src": "10826:27:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10856:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10826:31:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10537,
                  "nodeType": "IfStatement",
                  "src": "10822:119:48",
                  "trueBody": {
                    "id": 10536,
                    "nodeType": "Block",
                    "src": "10859:82:48",
                    "statements": [
                      {
                        "expression": {
                          "id": 10534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10525,
                            "name": "platformProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10519,
                            "src": "10867:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "3130303030",
                                "id": 10532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10928:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 10528,
                                      "name": "platformFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9979,
                                      "src": "10895:11:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                      }
                                    },
                                    "id": 10529,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "percentageValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9942,
                                    "src": "10895:27:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10526,
                                    "name": "_price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10508,
                                    "src": "10884:6:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 10527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6427,
                                  "src": "10884:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 10530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10884:39:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6442,
                              "src": "10884:43:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10884:50:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10867:67:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10535,
                        "nodeType": "ExpressionStatement",
                        "src": "10867:67:48"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10538,
                      "name": "sellerProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10516,
                      "src": "10946:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10541,
                          "name": "platformProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10519,
                          "src": "10972:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10539,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10508,
                          "src": "10961:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6412,
                        "src": "10961:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10961:26:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10946:41:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10544,
                  "nodeType": "ExpressionStatement",
                  "src": "10946:41:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10545,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10510,
                      "src": "10998:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 10548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11019:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 10547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11011:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11011:7:48",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11011:10:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10998:23:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10630,
                    "nodeType": "Block",
                    "src": "11480:216:48",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 10606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 10600,
                                "name": "platformFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9979,
                                "src": "11492:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                  "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                }
                              },
                              "id": 10601,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "receiver",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9940,
                              "src": "11492:20:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 10604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11524:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 10603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11516:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10602,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11516:7:48",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11516:10:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11492:34:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10607,
                              "name": "platformProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10519,
                              "src": "11530:14:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 10608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11547:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11530:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11492:56:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10621,
                        "nodeType": "IfStatement",
                        "src": "11488:145:48",
                        "trueBody": {
                          "id": 10620,
                          "nodeType": "Block",
                          "src": "11550:83:48",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 10615,
                                      "name": "platformFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9979,
                                      "src": "11587:11:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                      }
                                    },
                                    "id": 10616,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "receiver",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9940,
                                    "src": "11587:20:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 10617,
                                    "name": "platformProfit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10519,
                                    "src": "11609:14:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 10612,
                                        "name": "_currency",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10510,
                                        "src": "11567:9:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 10611,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4630,
                                      "src": "11560:6:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$4630_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 10613,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11560:17:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$4630",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 10614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4597,
                                  "src": "11560:26:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 10618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11560:64:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 10619,
                              "nodeType": "ExpressionStatement",
                              "src": "11560:64:48"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10626,
                              "name": "_seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10512,
                              "src": "11667:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10627,
                              "name": "sellerProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10516,
                              "src": "11676:12:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10623,
                                  "name": "_currency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10510,
                                  "src": "11647:9:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10622,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4630,
                                "src": "11640:6:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$4630_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11640:17:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4630",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4597,
                            "src": "11640:26:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 10628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11640:49:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10629,
                        "nodeType": "ExpressionStatement",
                        "src": "11640:49:48"
                      }
                    ]
                  },
                  "id": 10631,
                  "nodeType": "IfStatement",
                  "src": "10994:702:48",
                  "trueBody": {
                    "id": 10599,
                    "nodeType": "Block",
                    "src": "11023:451:48",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 10557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 10551,
                                "name": "platformFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9979,
                                "src": "11035:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                  "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                }
                              },
                              "id": 10552,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "receiver",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9940,
                              "src": "11035:20:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 10555,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11067:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 10554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11059:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10553,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11059:7:48",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11059:10:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11035:34:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10558,
                              "name": "platformProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10519,
                              "src": "11073:14:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 10559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11090:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11073:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11035:56:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10581,
                        "nodeType": "IfStatement",
                        "src": "11031:276:48",
                        "trueBody": {
                          "id": 10580,
                          "nodeType": "Block",
                          "src": "11093:214:48",
                          "statements": [
                            {
                              "assignments": [
                                10563,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10563,
                                  "mutability": "mutable",
                                  "name": "isPlatformFeeTransferSuccess",
                                  "nameLocation": "11109:28:48",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10580,
                                  "src": "11104:33:48",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 10562,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11104:4:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 10574,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 10572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11203:2:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 10566,
                                            "name": "platformFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9979,
                                            "src": "11151:11:48",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                            }
                                          },
                                          "id": 10567,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "receiver",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 9940,
                                          "src": "11151:20:48",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 10565,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11143:8:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_payable_$",
                                          "typeString": "type(address payable)"
                                        },
                                        "typeName": {
                                          "id": 10564,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11143:8:48",
                                          "stateMutability": "payable",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 10568,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11143:29:48",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 10569,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "11143:34:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 10571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 10570,
                                      "name": "platformProfit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10519,
                                      "src": "11186:14:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "11143:59:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 10573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11143:63:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11103:103:48"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10576,
                                    "name": "isPlatformFeeTransferSuccess",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10563,
                                    "src": "11224:28:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5472616e7366657220746f20706c6174666f726d20666565207265636569766572206661696c65642e",
                                    "id": 10577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11254:43:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_27bf476ffb9cb11b7dd1e159b6058af2ed090c8bdb984a4b0e17d04844ed51cc",
                                      "typeString": "literal_string \"Transfer to platform fee receiver failed.\""
                                    },
                                    "value": "Transfer to platform fee receiver failed."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_27bf476ffb9cb11b7dd1e159b6058af2ed090c8bdb984a4b0e17d04844ed51cc",
                                      "typeString": "literal_string \"Transfer to platform fee receiver failed.\""
                                    }
                                  ],
                                  "id": 10575,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "11216:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 10578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11216:82:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 10579,
                              "nodeType": "ExpressionStatement",
                              "src": "11216:82:48"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          10583,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10583,
                            "mutability": "mutable",
                            "name": "isSellerTransferSuccess",
                            "nameLocation": "11320:23:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 10599,
                            "src": "11315:28:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 10582,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "11315:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 10593,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 10591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11394:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10586,
                                    "name": "_seller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10512,
                                    "src": "11357:7:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10585,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11349:8:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 10584,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11349:8:48",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11349:16:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 10588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "11349:21:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 10590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 10589,
                                "name": "sellerProfit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10516,
                                "src": "11379:12:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "11349:44:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 10592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11349:48:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11314:83:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10595,
                              "name": "isSellerTransferSuccess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10583,
                              "src": "11413:23:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e7366657220746f2073656c6c6572206661696c65642e",
                              "id": 10596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11438:28:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7551da239d0b71316f7c4694a6e46074b76966ce6e035c3e477215f7cdbbe220",
                                "typeString": "literal_string \"Transfer to seller failed.\""
                              },
                              "value": "Transfer to seller failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7551da239d0b71316f7c4694a6e46074b76966ce6e035c3e477215f7cdbbe220",
                                "typeString": "literal_string \"Transfer to seller failed.\""
                              }
                            ],
                            "id": 10594,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "11405:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11405:62:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10598,
                        "nodeType": "ExpressionStatement",
                        "src": "11405:62:48"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10634,
                            "name": "_seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10512,
                            "src": "11723:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10635,
                            "name": "sellerProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10516,
                            "src": "11732:12:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10633,
                          "name": "Fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9943,
                          "src": "11719:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Fee_$9943_storage_ptr_$",
                            "typeString": "type(struct PrimaryFixedPriceNFTMarketPlace.Fee storage pointer)"
                          }
                        },
                        "id": 10636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11719:26:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10638,
                              "name": "platformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9979,
                              "src": "11751:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                              }
                            },
                            "id": 10639,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9940,
                            "src": "11751:20:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10640,
                            "name": "platformProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10519,
                            "src": "11773:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10637,
                          "name": "Fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9943,
                          "src": "11747:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Fee_$9943_storage_ptr_$",
                            "typeString": "type(struct PrimaryFixedPriceNFTMarketPlace.Fee storage pointer)"
                          }
                        },
                        "id": 10641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11747:41:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      ],
                      "id": 10632,
                      "name": "FundTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9967,
                      "src": "11706:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Fee_$9943_memory_ptr_$_t_struct$_Fee_$9943_memory_ptr_$returns$__$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Fee memory,struct PrimaryFixedPriceNFTMarketPlace.Fee memory)"
                      }
                    },
                    "id": 10642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11706:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10643,
                  "nodeType": "EmitStatement",
                  "src": "11701:88:48"
                }
              ]
            },
            "documentation": {
              "id": 10506,
              "nodeType": "StructuredDocumentation",
              "src": "10490:174:48",
              "text": " @notice Pay Out\n         To debit fees during NFT purchase\n @param _price Fee\n @param _currency Type of currency\n @param _seller Seller address"
            },
            "id": 10645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOut",
            "nameLocation": "10676:7:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10508,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "10697:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10645,
                  "src": "10689:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10689:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10510,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "10717:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10645,
                  "src": "10709:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10709:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10512,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "10740:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10645,
                  "src": "10732:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10732:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10683:68:48"
            },
            "returnParameters": {
              "id": 10514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10761:0:48"
            },
            "scope": 10943,
            "src": "10667:1127:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10728,
              "nodeType": "Block",
              "src": "12299:678:48",
              "statements": [
                {
                  "assignments": [
                    10663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10663,
                      "mutability": "mutable",
                      "name": "nftOnSaleStorage",
                      "nameLocation": "12322:16:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10728,
                      "src": "12305:33:48",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                      },
                      "typeName": {
                        "id": 10662,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10661,
                          "name": "Metadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9938,
                          "src": "12305:8:48"
                        },
                        "referencedDeclaration": 9938,
                        "src": "12305:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10671,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10664,
                          "name": "mapSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9976,
                          "src": "12341:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                            "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)))"
                          }
                        },
                        "id": 10666,
                        "indexExpression": {
                          "id": 10665,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10650,
                          "src": "12349:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12341:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref))"
                        }
                      },
                      "id": 10668,
                      "indexExpression": {
                        "id": 10667,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10648,
                        "src": "12362:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12341:30:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                        "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)"
                      }
                    },
                    "id": 10670,
                    "indexExpression": {
                      "id": 10669,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10652,
                      "src": "12372:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12341:39:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12305:75:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10673,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10656,
                        "src": "12403:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10674,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10650,
                        "src": "12417:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10675,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10648,
                        "src": "12436:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10676,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "12452:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10677,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12479:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10678,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyReceiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9933,
                        "src": "12479:32:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10679,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12519:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10680,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyPercentage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9935,
                        "src": "12519:34:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10681,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12561:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IPFSHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9937,
                        "src": "12561:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 10672,
                      "name": "_mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10449,
                      "src": "12387:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address,uint256,string memory)"
                      }
                    },
                    "id": 10683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12387:205:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10684,
                  "nodeType": "ExpressionStatement",
                  "src": "12387:205:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10686,
                        "name": "_buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10654,
                        "src": "12606:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10687,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12618:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10688,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9927,
                        "src": "12618:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10689,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10652,
                        "src": "12647:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10685,
                      "name": "_payOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10645,
                      "src": "12598:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 10690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12598:57:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10691,
                  "nodeType": "ExpressionStatement",
                  "src": "12598:57:48"
                },
                {
                  "expression": {
                    "id": 10699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10692,
                        "name": "nftOnSaleStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "12662:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                        }
                      },
                      "id": 10694,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "quantity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9925,
                      "src": "12662:25:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10695,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12690:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10696,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9925,
                        "src": "12690:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 10697,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "12718:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12690:47:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12662:75:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10700,
                  "nodeType": "ExpressionStatement",
                  "src": "12662:75:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10701,
                        "name": "nftOnSaleStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "12748:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                        }
                      },
                      "id": 10702,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "quantity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9925,
                      "src": "12748:25:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12777:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12748:30:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10715,
                  "nodeType": "IfStatement",
                  "src": "12744:97:48",
                  "trueBody": {
                    "id": 10714,
                    "nodeType": "Block",
                    "src": "12780:61:48",
                    "statements": [
                      {
                        "expression": {
                          "id": 10712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "12788:46:48",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 10705,
                                  "name": "mapSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9976,
                                  "src": "12795:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)))"
                                  }
                                },
                                "id": 10707,
                                "indexExpression": {
                                  "id": 10706,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10650,
                                  "src": "12803:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12795:20:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref))"
                                }
                              },
                              "id": 10709,
                              "indexExpression": {
                                "id": 10708,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10648,
                                "src": "12816:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12795:30:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                                "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)"
                              }
                            },
                            "id": 10711,
                            "indexExpression": {
                              "id": 10710,
                              "name": "_seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10652,
                              "src": "12826:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12795:39:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_storage",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10713,
                        "nodeType": "ExpressionStatement",
                        "src": "12788:46:48"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10717,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10648,
                        "src": "12859:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10718,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10650,
                        "src": "12869:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10719,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10652,
                        "src": "12882:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10720,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12891:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10721,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "12891:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10722,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12915:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10723,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9927,
                        "src": "12915:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10724,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10656,
                        "src": "12944:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10725,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "12952:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10716,
                      "name": "NftSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9959,
                      "src": "12851:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 10726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12851:121:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10727,
                  "nodeType": "EmitStatement",
                  "src": "12846:126:48"
                }
              ]
            },
            "documentation": {
              "id": 10646,
              "nodeType": "StructuredDocumentation",
              "src": "11798:322:48",
              "text": " @notice NFT Sale\n         To handle mint and payout\n @param _tokenId NFT unique ID\n @param _nftAddress ERC721 or ERC1155 address\n @param _seller Seller address\n @param _buyAmount Total amount\n @param _buyer Receiver address\n @param _purchasingQuantity Purchasing amount of tokens"
            },
            "id": 10729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_NftSale",
            "nameLocation": "12132:8:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10648,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "12154:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12146:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12146:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10650,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "12176:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12168:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12168:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10652,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "12201:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12193:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12193:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10654,
                  "mutability": "mutable",
                  "name": "_buyAmount",
                  "nameLocation": "12222:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12214:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12214:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10656,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "12246:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12238:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12238:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10658,
                  "mutability": "mutable",
                  "name": "_purchasingQuantity",
                  "nameLocation": "12266:19:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12258:27:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12258:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12140:149:48"
            },
            "returnParameters": {
              "id": 10660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12299:0:48"
            },
            "scope": 10943,
            "src": "12123:854:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10762,
              "nodeType": "Block",
              "src": "13215:203:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10738,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10732,
                          "src": "13229:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13252:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13244:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10739,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13244:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13244:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13229:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "69734e46543a205a65726f2041646472657373",
                        "id": 10744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13256:21:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c96d5fea898c152e4c149cec6c4894771bf6d21beb569ae431fa06be2aa1783",
                          "typeString": "literal_string \"isNFT: Zero Address\""
                        },
                        "value": "isNFT: Zero Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c96d5fea898c152e4c149cec6c4894771bf6d21beb569ae431fa06be2aa1783",
                          "typeString": "literal_string \"isNFT: Zero Address\""
                        }
                      ],
                      "id": 10737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13221:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13221:57:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10746,
                  "nodeType": "ExpressionStatement",
                  "src": "13221:57:48"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10751,
                              "name": "ERC721InterfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9987,
                              "src": "13331:17:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10748,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10732,
                                  "src": "13300:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10747,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5063,
                                "src": "13292:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5063_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 10749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13292:20:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5063",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 10750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6220,
                            "src": "13292:38:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view external returns (bool)"
                            }
                          },
                          "id": 10752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13292:57:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10757,
                              "name": "ERC1155InterfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9990,
                              "src": "13393:18:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10754,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10732,
                                  "src": "13362:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10753,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4511,
                                "src": "13353:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$4511_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 10755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13353:21:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$4511",
                                "typeString": "contract IERC1155"
                              }
                            },
                            "id": 10756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6220,
                            "src": "13353:39:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view external returns (bool)"
                            }
                          },
                          "id": 10758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13353:59:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13292:120:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 10760,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "13291:122:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10736,
                  "id": 10761,
                  "nodeType": "Return",
                  "src": "13284:129:48"
                }
              ]
            },
            "documentation": {
              "id": 10730,
              "nodeType": "StructuredDocumentation",
              "src": "12981:165:48",
              "text": " @notice Is NFT\n         Checks if the nft address specified is ERC721 or ERC1155\n @param _nftAddress NFT Contract address\n @return boolean"
            },
            "id": 10763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isNFT",
            "nameLocation": "13158:6:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10732,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "13173:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10763,
                  "src": "13165:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13165:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13164:21:48"
            },
            "returnParameters": {
              "id": 10736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10735,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10763,
                  "src": "13209:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10734,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13209:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13208:6:48"
            },
            "scope": 10943,
            "src": "13149:269:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10817,
              "nodeType": "Block",
              "src": "13777:535:48",
              "statements": [
                {
                  "assignments": [
                    10777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10777,
                      "mutability": "mutable",
                      "name": "NftForSale",
                      "nameLocation": "13800:10:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10817,
                      "src": "13783:27:48",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                      },
                      "typeName": {
                        "id": 10776,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10775,
                          "name": "Metadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9938,
                          "src": "13783:8:48"
                        },
                        "referencedDeclaration": 9938,
                        "src": "13783:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10785,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10778,
                          "name": "mapSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9976,
                          "src": "13813:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                            "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)))"
                          }
                        },
                        "id": 10780,
                        "indexExpression": {
                          "id": 10779,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10770,
                          "src": "13821:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13813:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref))"
                        }
                      },
                      "id": 10782,
                      "indexExpression": {
                        "id": 10781,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10766,
                        "src": "13833:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13813:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                        "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)"
                      }
                    },
                    "id": 10784,
                    "indexExpression": {
                      "id": 10783,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10768,
                      "src": "13842:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13813:36:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13783:66:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10790,
                                "name": "FIXED_PRICE_TYPEHASH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9996,
                                "src": "13939:20:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 10791,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10766,
                                "src": "13973:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10792,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "13994:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10793,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9923,
                                "src": "13994:16:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10794,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14024:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10795,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "quantity",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9925,
                                "src": "14024:19:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10796,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14057:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10797,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "erc20Token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9927,
                                "src": "14057:21:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10798,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14092:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10799,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "seller",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9929,
                                "src": "14092:17:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10800,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14123:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10801,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9931,
                                "src": "14123:21:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10802,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14158:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10803,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "royaltyReceiver",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9933,
                                "src": "14158:26:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10804,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14198:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10805,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "royaltyPercentage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9935,
                                "src": "14198:28:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 10809,
                                          "name": "NftForSale",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10777,
                                          "src": "14256:10:48",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                          }
                                        },
                                        "id": 10810,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "IPFSHash",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9937,
                                        "src": "14256:19:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "id": 10808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14250:5:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 10807,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14250:5:48",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10811,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14250:26:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes storage pointer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes storage pointer"
                                    }
                                  ],
                                  "id": 10806,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "14240:9:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 10812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14240:37:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 10788,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "13915:3:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 10789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "13915:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 10813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13915:374:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 10787,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "13894:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13894:405:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 10786,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6184,
                      "src": "13868:16:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 10815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13868:439:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 10774,
                  "id": 10816,
                  "nodeType": "Return",
                  "src": "13855:452:48"
                }
              ]
            },
            "documentation": {
              "id": 10764,
              "nodeType": "StructuredDocumentation",
              "src": "13422:227:48",
              "text": " @notice Hash Mint Data\n         To hash the nft metadata\n @param tokenId NFT unique ID\n @param seller Seller address\n @param nftAddress ERC721 or ERC1155 address\n @return Hash Hash of metadata"
            },
            "id": 10818,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hashTypedData",
            "nameLocation": "13661:14:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10766,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13689:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10818,
                  "src": "13681:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13681:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10768,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "13710:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10818,
                  "src": "13702:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13702:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10770,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "13730:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10818,
                  "src": "13722:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13722:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13675:69:48"
            },
            "returnParameters": {
              "id": 10774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10773,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10818,
                  "src": "13768:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10772,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13768:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13767:9:48"
            },
            "scope": 10943,
            "src": "13652:660:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10838,
              "nodeType": "Block",
              "src": "14600:79:48",
              "statements": [
                {
                  "assignments": [
                    10829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10829,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "14614:6:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10838,
                      "src": "14606:14:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10828,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14606:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10835,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10832,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10821,
                        "src": "14637:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10833,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10823,
                        "src": "14645:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 10830,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6031,
                        "src": "14623:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$6031_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 10831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5780,
                      "src": "14623:13:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 10834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14623:32:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14606:49:48"
                },
                {
                  "expression": {
                    "id": 10836,
                    "name": "signer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10829,
                    "src": "14668:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10827,
                  "id": 10837,
                  "nodeType": "Return",
                  "src": "14661:13:48"
                }
              ]
            },
            "documentation": {
              "id": 10819,
              "nodeType": "StructuredDocumentation",
              "src": "14316:186:48",
              "text": " @notice Verify Minter\n         To extract signer address from signature\n @param digest Data hash\n @param signature Signature\n @return Signer Signer address"
            },
            "id": 10839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyMinter",
            "nameLocation": "14514:13:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10821,
                  "mutability": "mutable",
                  "name": "digest",
                  "nameLocation": "14536:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10839,
                  "src": "14528:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10820,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14528:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10823,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "14557:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10839,
                  "src": "14544:22:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10822,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14544:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14527:40:48"
            },
            "returnParameters": {
              "id": 10827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10839,
                  "src": "14591:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14591:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14590:9:48"
            },
            "scope": 10943,
            "src": "14505:174:48",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10941,
              "nodeType": "Block",
              "src": "15063:763:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10851,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15077:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15077:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15099:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15091:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10853,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15091:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15091:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15077:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a205a65726f2041646472657373",
                        "id": 10858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15103:23:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa271b88c32d3234da7d07fc7f30dc88fba182c0fa298864814cf342fa288714",
                          "typeString": "literal_string \"BuyNfts: Zero Address\""
                        },
                        "value": "BuyNfts: Zero Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa271b88c32d3234da7d07fc7f30dc88fba182c0fa298864814cf342fa288714",
                          "typeString": "literal_string \"BuyNfts: Zero Address\""
                        }
                      ],
                      "id": 10850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15069:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15069:58:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10860,
                  "nodeType": "ExpressionStatement",
                  "src": "15069:58:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10862,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10843,
                            "src": "15141:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10863,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9925,
                          "src": "15141:17:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15161:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15141:21:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a20576f6e7420416363657074205a65726f205175616e74697479",
                        "id": 10866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15164:36:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f30f61fef552400ebf434d0d7eea0d1b7a24f066b0708c0e3ce136b7ec1f076",
                          "typeString": "literal_string \"BuyNfts: Wont Accept Zero Quantity\""
                        },
                        "value": "BuyNfts: Wont Accept Zero Quantity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f30f61fef552400ebf434d0d7eea0d1b7a24f066b0708c0e3ce136b7ec1f076",
                          "typeString": "literal_string \"BuyNfts: Wont Accept Zero Quantity\""
                        }
                      ],
                      "id": 10861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15133:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15133:68:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10868,
                  "nodeType": "ExpressionStatement",
                  "src": "15133:68:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10871,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10843,
                              "src": "15222:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                              }
                            },
                            "id": 10872,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9931,
                            "src": "15222:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10870,
                          "name": "_isNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10763,
                          "src": "15215:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15215:27:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a20496e76616c6964204e46542041646472657373",
                        "id": 10874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15244:30:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d60ac7755a8b00452aed6883f99d4a91e3ac129fd50a3028870f20b507a36b8",
                          "typeString": "literal_string \"BuyNfts: Invalid NFT Address\""
                        },
                        "value": "BuyNfts: Invalid NFT Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d60ac7755a8b00452aed6883f99d4a91e3ac129fd50a3028870f20b507a36b8",
                          "typeString": "literal_string \"BuyNfts: Invalid NFT Address\""
                        }
                      ],
                      "id": 10869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15207:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15207:68:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10876,
                  "nodeType": "ExpressionStatement",
                  "src": "15207:68:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10878,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15289:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15289:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 10880,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10843,
                            "src": "15303:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10881,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9929,
                          "src": "15303:15:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15289:29:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e667473203a204f776e6572204973204e6f7420416c6c6f77656420546f20427579204e667473",
                        "id": 10883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15320:44:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78f80ddbc2671690a6507ba913241694debc57b2eb824899e3b042a8bdb29cdd",
                          "typeString": "literal_string \"BuyNfts : Owner Is Not Allowed To Buy Nfts\""
                        },
                        "value": "BuyNfts : Owner Is Not Allowed To Buy Nfts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78f80ddbc2671690a6507ba913241694debc57b2eb824899e3b042a8bdb29cdd",
                          "typeString": "literal_string \"BuyNfts : Owner Is Not Allowed To Buy Nfts\""
                        }
                      ],
                      "id": 10877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15281:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15281:84:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10885,
                  "nodeType": "ExpressionStatement",
                  "src": "15281:84:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10887,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10843,
                            "src": "15379:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10888,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9929,
                          "src": "15379:15:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15406:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15398:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10889,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15398:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15398:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15379:29:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c204e6674733a205a65726f2041646472657373",
                        "id": 10894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15410:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7406758b822a8687bbf850ced7a7db3a20f055ad5fc6908d4afbd26c4dacf812",
                          "typeString": "literal_string \"Sell Nfts: Zero Address\""
                        },
                        "value": "Sell Nfts: Zero Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7406758b822a8687bbf850ced7a7db3a20f055ad5fc6908d4afbd26c4dacf812",
                          "typeString": "literal_string \"Sell Nfts: Zero Address\""
                        }
                      ],
                      "id": 10886,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15371:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15371:65:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10896,
                  "nodeType": "ExpressionStatement",
                  "src": "15371:65:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "15450:11:48",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10898,
                            "name": "_isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10485,
                            "src": "15451:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 10899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15451:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2041646d696e2043616e6e6f7420427579204e667473",
                        "id": 10901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15463:32:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_885760e13b84a1d9b8569669da08725ccaee701f4007f864da65857d61693345",
                          "typeString": "literal_string \"BuyNfts: Admin Cannot Buy Nfts\""
                        },
                        "value": "BuyNfts: Admin Cannot Buy Nfts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_885760e13b84a1d9b8569669da08725ccaee701f4007f864da65857d61693345",
                          "typeString": "literal_string \"BuyNfts: Admin Cannot Buy Nfts\""
                        }
                      ],
                      "id": 10897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15442:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15442:54:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10903,
                  "nodeType": "ExpressionStatement",
                  "src": "15442:54:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10905,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10843,
                            "src": "15510:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10906,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9923,
                          "src": "15510:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15527:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15510:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a20576f6e7420416363657074205a65726f205072696365",
                        "id": 10909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15530:33:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2612f3887621795a8aa2d43a51ec307bae971707393304aeba72332cf413c82a",
                          "typeString": "literal_string \"BuyNfts: Wont Accept Zero Price\""
                        },
                        "value": "BuyNfts: Wont Accept Zero Price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2612f3887621795a8aa2d43a51ec307bae971707393304aeba72332cf413c82a",
                          "typeString": "literal_string \"BuyNfts: Wont Accept Zero Price\""
                        }
                      ],
                      "id": 10904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15502:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15502:62:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10911,
                  "nodeType": "ExpressionStatement",
                  "src": "15502:62:48"
                },
                {
                  "assignments": [
                    10913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10913,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "15579:6:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10941,
                      "src": "15571:14:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10912,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15571:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10925,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10916,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10843,
                              "src": "15617:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                              }
                            },
                            "id": 10917,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9921,
                            "src": "15617:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 10918,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10843,
                              "src": "15635:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                              }
                            },
                            "id": 10919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9929,
                            "src": "15635:15:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 10920,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10843,
                              "src": "15652:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                              }
                            },
                            "id": 10921,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9931,
                            "src": "15652:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10915,
                          "name": "_hashTypedData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10818,
                          "src": "15602:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$_t_bytes32_$",
                            "typeString": "function (uint256,address,address) view returns (bytes32)"
                          }
                        },
                        "id": 10922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15602:70:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10923,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10845,
                        "src": "15674:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 10914,
                      "name": "_verifyMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10839,
                      "src": "15588:13:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 10924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15588:96:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15571:113:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10928,
                              "name": "ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9984,
                              "src": "15706:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 10929,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10913,
                              "src": "15718:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10927,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "15698:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 10930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15698:27:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10932,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3812,
                              "src": "15737:18:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 10933,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10913,
                              "src": "15757:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10931,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "15729:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 10934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15729:35:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15698:66:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4654205369676e617475726520766572696669636174696f6e206661696c656421",
                        "id": 10936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15766:36:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9183a2843d187209da0ee338ff08b4db3558bce1e64c72ccd7923d89d054953d",
                          "typeString": "literal_string \"NFT Signature verification failed!\""
                        },
                        "value": "NFT Signature verification failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9183a2843d187209da0ee338ff08b4db3558bce1e64c72ccd7923d89d054953d",
                          "typeString": "literal_string \"NFT Signature verification failed!\""
                        }
                      ],
                      "id": 10926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15690:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15690:113:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10938,
                  "nodeType": "ExpressionStatement",
                  "src": "15690:113:48"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15817:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10849,
                  "id": 10940,
                  "nodeType": "Return",
                  "src": "15810:11:48"
                }
              ]
            },
            "documentation": {
              "id": 10840,
              "nodeType": "StructuredDocumentation",
              "src": "14683:276:48",
              "text": " @notice Verify NFT\n         To peerform signature verification and common validaitons\n @param metadata NFT details in metadata format\n @param signature Metadata signed by admin during NFT creation on platform\n @return boolean Verification status"
            },
            "id": 10942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyNFT",
            "nameLocation": "14971:10:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10843,
                  "mutability": "mutable",
                  "name": "metadata",
                  "nameLocation": "14998:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10942,
                  "src": "14982:24:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                  },
                  "typeName": {
                    "id": 10842,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10841,
                      "name": "Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9938,
                      "src": "14982:8:48"
                    },
                    "referencedDeclaration": 9938,
                    "src": "14982:8:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10845,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "15023:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10942,
                  "src": "15008:24:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10844,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15008:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14981:52:48"
            },
            "returnParameters": {
              "id": 10849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10848,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10942,
                  "src": "15057:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10847,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15057:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15056:6:48"
            },
            "scope": 10943,
            "src": "14962:864:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 10944,
        "src": "1528:14300:48",
        "usedErrors": []
      }
    ],
    "src": "102:15727:48"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/PrimaryFixedPriceNFTMarketPlace.sol",
    "exportedSymbols": {
      "AccessControl": [
        4104
      ],
      "AccessControlEnumerable": [
        4229
      ],
      "Address": [
        5376
      ],
      "Context": [
        5398
      ],
      "ECDSA": [
        6031
      ],
      "EIP712": [
        6185
      ],
      "ERC1155": [
        9887
      ],
      "ERC165": [
        6209
      ],
      "ERC721": [
        9906
      ],
      "EnumerableSet": [
        7132
      ],
      "IAccessControl": [
        4302
      ],
      "IAccessControlEnumerable": [
        4327
      ],
      "IERC1155": [
        4511
      ],
      "IERC165": [
        6221
      ],
      "IERC20": [
        4630
      ],
      "IERC721": [
        5063
      ],
      "PrimaryFixedPriceNFTMarketPlace": [
        10943
      ],
      "ReentrancyGuard": [
        4389
      ],
      "SafeMath": [
        6533
      ],
      "Strings": [
        5624
      ]
    },
    "id": 10944,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9845,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "102:23:48"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 9846,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 5064,
        "src": "127:58:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 9847,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 4512,
        "src": "186:60:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 9848,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 4631,
        "src": "247:56:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "id": 9849,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 4230,
        "src": "304:68:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 9850,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 4390,
        "src": "373:62:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 9851,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 6534,
        "src": "436:57:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 9852,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 5377,
        "src": "494:51:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
        "id": 9853,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10944,
        "sourceUnit": 6186,
        "src": "546:69:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ERC1155",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9854,
          "nodeType": "StructuredDocumentation",
          "src": "617:69:48",
          "text": " @notice ERC1155 interface to support custom functionalites"
        },
        "fullyImplemented": false,
        "id": 9887,
        "linearizedBaseContracts": [
          9887
        ],
        "name": "ERC1155",
        "nameLocation": "697:7:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC1155.Royalties",
            "id": 9859,
            "members": [
              {
                "constant": false,
                "id": 9856,
                "mutability": "mutable",
                "name": "account",
                "nameLocation": "748:7:48",
                "nodeType": "VariableDeclaration",
                "scope": 9859,
                "src": "732:23:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 9855,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "732:15:48",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9858,
                "mutability": "mutable",
                "name": "percentage",
                "nameLocation": "769:10:48",
                "nodeType": "VariableDeclaration",
                "scope": 9859,
                "src": "761:18:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9857,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "761:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Royalties",
            "nameLocation": "716:9:48",
            "nodeType": "StructDefinition",
            "scope": 9887,
            "src": "709:75:48",
            "visibility": "public"
          },
          {
            "functionSelector": "fc038ab3",
            "id": 9873,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "797:4:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9861,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "815:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "807:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9863,
                  "mutability": "mutable",
                  "name": "collectibleId",
                  "nameLocation": "837:13:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "829:21:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9865,
                  "mutability": "mutable",
                  "name": "ntokens",
                  "nameLocation": "864:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "856:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9867,
                  "mutability": "mutable",
                  "name": "IPFS_hash",
                  "nameLocation": "890:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "877:22:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9866,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9870,
                  "mutability": "mutable",
                  "name": "royalties",
                  "nameLocation": "924:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "905:28:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Royalties_$9859_calldata_ptr",
                    "typeString": "struct ERC1155.Royalties"
                  },
                  "typeName": {
                    "id": 9869,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9868,
                      "name": "Royalties",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9859,
                      "src": "905:9:48"
                    },
                    "referencedDeclaration": 9859,
                    "src": "905:9:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Royalties_$9859_storage_ptr",
                      "typeString": "struct ERC1155.Royalties"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:136:48"
            },
            "returnParameters": {
              "id": 9872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:48"
            },
            "scope": 9887,
            "src": "788:159:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "f242432a",
            "id": 9886,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "960:16:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9875,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "990:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "982:12:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9877,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1008:2:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "1000:10:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9879,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1024:2:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "1016:10:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9881,
                  "mutability": "mutable",
                  "name": "ntokens",
                  "nameLocation": "1040:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "1032:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9883,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1068:4:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9886,
                  "src": "1053:19:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9882,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "976:100:48"
            },
            "returnParameters": {
              "id": 9885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1085:0:48"
            },
            "scope": 9887,
            "src": "951:135:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10944,
        "src": "687:401:48",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9888,
          "nodeType": "StructuredDocumentation",
          "src": "1090:68:48",
          "text": " @notice ERC721 interface to support custom functionalites"
        },
        "fullyImplemented": false,
        "id": 9906,
        "linearizedBaseContracts": [
          9906
        ],
        "name": "ERC721",
        "nameLocation": "1169:6:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC721.Royalties",
            "id": 9893,
            "members": [
              {
                "constant": false,
                "id": 9890,
                "mutability": "mutable",
                "name": "account",
                "nameLocation": "1219:7:48",
                "nodeType": "VariableDeclaration",
                "scope": 9893,
                "src": "1203:23:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 9889,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1203:15:48",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9892,
                "mutability": "mutable",
                "name": "percentage",
                "nameLocation": "1240:10:48",
                "nodeType": "VariableDeclaration",
                "scope": 9893,
                "src": "1232:18:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9891,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1232:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Royalties",
            "nameLocation": "1187:9:48",
            "nodeType": "StructDefinition",
            "scope": 9906,
            "src": "1180:75:48",
            "visibility": "public"
          },
          {
            "functionSelector": "cc3961b0",
            "id": 9905,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1268:4:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9895,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1286:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9905,
                  "src": "1278:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9897,
                  "mutability": "mutable",
                  "name": "collectibleId",
                  "nameLocation": "1308:13:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9905,
                  "src": "1300:21:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1300:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9899,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "1341:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9905,
                  "src": "1327:22:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9898,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9902,
                  "mutability": "mutable",
                  "name": "royalties",
                  "nameLocation": "1374:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9905,
                  "src": "1355:28:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Royalties_$9893_calldata_ptr",
                    "typeString": "struct ERC721.Royalties"
                  },
                  "typeName": {
                    "id": 9901,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9900,
                      "name": "Royalties",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9893,
                      "src": "1355:9:48"
                    },
                    "referencedDeclaration": 9893,
                    "src": "1355:9:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Royalties_$9893_storage_ptr",
                      "typeString": "struct ERC721.Royalties"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1272:115:48"
            },
            "returnParameters": {
              "id": 9904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1396:0:48"
            },
            "scope": 9906,
            "src": "1259:138:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10944,
        "src": "1159:240:48",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9908,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4229,
              "src": "1572:23:48"
            },
            "id": 9909,
            "nodeType": "InheritanceSpecifier",
            "src": "1572:23:48"
          },
          {
            "baseName": {
              "id": 9910,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4389,
              "src": "1597:15:48"
            },
            "id": 9911,
            "nodeType": "InheritanceSpecifier",
            "src": "1597:15:48"
          },
          {
            "baseName": {
              "id": 9912,
              "name": "EIP712",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6185,
              "src": "1614:6:48"
            },
            "id": 9913,
            "nodeType": "InheritanceSpecifier",
            "src": "1614:6:48"
          }
        ],
        "canonicalName": "PrimaryFixedPriceNFTMarketPlace",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9907,
          "nodeType": "StructuredDocumentation",
          "src": "1401:126:48",
          "text": " @title Primary Fixed Price NFT MarketPlace\n NFT MarketPlace contract to handle primary NFT sales with fixed price"
        },
        "fullyImplemented": true,
        "id": 10943,
        "linearizedBaseContracts": [
          10943,
          6185,
          4389,
          4229,
          4104,
          6209,
          6221,
          4327,
          4302,
          5398
        ],
        "name": "PrimaryFixedPriceNFTMarketPlace",
        "nameLocation": "1537:31:48",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 9916,
            "libraryName": {
              "id": 9914,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6533,
              "src": "1631:8:48"
            },
            "nodeType": "UsingForDirective",
            "src": "1625:27:48",
            "typeName": {
              "id": 9915,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1644:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 9919,
            "libraryName": {
              "id": 9917,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5376,
              "src": "1661:7:48"
            },
            "nodeType": "UsingForDirective",
            "src": "1655:26:48",
            "typeName": {
              "id": 9918,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1673:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "canonicalName": "PrimaryFixedPriceNFTMarketPlace.Metadata",
            "id": 9938,
            "members": [
              {
                "constant": false,
                "id": 9921,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "1762:7:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1754:15:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9920,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1754:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9923,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "1783:5:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1775:13:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9922,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1775:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9925,
                "mutability": "mutable",
                "name": "quantity",
                "nameLocation": "1802:8:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1794:16:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9924,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1794:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9927,
                "mutability": "mutable",
                "name": "erc20Token",
                "nameLocation": "1824:10:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1816:18:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9926,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1816:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9929,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "1848:6:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1840:14:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9928,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1840:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9931,
                "mutability": "mutable",
                "name": "nftAddress",
                "nameLocation": "1868:10:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1860:18:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9930,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1860:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9933,
                "mutability": "mutable",
                "name": "royaltyReceiver",
                "nameLocation": "1892:15:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1884:23:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9932,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1884:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9935,
                "mutability": "mutable",
                "name": "royaltyPercentage",
                "nameLocation": "1921:17:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1913:25:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9934,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1913:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9937,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1951:8:48",
                "nodeType": "VariableDeclaration",
                "scope": 9938,
                "src": "1944:15:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9936,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1944:6:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Metadata",
            "nameLocation": "1739:8:48",
            "nodeType": "StructDefinition",
            "scope": 10943,
            "src": "1732:232:48",
            "visibility": "public"
          },
          {
            "canonicalName": "PrimaryFixedPriceNFTMarketPlace.Fee",
            "id": 9943,
            "members": [
              {
                "constant": false,
                "id": 9940,
                "mutability": "mutable",
                "name": "receiver",
                "nameLocation": "1993:8:48",
                "nodeType": "VariableDeclaration",
                "scope": 9943,
                "src": "1985:16:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9939,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1985:7:48",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9942,
                "mutability": "mutable",
                "name": "percentageValue",
                "nameLocation": "2015:15:48",
                "nodeType": "VariableDeclaration",
                "scope": 9943,
                "src": "2007:23:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9941,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2007:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Fee",
            "nameLocation": "1975:3:48",
            "nodeType": "StructDefinition",
            "scope": 10943,
            "src": "1968:67:48",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8f52f68a77e5305f8c032bbf718984be7fc7e37748db7a9fd3690c9f64a6b0c7",
            "id": 9959,
            "name": "NftSold",
            "nameLocation": "2045:7:48",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9945,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2074:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2058:23:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9947,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "2103:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2087:26:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9949,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2135:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2119:22:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2119:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9951,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2155:5:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2147:13:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9953,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "erc20Token",
                  "nameLocation": "2174:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2166:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2166:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9955,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2198:5:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2190:13:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9957,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "2217:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9959,
                  "src": "2209:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2209:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2052:177:48"
            },
            "src": "2039:191:48"
          },
          {
            "anonymous": false,
            "eventSelector": "40487f252a20d8f2b6b418aa086921caabfdfcef0fd4c378ac2c09dff3cfb70b",
            "id": 9967,
            "name": "FundTransfer",
            "nameLocation": "2240:12:48",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9962,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sellerProfit",
                  "nameLocation": "2257:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9967,
                  "src": "2253:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 9961,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9960,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "2253:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "2253:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9965,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "platformFee",
                  "nameLocation": "2275:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 9967,
                  "src": "2271:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 9964,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9963,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "2271:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "2271:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2252:35:48"
            },
            "src": "2234:54:48"
          },
          {
            "constant": false,
            "id": 9976,
            "mutability": "mutable",
            "name": "mapSale",
            "nameLocation": "2369:7:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2292:84:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
              "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata)))"
            },
            "typeName": {
              "id": 9975,
              "keyType": {
                "id": 9968,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2300:7:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2292:68:48",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata)))"
              },
              "valueType": {
                "id": 9974,
                "keyType": {
                  "id": 9969,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2319:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2311:48:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                  "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata))"
                },
                "valueType": {
                  "id": 9973,
                  "keyType": {
                    "id": 9970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2330:28:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                    "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata)"
                  },
                  "valueType": {
                    "id": 9972,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9971,
                      "name": "Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9938,
                      "src": "2349:8:48"
                    },
                    "referencedDeclaration": 9938,
                    "src": "2349:8:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                    }
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9979,
            "mutability": "mutable",
            "name": "platformFee",
            "nameLocation": "2392:11:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2380:23:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fee_$9943_storage",
              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
            },
            "typeName": {
              "id": 9978,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9977,
                "name": "Fee",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9943,
                "src": "2380:3:48"
              },
              "referencedDeclaration": 9943,
              "src": "2380:3:48",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "75b238fc",
            "id": 9984,
            "mutability": "constant",
            "name": "ADMIN_ROLE",
            "nameLocation": "2432:10:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2408:60:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9980,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2408:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "41444d494e5f524f4c45",
                  "id": 9982,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2455:12:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  },
                  "value": "ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
                    "typeString": "literal_string \"ADMIN_ROLE\""
                  }
                ],
                "id": 9981,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2445:9:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9983,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2445:23:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9987,
            "mutability": "mutable",
            "name": "ERC721InterfaceId",
            "nameLocation": "2487:17:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2472:45:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 9985,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2472:6:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783830616335386364",
              "id": 9986,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2507:10:48",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2158778573_by_1",
                "typeString": "int_const 2158778573"
              },
              "value": "0x80ac58cd"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9990,
            "mutability": "mutable",
            "name": "ERC1155InterfaceId",
            "nameLocation": "2562:18:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2547:46:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 9988,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2547:6:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30786439623637613236",
              "id": 9989,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2583:10:48",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3652614694_by_1",
                "typeString": "int_const 3652614694"
              },
              "value": "0xd9b67a26"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9991,
              "nodeType": "StructuredDocumentation",
              "src": "2625:73:48",
              "text": "@notice For signature verification of Fixed Price Typed Data"
            },
            "functionSelector": "3dd738bf",
            "id": 9996,
            "mutability": "constant",
            "name": "FIXED_PRICE_TYPEHASH",
            "nameLocation": "2725:20:48",
            "nodeType": "VariableDeclaration",
            "scope": 10943,
            "src": "2701:253:48",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9992,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2701:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "466978656450726963652875696e7432353620746f6b656e49642c75696e743235362070726963652c75696e74323536207175616e746974792c61646472657373206572633230546f6b656e2c616464726573732073656c6c65722c61646472657373206e6674416464726573732c6164647265737320726f79616c747952656365697665722c75696e7432353620726f79616c747950657263656e746167652c737472696e6720495046534861736829",
                  "id": 9994,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2769:179:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_81ca36344a4f558cd4400c00adda99aa282181fb2be3acccdcb92f502e4e1d55",
                    "typeString": "literal_string \"FixedPrice(uint256 tokenId,uint256 price,uint256 quantity,address erc20Token,address seller,address nftAddress,address royaltyReceiver,uint256 royaltyPercentage,string IPFSHash)\""
                  },
                  "value": "FixedPrice(uint256 tokenId,uint256 price,uint256 quantity,address erc20Token,address seller,address nftAddress,address royaltyReceiver,uint256 royaltyPercentage,string IPFSHash)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_81ca36344a4f558cd4400c00adda99aa282181fb2be3acccdcb92f502e4e1d55",
                    "typeString": "literal_string \"FixedPrice(uint256 tokenId,uint256 price,uint256 quantity,address erc20Token,address seller,address nftAddress,address royaltyReceiver,uint256 royaltyPercentage,string IPFSHash)\""
                  }
                ],
                "id": 9993,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2752:9:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9995,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2752:202:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10006,
              "nodeType": "Block",
              "src": "3090:60:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10000,
                          "name": "_isAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10485,
                          "src": "3104:8:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 10001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3104:10:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265737472696374656420746f206f776e6572",
                        "id": 10002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3116:21:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10032e8ce005db737e680718e0a2839e155b031b8b697283f48cf4f56cfc2ead",
                          "typeString": "literal_string \"Restricted to owner\""
                        },
                        "value": "Restricted to owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10032e8ce005db737e680718e0a2839e155b031b8b697283f48cf4f56cfc2ead",
                          "typeString": "literal_string \"Restricted to owner\""
                        }
                      ],
                      "id": 9999,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3096:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:42:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10004,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:42:48"
                },
                {
                  "id": 10005,
                  "nodeType": "PlaceholderStatement",
                  "src": "3144:1:48"
                }
              ]
            },
            "documentation": {
              "id": 9997,
              "nodeType": "StructuredDocumentation",
              "src": "2959:107:48",
              "text": " @notice modifier to check admin rights.\n contract owner and root admin have admin rights"
            },
            "id": 10007,
            "name": "onlyAdmin",
            "nameLocation": "3078:9:48",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3087:2:48"
            },
            "src": "3069:81:48",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10035,
              "nodeType": "Block",
              "src": "3490:128:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10021,
                        "name": "_platformFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10011,
                        "src": "3512:12:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      ],
                      "id": 10020,
                      "name": "_setPlatformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10505,
                      "src": "3496:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fee_$9943_memory_ptr_$returns$__$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Fee memory)"
                      }
                    },
                    "id": 10022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3496:29:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10023,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:29:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10025,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "3542:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 10026,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3562:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3562:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10024,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "3531:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 10028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3531:42:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10029,
                  "nodeType": "ExpressionStatement",
                  "src": "3531:42:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10031,
                        "name": "ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9984,
                        "src": "3590:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10032,
                        "name": "_rootAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10013,
                        "src": "3602:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10030,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "3579:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 10033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3579:34:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10034,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:34:48"
                }
              ]
            },
            "documentation": {
              "id": 10008,
              "nodeType": "StructuredDocumentation",
              "src": "3154:225:48",
              "text": " @notice Constructor\n Invokes EIP712 constructor with Domain - Used for signature verification\n @param _platformFee Fee type. Fee percentage and Receiver address\n @param _rootAdmin Root admin address"
            },
            "id": 10036,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5072696d617279466978656450726963654e46544d61726b6574506c616365",
                    "id": 10016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3446:33:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9160c7e1b2c95ce26d59f1c22ec699410675fae8886f214b7494271507523b62",
                      "typeString": "literal_string \"PrimaryFixedPriceNFTMarketPlace\""
                    },
                    "value": "PrimaryFixedPriceNFTMarketPlace"
                  },
                  {
                    "hexValue": "302e302e31",
                    "id": 10017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3481:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc199163811885",
                      "typeString": "literal_string \"0.0.1\""
                    },
                    "value": "0.0.1"
                  }
                ],
                "id": 10018,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10015,
                  "name": "EIP712",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6185,
                  "src": "3439:6:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "3439:50:48"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10011,
                  "mutability": "mutable",
                  "name": "_platformFee",
                  "nameLocation": "3405:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10036,
                  "src": "3394:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 10010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10009,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "3394:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "3394:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10013,
                  "mutability": "mutable",
                  "name": "_rootAdmin",
                  "nameLocation": "3427:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10036,
                  "src": "3419:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3393:45:48"
            },
            "returnParameters": {
              "id": 10019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3490:0:48"
            },
            "scope": 10943,
            "src": "3382:236:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10049,
              "nodeType": "Block",
              "src": "3803:40:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10046,
                        "name": "_platformFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10040,
                        "src": "3825:12:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      ],
                      "id": 10045,
                      "name": "_setPlatformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10505,
                      "src": "3809:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Fee_$9943_memory_ptr_$returns$__$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Fee memory)"
                      }
                    },
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3809:29:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10048,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:29:48"
                }
              ]
            },
            "documentation": {
              "id": 10037,
              "nodeType": "StructuredDocumentation",
              "src": "3622:113:48",
              "text": " @notice To set platform fee and fee receiver\n @param _platformFee Fee and fee receiver details"
            },
            "functionSelector": "7a614c50",
            "id": 10050,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10042,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10007,
                  "src": "3793:9:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "3793:9:48"
              }
            ],
            "name": "PlatformFee",
            "nameLocation": "3747:11:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10040,
                  "mutability": "mutable",
                  "name": "_platformFee",
                  "nameLocation": "3770:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10050,
                  "src": "3759:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 10039,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10038,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "3759:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "3759:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3758:25:48"
            },
            "returnParameters": {
              "id": 10044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3803:0:48"
            },
            "scope": 10943,
            "src": "3738:105:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10150,
              "nodeType": "Block",
              "src": "4622:675:48",
              "statements": [
                {
                  "assignments": [
                    10074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10074,
                      "mutability": "mutable",
                      "name": "NftForSale",
                      "nameLocation": "4645:10:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10150,
                      "src": "4628:27:48",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                      },
                      "typeName": {
                        "id": 10073,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10072,
                          "name": "Metadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9938,
                          "src": "4628:8:48"
                        },
                        "referencedDeclaration": 9938,
                        "src": "4628:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10082,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10075,
                          "name": "mapSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9976,
                          "src": "4658:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                            "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)))"
                          }
                        },
                        "id": 10077,
                        "indexExpression": {
                          "id": 10076,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10063,
                          "src": "4666:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4658:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref))"
                        }
                      },
                      "id": 10079,
                      "indexExpression": {
                        "id": 10078,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10053,
                        "src": "4679:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4658:30:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                        "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)"
                      }
                    },
                    "id": 10081,
                    "indexExpression": {
                      "id": 10080,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10061,
                      "src": "4689:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4658:39:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4628:69:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10083,
                        "name": "NftForSale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10074,
                        "src": "4829:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                        }
                      },
                      "id": 10084,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "quantity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9925,
                      "src": "4829:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4851:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4829:23:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Giving the ability to increase the quantity if the item is already listed\n Otherwise create a new listing",
                  "falseBody": {
                    "id": 10148,
                    "nodeType": "Block",
                    "src": "4907:386:48",
                    "statements": [
                      {
                        "expression": {
                          "id": 10098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10094,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "4915:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10096,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9921,
                            "src": "4915:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10097,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10053,
                            "src": "4936:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4915:29:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10099,
                        "nodeType": "ExpressionStatement",
                        "src": "4915:29:48"
                      },
                      {
                        "expression": {
                          "id": 10104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10100,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "4952:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10102,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9923,
                            "src": "4952:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10103,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10055,
                            "src": "4971:6:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4952:25:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10105,
                        "nodeType": "ExpressionStatement",
                        "src": "4952:25:48"
                      },
                      {
                        "expression": {
                          "id": 10110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10106,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "4985:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10108,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "quantity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9925,
                            "src": "4985:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10109,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10057,
                            "src": "5007:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4985:31:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10111,
                        "nodeType": "ExpressionStatement",
                        "src": "4985:31:48"
                      },
                      {
                        "expression": {
                          "id": 10116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10112,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5024:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10114,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "erc20Token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9927,
                            "src": "5024:21:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10115,
                            "name": "_erc20Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10059,
                            "src": "5048:11:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5024:35:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10117,
                        "nodeType": "ExpressionStatement",
                        "src": "5024:35:48"
                      },
                      {
                        "expression": {
                          "id": 10122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10118,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5067:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10120,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9929,
                            "src": "5067:17:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10121,
                            "name": "_seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10061,
                            "src": "5087:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5067:27:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10123,
                        "nodeType": "ExpressionStatement",
                        "src": "5067:27:48"
                      },
                      {
                        "expression": {
                          "id": 10128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10124,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5102:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10126,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9931,
                            "src": "5102:21:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10127,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10063,
                            "src": "5126:11:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5102:35:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10129,
                        "nodeType": "ExpressionStatement",
                        "src": "5102:35:48"
                      },
                      {
                        "expression": {
                          "id": 10134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10130,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5145:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "royaltyReceiver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9933,
                            "src": "5145:26:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10133,
                            "name": "_royaltyReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10065,
                            "src": "5174:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5145:45:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 10135,
                        "nodeType": "ExpressionStatement",
                        "src": "5145:45:48"
                      },
                      {
                        "expression": {
                          "id": 10140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10136,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5198:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10138,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "royaltyPercentage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9935,
                            "src": "5198:28:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10139,
                            "name": "_royaltyPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10067,
                            "src": "5229:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5198:49:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10141,
                        "nodeType": "ExpressionStatement",
                        "src": "5198:49:48"
                      },
                      {
                        "expression": {
                          "id": 10146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10142,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "5255:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10144,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "IPFSHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9937,
                            "src": "5255:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10145,
                            "name": "_IPFSHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10069,
                            "src": "5277:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "5255:31:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 10147,
                        "nodeType": "ExpressionStatement",
                        "src": "5255:31:48"
                      }
                    ]
                  },
                  "id": 10149,
                  "nodeType": "IfStatement",
                  "src": "4825:468:48",
                  "trueBody": {
                    "id": 10093,
                    "nodeType": "Block",
                    "src": "4854:47:48",
                    "statements": [
                      {
                        "expression": {
                          "id": 10091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 10087,
                              "name": "NftForSale",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10074,
                              "src": "4862:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                              }
                            },
                            "id": 10089,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "quantity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9925,
                            "src": "4862:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 10090,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10057,
                            "src": "4885:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4862:32:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10092,
                        "nodeType": "ExpressionStatement",
                        "src": "4862:32:48"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10051,
              "nodeType": "StructuredDocumentation",
              "src": "3847:507:48",
              "text": " @notice SetSaleDetails\n         For storing NFT details on sale\n @param _tokenId NFT unique ID\n @param _price Unit price\n @param _quantity Total number of tokens in sale\n @param _erc20Token ERC20 token address, which can be used to buy this NFT\n @param _seller Seller address\n @param _nftAddress ERC721 or ERC1155 address\n @param _royaltyReceiver Royalty receiver address\n @param _royaltyPercentage Royalty percentage\n @param _IPFSHash IPFS Hash of NFT"
            },
            "id": 10151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSaleDetails",
            "nameLocation": "4366:15:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10053,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4395:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4387:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4387:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10055,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4417:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4409:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4409:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10057,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "4437:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4429:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10059,
                  "mutability": "mutable",
                  "name": "_erc20Token",
                  "nameLocation": "4460:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4452:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4452:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10061,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "4485:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4477:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4477:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10063,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "4506:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4498:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4498:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10065,
                  "mutability": "mutable",
                  "name": "_royaltyReceiver",
                  "nameLocation": "4531:16:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4523:24:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4523:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10067,
                  "mutability": "mutable",
                  "name": "_royaltyPercentage",
                  "nameLocation": "4561:18:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4553:26:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4553:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10069,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "4599:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10151,
                  "src": "4585:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10068,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4585:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4381:231:48"
            },
            "returnParameters": {
              "id": 10071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4622:0:48"
            },
            "scope": 10943,
            "src": "4357:940:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10278,
              "nodeType": "Block",
              "src": "5745:1062:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10165,
                          "name": "_purchasingQuantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10157,
                          "src": "5759:19:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5781:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5759:23:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2043616e277420427579205a65726f204e465473",
                        "id": 10168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5784:30:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94",
                          "typeString": "literal_string \"BuyNfts: Can't Buy Zero NFTs\""
                        },
                        "value": "BuyNfts: Can't Buy Zero NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94",
                          "typeString": "literal_string \"BuyNfts: Can't Buy Zero NFTs\""
                        }
                      ],
                      "id": 10164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5751:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5751:64:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10170,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:64:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10172,
                          "name": "_purchasingQuantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10157,
                          "src": "5829:19:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 10173,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10155,
                            "src": "5852:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10174,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9925,
                          "src": "5852:18:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5829:41:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2045786365656473206d6178207175616e74697479",
                        "id": 10176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5872:31:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083",
                          "typeString": "literal_string \"BuyNfts: Exceeds max quantity\""
                        },
                        "value": "BuyNfts: Exceeds max quantity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083",
                          "typeString": "literal_string \"BuyNfts: Exceeds max quantity\""
                        }
                      ],
                      "id": 10171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5821:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5821:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10178,
                  "nodeType": "ExpressionStatement",
                  "src": "5821:83:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10180,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "5934:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9921,
                        "src": "5934:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10182,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "5959:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10183,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "5959:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10184,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "5982:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9925,
                        "src": "5982:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10186,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6008:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10187,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9927,
                        "src": "6008:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10188,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6036:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9929,
                        "src": "6036:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10190,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6060:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10191,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9931,
                        "src": "6060:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10192,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6088:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10193,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyReceiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9933,
                        "src": "6088:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10194,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6121:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10195,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyPercentage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9935,
                        "src": "6121:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10196,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6156:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10197,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IPFSHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9937,
                        "src": "6156:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 10179,
                      "name": "_setSaleDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10151,
                      "src": "5911:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,address,address,address,uint256,string memory)"
                      }
                    },
                    "id": 10198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5911:269:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10199,
                  "nodeType": "ExpressionStatement",
                  "src": "5911:269:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10201,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10155,
                        "src": "6198:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        }
                      },
                      {
                        "id": 10202,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10159,
                        "src": "6209:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 10200,
                      "name": "_verifyNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10942,
                      "src": "6187:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Metadata_$9938_memory_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Metadata memory,bytes calldata) view returns (bool)"
                      }
                    },
                    "id": 10203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6187:33:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10204,
                  "nodeType": "ExpressionStatement",
                  "src": "6187:33:48"
                },
                {
                  "assignments": [
                    10206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10206,
                      "mutability": "mutable",
                      "name": "buyAmount",
                      "nameLocation": "6235:9:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10278,
                      "src": "6227:17:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6227:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10212,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10210,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10157,
                        "src": "6267:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10207,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6247:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10208,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "6247:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6427,
                      "src": "6247:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6247:40:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6227:60:48"
                },
                {
                  "assignments": [
                    10214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10214,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nameLocation": "6301:5:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10278,
                      "src": "6293:13:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10213,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6293:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10217,
                  "initialValue": {
                    "expression": {
                      "id": 10215,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6309:3:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 10216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6309:10:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6293:26:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10218,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10155,
                        "src": "6330:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        }
                      },
                      "id": 10219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc20Token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9927,
                      "src": "6330:20:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 10222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6362:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 10221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6354:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6354:7:48",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6354:10:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6330:34:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10264,
                    "nodeType": "Block",
                    "src": "6485:206:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 10240,
                                    "name": "buyer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10214,
                                    "src": "6540:5:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 10243,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "6555:4:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_PrimaryFixedPriceNFTMarketPlace_$10943",
                                          "typeString": "contract PrimaryFixedPriceNFTMarketPlace"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_PrimaryFixedPriceNFTMarketPlace_$10943",
                                          "typeString": "contract PrimaryFixedPriceNFTMarketPlace"
                                        }
                                      ],
                                      "id": 10242,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6547:7:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 10241,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6547:7:48",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6547:13:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 10236,
                                          "name": "_metadata",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10155,
                                          "src": "6508:9:48",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                                          }
                                        },
                                        "id": 10237,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "erc20Token",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9927,
                                        "src": "6508:20:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 10235,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4630,
                                      "src": "6501:6:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$4630_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 10238,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6501:28:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$4630",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 10239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4607,
                                  "src": "6501:38:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 10245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6501:60:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 10246,
                                "name": "buyAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10206,
                                "src": "6565:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6501:73:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4275794e6674733a204c65737320616c6c6f77616e6365",
                              "id": 10248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6576:25:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9039ff3629dfc047e7c378a0927995387665464bb6450471a1ac3dad4e66b6b5",
                                "typeString": "literal_string \"BuyNfts: Less allowance\""
                              },
                              "value": "BuyNfts: Less allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9039ff3629dfc047e7c378a0927995387665464bb6450471a1ac3dad4e66b6b5",
                                "typeString": "literal_string \"BuyNfts: Less allowance\""
                              }
                            ],
                            "id": 10234,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6493:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6493:109:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10250,
                        "nodeType": "ExpressionStatement",
                        "src": "6493:109:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10256,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10214,
                              "src": "6652:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 10259,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6667:4:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PrimaryFixedPriceNFTMarketPlace_$10943",
                                    "typeString": "contract PrimaryFixedPriceNFTMarketPlace"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PrimaryFixedPriceNFTMarketPlace_$10943",
                                    "typeString": "contract PrimaryFixedPriceNFTMarketPlace"
                                  }
                                ],
                                "id": 10258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6659:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10257,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6659:7:48",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6659:13:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10261,
                              "name": "buyAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10206,
                              "src": "6674:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 10252,
                                    "name": "_metadata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10155,
                                    "src": "6617:9:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                                    }
                                  },
                                  "id": 10253,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "erc20Token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9927,
                                  "src": "6617:20:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10251,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4630,
                                "src": "6610:6:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$4630_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6610:28:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4630",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4629,
                            "src": "6610:41:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 10262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6610:74:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10263,
                        "nodeType": "ExpressionStatement",
                        "src": "6610:74:48"
                      }
                    ]
                  },
                  "id": 10265,
                  "nodeType": "IfStatement",
                  "src": "6326:365:48",
                  "trueBody": {
                    "id": 10233,
                    "nodeType": "Block",
                    "src": "6366:113:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 10226,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "6382:3:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 10227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6382:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 10228,
                                "name": "buyAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10206,
                                "src": "6395:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6382:22:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4275794e6674733a20496e73756666696369656e742066756e64",
                              "id": 10230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6406:28:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32bc38a528a1742431d1db4a30d337d8ee9bb9ef55ca3ee87b0f7837d96439c0",
                                "typeString": "literal_string \"BuyNfts: Insufficient fund\""
                              },
                              "value": "BuyNfts: Insufficient fund"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_32bc38a528a1742431d1db4a30d337d8ee9bb9ef55ca3ee87b0f7837d96439c0",
                                "typeString": "literal_string \"BuyNfts: Insufficient fund\""
                              }
                            ],
                            "id": 10225,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6374:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6374:61:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10232,
                        "nodeType": "ExpressionStatement",
                        "src": "6374:61:48"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10267,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6705:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10268,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9921,
                        "src": "6705:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10269,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6724:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9931,
                        "src": "6724:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10271,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10155,
                          "src": "6746:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10272,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9929,
                        "src": "6746:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10273,
                        "name": "buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10206,
                        "src": "6764:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10274,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10214,
                        "src": "6775:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10275,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10157,
                        "src": "6782:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10266,
                      "name": "_NftSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10729,
                      "src": "6696:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 10276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6696:106:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10277,
                  "nodeType": "ExpressionStatement",
                  "src": "6696:106:48"
                }
              ]
            },
            "documentation": {
              "id": 10152,
              "nodeType": "StructuredDocumentation",
              "src": "5301:298:48",
              "text": " @notice buyNft\n         For buying NFT using native coin or ERC20 tokens.\n @param _metadata Details of NFT in Metadata format\n @param _purchasingQuantity Purchasing amount of tokens\n @param _signature Metadata signature signed by admin during NFT creation on platform"
            },
            "functionSelector": "43fad86e",
            "id": 10279,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10162,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10161,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4388,
                  "src": "5732:12:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "5732:12:48"
              }
            ],
            "name": "buyNft",
            "nameLocation": "5611:6:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10155,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "5639:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "5623:25:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                  },
                  "typeName": {
                    "id": 10154,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10153,
                      "name": "Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9938,
                      "src": "5623:8:48"
                    },
                    "referencedDeclaration": 9938,
                    "src": "5623:8:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10157,
                  "mutability": "mutable",
                  "name": "_purchasingQuantity",
                  "nameLocation": "5662:19:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "5654:27:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5654:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10159,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5702:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "5687:25:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10158,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5687:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5617:99:48"
            },
            "returnParameters": {
              "id": 10163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5745:0:48"
            },
            "scope": 10943,
            "src": "5602:1205:48",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10361,
              "nodeType": "Block",
              "src": "7672:688:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10297,
                          "name": "_purchasingQuantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10285,
                          "src": "7686:19:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7708:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7686:23:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2043616e277420427579205a65726f204e465473",
                        "id": 10300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7711:30:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94",
                          "typeString": "literal_string \"BuyNfts: Can't Buy Zero NFTs\""
                        },
                        "value": "BuyNfts: Can't Buy Zero NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e7dd16909c5901de8f0c2d2862040527f9db97399380de1e3c019f41239ca94",
                          "typeString": "literal_string \"BuyNfts: Can't Buy Zero NFTs\""
                        }
                      ],
                      "id": 10296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7678:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7678:64:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10302,
                  "nodeType": "ExpressionStatement",
                  "src": "7678:64:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10304,
                          "name": "_purchasingQuantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10285,
                          "src": "7756:19:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 10305,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10283,
                            "src": "7779:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9925,
                          "src": "7779:18:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7756:41:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2045786365656473206d6178207175616e74697479",
                        "id": 10308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7799:31:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083",
                          "typeString": "literal_string \"BuyNfts: Exceeds max quantity\""
                        },
                        "value": "BuyNfts: Exceeds max quantity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68858336c013819b021d389a521781bb4896eac3e5425bd8b13a7181662aa083",
                          "typeString": "literal_string \"BuyNfts: Exceeds max quantity\""
                        }
                      ],
                      "id": 10303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7748:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7748:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10310,
                  "nodeType": "ExpressionStatement",
                  "src": "7748:83:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10312,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7861:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10313,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9921,
                        "src": "7861:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10314,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7886:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10315,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "7886:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10316,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7909:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10317,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9925,
                        "src": "7909:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10318,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7935:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10319,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9927,
                        "src": "7935:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10320,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7963:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10321,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9929,
                        "src": "7963:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10322,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "7987:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10323,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9931,
                        "src": "7987:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10324,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8015:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10325,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyReceiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9933,
                        "src": "8015:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10326,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8048:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyPercentage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9935,
                        "src": "8048:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10328,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8083:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10329,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IPFSHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9937,
                        "src": "8083:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 10311,
                      "name": "_setSaleDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10151,
                      "src": "7838:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,address,address,address,uint256,string memory)"
                      }
                    },
                    "id": 10330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:269:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10331,
                  "nodeType": "ExpressionStatement",
                  "src": "7838:269:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10333,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10283,
                        "src": "8125:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        }
                      },
                      {
                        "id": 10334,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10287,
                        "src": "8136:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 10332,
                      "name": "_verifyNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10942,
                      "src": "8114:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Metadata_$9938_memory_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Metadata memory,bytes calldata) view returns (bool)"
                      }
                    },
                    "id": 10335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8114:33:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10336,
                  "nodeType": "ExpressionStatement",
                  "src": "8114:33:48"
                },
                {
                  "assignments": [
                    10338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10338,
                      "mutability": "mutable",
                      "name": "buyAmount",
                      "nameLocation": "8162:9:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10361,
                      "src": "8154:17:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8154:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10344,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10342,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10285,
                        "src": "8194:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 10339,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8174:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "8174:15:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6427,
                      "src": "8174:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8174:40:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8154:60:48"
                },
                {
                  "assignments": [
                    10346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10346,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nameLocation": "8228:5:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10361,
                      "src": "8220:13:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10345,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8220:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10348,
                  "initialValue": {
                    "id": 10347,
                    "name": "_buyer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10289,
                    "src": "8236:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8220:22:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10350,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8258:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10351,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9921,
                        "src": "8258:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10352,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8277:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10353,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9931,
                        "src": "8277:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10354,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10283,
                          "src": "8299:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                          }
                        },
                        "id": 10355,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9929,
                        "src": "8299:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10356,
                        "name": "buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10338,
                        "src": "8317:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10357,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10346,
                        "src": "8328:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10358,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10285,
                        "src": "8335:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10349,
                      "name": "_NftSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10729,
                      "src": "8249:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 10359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8249:106:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10360,
                  "nodeType": "ExpressionStatement",
                  "src": "8249:106:48"
                }
              ]
            },
            "documentation": {
              "id": 10280,
              "nodeType": "StructuredDocumentation",
              "src": "6811:679:48",
              "text": " @notice This function can only be called by the admin account\n The fiat payment will be converted into to crypto via on-ramp and transferred to the contract for\n administering the payment split and token transfer on-chain\n IMPORTANT: It should only be called after the right amount of crypto/token should received in the contract\n The transfer should be confirmed off chain before calling this function\n @param _metadata Details of NFT in Metadata format\n @param _purchasingQuantity Purchasing amount of tokens\n @param _signature Metadata signature signed by admin during NFT creation on platform\n @param _buyer NFT receiver address"
            },
            "functionSelector": "7e71cdba",
            "id": 10362,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10292,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10291,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10007,
                  "src": "7649:9:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "7649:9:48"
              },
              {
                "id": 10294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10293,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4388,
                  "src": "7659:12:48"
                },
                "nodeType": "ModifierInvocation",
                "src": "7659:12:48"
              }
            ],
            "name": "fiatPurchase",
            "nameLocation": "7502:12:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10283,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "7536:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "7520:25:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                  },
                  "typeName": {
                    "id": 10282,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10281,
                      "name": "Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9938,
                      "src": "7520:8:48"
                    },
                    "referencedDeclaration": 9938,
                    "src": "7520:8:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10285,
                  "mutability": "mutable",
                  "name": "_purchasingQuantity",
                  "nameLocation": "7559:19:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "7551:27:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7551:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10287,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "7599:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "7584:25:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10286,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7584:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10289,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "7623:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10362,
                  "src": "7615:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7615:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7514:119:48"
            },
            "returnParameters": {
              "id": 10295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7672:0:48"
            },
            "scope": 10943,
            "src": "7493:867:48",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10448,
              "nodeType": "Block",
              "src": "8978:543:48",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 10384,
                        "name": "ERC721InterfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9987,
                        "src": "9027:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10381,
                            "name": "_nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10367,
                            "src": "8996:11:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10380,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5063,
                          "src": "8988:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5063_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 10382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8988:20:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5063",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 10383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6220,
                      "src": "8988:38:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 10385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8988:57:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 10415,
                          "name": "ERC1155InterfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9990,
                          "src": "9286:18:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 10412,
                              "name": "_nftAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10367,
                              "src": "9255:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10411,
                            "name": "IERC1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4511,
                            "src": "9246:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC1155_$4511_$",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 10413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9246:21:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$4511",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 10414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6220,
                        "src": "9246:39:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view external returns (bool)"
                        }
                      },
                      "id": 10416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9246:59:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 10446,
                    "nodeType": "IfStatement",
                    "src": "9242:275:48",
                    "trueBody": {
                      "id": 10445,
                      "nodeType": "Block",
                      "src": "9307:210:48",
                      "statements": [
                        {
                          "assignments": [
                            10421
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 10421,
                              "mutability": "mutable",
                              "name": "royalties",
                              "nameLocation": "9340:9:48",
                              "nodeType": "VariableDeclaration",
                              "scope": 10445,
                              "src": "9315:34:48",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Royalties_$9859_memory_ptr",
                                "typeString": "struct ERC1155.Royalties"
                              },
                              "typeName": {
                                "id": 10420,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 10419,
                                  "name": "ERC1155.Royalties",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 9859,
                                  "src": "9315:17:48"
                                },
                                "referencedDeclaration": 9859,
                                "src": "9315:17:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Royalties_$9859_storage_ptr",
                                  "typeString": "struct ERC1155.Royalties"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 10430,
                          "initialValue": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10426,
                                    "name": "_royaltyReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10373,
                                    "src": "9378:16:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9370:8:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 10424,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9370:8:48",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9370:25:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 10428,
                                "name": "_royaltyPercentage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10375,
                                "src": "9397:18:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 10422,
                                "name": "ERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9887,
                                "src": "9352:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC1155_$9887_$",
                                  "typeString": "type(contract ERC1155)"
                                }
                              },
                              "id": 10423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Royalties",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9859,
                              "src": "9352:17:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Royalties_$9859_storage_ptr_$",
                                "typeString": "type(struct ERC1155.Royalties storage pointer)"
                              }
                            },
                            "id": 10429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9352:64:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Royalties_$9859_memory_ptr",
                              "typeString": "struct ERC1155.Royalties memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9315:101:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 10435,
                                "name": "_receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10365,
                                "src": "9450:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10436,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10369,
                                "src": "9461:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 10437,
                                "name": "_quantity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10371,
                                "src": "9471:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 10440,
                                    "name": "_ipfsHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10377,
                                    "src": "9488:9:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 10439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9482:5:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 10438,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9482:5:48",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9482:16:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 10442,
                                "name": "royalties",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10421,
                                "src": "9500:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Royalties_$9859_memory_ptr",
                                  "typeString": "struct ERC1155.Royalties memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Royalties_$9859_memory_ptr",
                                  "typeString": "struct ERC1155.Royalties memory"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10432,
                                    "name": "_nftAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10367,
                                    "src": "9432:11:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10431,
                                  "name": "ERC1155",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9887,
                                  "src": "9424:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$9887_$",
                                    "typeString": "type(contract ERC1155)"
                                  }
                                },
                                "id": 10433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9424:20:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC1155_$9887",
                                  "typeString": "contract ERC1155"
                                }
                              },
                              "id": 10434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9873,
                              "src": "9424:25:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_struct$_Royalties_$9859_memory_ptr_$returns$__$",
                                "typeString": "function (address,uint256,uint256,bytes memory,struct ERC1155.Royalties memory) external"
                              }
                            },
                            "id": 10443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9424:86:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10444,
                          "nodeType": "ExpressionStatement",
                          "src": "9424:86:48"
                        }
                      ]
                    }
                  },
                  "id": 10447,
                  "nodeType": "IfStatement",
                  "src": "8984:533:48",
                  "trueBody": {
                    "id": 10410,
                    "nodeType": "Block",
                    "src": "9047:189:48",
                    "statements": [
                      {
                        "assignments": [
                          10390
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10390,
                            "mutability": "mutable",
                            "name": "royalties",
                            "nameLocation": "9079:9:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 10410,
                            "src": "9055:33:48",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Royalties_$9893_memory_ptr",
                              "typeString": "struct ERC721.Royalties"
                            },
                            "typeName": {
                              "id": 10389,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 10388,
                                "name": "ERC721.Royalties",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9893,
                                "src": "9055:16:48"
                              },
                              "referencedDeclaration": 9893,
                              "src": "9055:16:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Royalties_$9893_storage_ptr",
                                "typeString": "struct ERC721.Royalties"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10399,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 10395,
                                  "name": "_royaltyReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10373,
                                  "src": "9116:16:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9108:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 10393,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9108:8:48",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9108:25:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 10397,
                              "name": "_royaltyPercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10375,
                              "src": "9135:18:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10391,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9906,
                              "src": "9091:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$9906_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 10392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Royalties",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9893,
                            "src": "9091:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Royalties_$9893_storage_ptr_$",
                              "typeString": "type(struct ERC721.Royalties storage pointer)"
                            }
                          },
                          "id": 10398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9091:63:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Royalties_$9893_memory_ptr",
                            "typeString": "struct ERC721.Royalties memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9055:99:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10404,
                              "name": "_receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10365,
                              "src": "9187:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10405,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10369,
                              "src": "9198:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10406,
                              "name": "_ipfsHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10377,
                              "src": "9208:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 10407,
                              "name": "royalties",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10390,
                              "src": "9219:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Royalties_$9893_memory_ptr",
                                "typeString": "struct ERC721.Royalties memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_Royalties_$9893_memory_ptr",
                                "typeString": "struct ERC721.Royalties memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10401,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10367,
                                  "src": "9169:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10400,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9906,
                                "src": "9162:6:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$9906_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 10402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9162:19:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$9906",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 10403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9905,
                            "src": "9162:24:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_struct$_Royalties_$9893_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,string memory,struct ERC721.Royalties memory) external"
                            }
                          },
                          "id": 10408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9162:67:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10409,
                        "nodeType": "ExpressionStatement",
                        "src": "9162:67:48"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10363,
              "nodeType": "StructuredDocumentation",
              "src": "8364:396:48",
              "text": " @notice Mint NFT\n         Calling ERC20 or ERC1155 Mint function\n @param _receiver NFT Receiver\n @param _nftAddress ERC721 or ERC1155 address\n @param _tokenId NFT unique ID\n @param _quantity Purchasing amount of tokens\n @param _royaltyReceiver Royalty receiver address\n @param _royaltyPercentage Royalty percentage\n @param _ipfsHash IPFS Hash of NFT"
            },
            "id": 10449,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintNFT",
            "nameLocation": "8772:8:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10365,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "8794:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8786:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8786:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10367,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "8817:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8809:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8809:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10369,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8842:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8834:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8834:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10371,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "8864:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8856:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8856:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10373,
                  "mutability": "mutable",
                  "name": "_royaltyReceiver",
                  "nameLocation": "8887:16:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8879:24:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8879:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10375,
                  "mutability": "mutable",
                  "name": "_royaltyPercentage",
                  "nameLocation": "8917:18:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8909:26:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8909:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10377,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nameLocation": "8955:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10449,
                  "src": "8941:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10376,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8941:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8780:188:48"
            },
            "returnParameters": {
              "id": 10379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8978:0:48"
            },
            "scope": 10943,
            "src": "8763:758:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4145
            ],
            "body": {
              "id": 10464,
              "nodeType": "Block",
              "src": "9815:54:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10461,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10452,
                        "src": "9852:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 10459,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "9828:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PrimaryFixedPriceNFTMarketPlace_$10943_$",
                          "typeString": "type(contract super PrimaryFixedPriceNFTMarketPlace)"
                        }
                      },
                      "id": 10460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4145,
                      "src": "9828:23:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 10462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9828:36:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10458,
                  "id": 10463,
                  "nodeType": "Return",
                  "src": "9821:43:48"
                }
              ]
            },
            "documentation": {
              "id": 10450,
              "nodeType": "StructuredDocumentation",
              "src": "9525:179:48",
              "text": " @notice Supports Interface\n         Function to check wether the contract support specific interface\n @param interfaceId Interface type\n @return boolean"
            },
            "functionSelector": "01ffc9a7",
            "id": 10465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "9716:17:48",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10455,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 10454,
                  "name": "AccessControlEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4229,
                  "src": "9775:23:48"
                }
              ],
              "src": "9766:33:48"
            },
            "parameters": {
              "id": 10453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10452,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "9741:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10465,
                  "src": "9734:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10451,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "9734:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9733:20:48"
            },
            "returnParameters": {
              "id": 10458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10465,
                  "src": "9809:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10456,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9809:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9808:6:48"
            },
            "scope": 10943,
            "src": "9707:162:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10484,
              "nodeType": "Block",
              "src": "10040:98:48",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10472,
                              "name": "ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9984,
                              "src": "10062:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 10473,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5388,
                                "src": "10074:10:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 10474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10074:12:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10471,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "10054:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 10475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10054:33:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10477,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3812,
                              "src": "10099:18:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 10478,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5388,
                                "src": "10119:10:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 10479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10119:12:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10476,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "10091:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 10480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10091:41:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10054:78:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 10482,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10053:80:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10470,
                  "id": 10483,
                  "nodeType": "Return",
                  "src": "10046:87:48"
                }
              ]
            },
            "documentation": {
              "id": 10466,
              "nodeType": "StructuredDocumentation",
              "src": "9873:115:48",
              "text": " @notice Is Admin\n         Checks if the msg.sender has admin roles assigned\n @return boolean"
            },
            "id": 10485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAdmin",
            "nameLocation": "10000:8:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10008:2:48"
            },
            "returnParameters": {
              "id": 10470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10485,
                  "src": "10034:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10468,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10034:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10033:6:48"
            },
            "scope": 10943,
            "src": "9991:147:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10504,
              "nodeType": "Block",
              "src": "10360:126:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10493,
                            "name": "_platformFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10489,
                            "src": "10374:12:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                            }
                          },
                          "id": 10494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "percentageValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9942,
                          "src": "10374:28:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "35303030",
                          "id": 10495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10406:4:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5000_by_1",
                            "typeString": "int_const 5000"
                          },
                          "value": "5000"
                        },
                        "src": "10374:36:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4665653a206d617820616c6c6f776564207065726563656e74616765206973203530",
                        "id": 10497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10412:36:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_712c8bde25a5526dd8d8d797eba631a3fbc2b43878da80d60a478dc1d0627030",
                          "typeString": "literal_string \"Fee: max allowed perecentage is 50\""
                        },
                        "value": "Fee: max allowed perecentage is 50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_712c8bde25a5526dd8d8d797eba631a3fbc2b43878da80d60a478dc1d0627030",
                          "typeString": "literal_string \"Fee: max allowed perecentage is 50\""
                        }
                      ],
                      "id": 10492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10366:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10366:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10499,
                  "nodeType": "ExpressionStatement",
                  "src": "10366:83:48"
                },
                {
                  "expression": {
                    "id": 10502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10500,
                      "name": "platformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9979,
                      "src": "10455:11:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$9943_storage",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10501,
                      "name": "_platformFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10489,
                      "src": "10469:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                      }
                    },
                    "src": "10455:26:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                    }
                  },
                  "id": 10503,
                  "nodeType": "ExpressionStatement",
                  "src": "10455:26:48"
                }
              ]
            },
            "documentation": {
              "id": 10486,
              "nodeType": "StructuredDocumentation",
              "src": "10142:156:48",
              "text": " @notice PlatformFee\n         Internal function to set platform fee and fee receiver\n @param _platformFee Fee and fee receiver details"
            },
            "id": 10505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setPlatformFee",
            "nameLocation": "10310:15:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10489,
                  "mutability": "mutable",
                  "name": "_platformFee",
                  "nameLocation": "10337:12:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10505,
                  "src": "10326:23:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                  },
                  "typeName": {
                    "id": 10488,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10487,
                      "name": "Fee",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9943,
                      "src": "10326:3:48"
                    },
                    "referencedDeclaration": 9943,
                    "src": "10326:3:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fee_$9943_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10325:25:48"
            },
            "returnParameters": {
              "id": 10491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10360:0:48"
            },
            "scope": 10943,
            "src": "10301:185:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10644,
              "nodeType": "Block",
              "src": "10761:1033:48",
              "statements": [
                {
                  "assignments": [
                    10516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10516,
                      "mutability": "mutable",
                      "name": "sellerProfit",
                      "nameLocation": "10775:12:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10644,
                      "src": "10767:20:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10767:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10517,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10767:20:48"
                },
                {
                  "assignments": [
                    10519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10519,
                      "mutability": "mutable",
                      "name": "platformProfit",
                      "nameLocation": "10801:14:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10644,
                      "src": "10793:22:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10518,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10793:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10520,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10793:22:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10521,
                        "name": "platformFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9979,
                        "src": "10826:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_storage",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                        }
                      },
                      "id": 10522,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "percentageValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9942,
                      "src": "10826:27:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10856:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10826:31:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10537,
                  "nodeType": "IfStatement",
                  "src": "10822:119:48",
                  "trueBody": {
                    "id": 10536,
                    "nodeType": "Block",
                    "src": "10859:82:48",
                    "statements": [
                      {
                        "expression": {
                          "id": 10534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10525,
                            "name": "platformProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10519,
                            "src": "10867:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "3130303030",
                                "id": 10532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10928:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 10528,
                                      "name": "platformFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9979,
                                      "src": "10895:11:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                      }
                                    },
                                    "id": 10529,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "percentageValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9942,
                                    "src": "10895:27:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10526,
                                    "name": "_price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10508,
                                    "src": "10884:6:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 10527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6427,
                                  "src": "10884:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 10530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10884:39:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6442,
                              "src": "10884:43:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 10533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10884:50:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10867:67:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10535,
                        "nodeType": "ExpressionStatement",
                        "src": "10867:67:48"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10538,
                      "name": "sellerProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10516,
                      "src": "10946:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10541,
                          "name": "platformProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10519,
                          "src": "10972:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10539,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10508,
                          "src": "10961:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6412,
                        "src": "10961:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10961:26:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10946:41:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10544,
                  "nodeType": "ExpressionStatement",
                  "src": "10946:41:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10545,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10510,
                      "src": "10998:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 10548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11019:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 10547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11011:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11011:7:48",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11011:10:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10998:23:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10630,
                    "nodeType": "Block",
                    "src": "11480:216:48",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 10606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 10600,
                                "name": "platformFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9979,
                                "src": "11492:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                  "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                }
                              },
                              "id": 10601,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "receiver",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9940,
                              "src": "11492:20:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 10604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11524:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 10603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11516:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10602,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11516:7:48",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11516:10:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11492:34:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10607,
                              "name": "platformProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10519,
                              "src": "11530:14:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 10608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11547:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11530:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11492:56:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10621,
                        "nodeType": "IfStatement",
                        "src": "11488:145:48",
                        "trueBody": {
                          "id": 10620,
                          "nodeType": "Block",
                          "src": "11550:83:48",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 10615,
                                      "name": "platformFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9979,
                                      "src": "11587:11:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                      }
                                    },
                                    "id": 10616,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "receiver",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 9940,
                                    "src": "11587:20:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 10617,
                                    "name": "platformProfit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10519,
                                    "src": "11609:14:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 10612,
                                        "name": "_currency",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10510,
                                        "src": "11567:9:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 10611,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4630,
                                      "src": "11560:6:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$4630_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 10613,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11560:17:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$4630",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 10614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4597,
                                  "src": "11560:26:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 10618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11560:64:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 10619,
                              "nodeType": "ExpressionStatement",
                              "src": "11560:64:48"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10626,
                              "name": "_seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10512,
                              "src": "11667:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10627,
                              "name": "sellerProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10516,
                              "src": "11676:12:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10623,
                                  "name": "_currency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10510,
                                  "src": "11647:9:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10622,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4630,
                                "src": "11640:6:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$4630_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 10624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11640:17:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4630",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4597,
                            "src": "11640:26:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 10628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11640:49:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10629,
                        "nodeType": "ExpressionStatement",
                        "src": "11640:49:48"
                      }
                    ]
                  },
                  "id": 10631,
                  "nodeType": "IfStatement",
                  "src": "10994:702:48",
                  "trueBody": {
                    "id": 10599,
                    "nodeType": "Block",
                    "src": "11023:451:48",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 10557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 10551,
                                "name": "platformFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9979,
                                "src": "11035:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                  "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                }
                              },
                              "id": 10552,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "receiver",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9940,
                              "src": "11035:20:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 10555,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11067:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 10554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11059:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10553,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11059:7:48",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11059:10:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11035:34:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10558,
                              "name": "platformProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10519,
                              "src": "11073:14:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 10559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11090:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11073:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11035:56:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10581,
                        "nodeType": "IfStatement",
                        "src": "11031:276:48",
                        "trueBody": {
                          "id": 10580,
                          "nodeType": "Block",
                          "src": "11093:214:48",
                          "statements": [
                            {
                              "assignments": [
                                10563,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 10563,
                                  "mutability": "mutable",
                                  "name": "isPlatformFeeTransferSuccess",
                                  "nameLocation": "11109:28:48",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 10580,
                                  "src": "11104:33:48",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 10562,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11104:4:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 10574,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 10572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11203:2:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 10566,
                                            "name": "platformFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9979,
                                            "src": "11151:11:48",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                                            }
                                          },
                                          "id": 10567,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "receiver",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 9940,
                                          "src": "11151:20:48",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 10565,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11143:8:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_payable_$",
                                          "typeString": "type(address payable)"
                                        },
                                        "typeName": {
                                          "id": 10564,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11143:8:48",
                                          "stateMutability": "payable",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 10568,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11143:29:48",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 10569,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "11143:34:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 10571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 10570,
                                      "name": "platformProfit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10519,
                                      "src": "11186:14:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "11143:59:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 10573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11143:63:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11103:103:48"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10576,
                                    "name": "isPlatformFeeTransferSuccess",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10563,
                                    "src": "11224:28:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5472616e7366657220746f20706c6174666f726d20666565207265636569766572206661696c65642e",
                                    "id": 10577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11254:43:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_27bf476ffb9cb11b7dd1e159b6058af2ed090c8bdb984a4b0e17d04844ed51cc",
                                      "typeString": "literal_string \"Transfer to platform fee receiver failed.\""
                                    },
                                    "value": "Transfer to platform fee receiver failed."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_27bf476ffb9cb11b7dd1e159b6058af2ed090c8bdb984a4b0e17d04844ed51cc",
                                      "typeString": "literal_string \"Transfer to platform fee receiver failed.\""
                                    }
                                  ],
                                  "id": 10575,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "11216:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 10578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11216:82:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 10579,
                              "nodeType": "ExpressionStatement",
                              "src": "11216:82:48"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          10583,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10583,
                            "mutability": "mutable",
                            "name": "isSellerTransferSuccess",
                            "nameLocation": "11320:23:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 10599,
                            "src": "11315:28:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 10582,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "11315:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 10593,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 10591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11394:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 10586,
                                    "name": "_seller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10512,
                                    "src": "11357:7:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10585,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11349:8:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 10584,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11349:8:48",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11349:16:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 10588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "11349:21:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 10590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 10589,
                                "name": "sellerProfit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10516,
                                "src": "11379:12:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "11349:44:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 10592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11349:48:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11314:83:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10595,
                              "name": "isSellerTransferSuccess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10583,
                              "src": "11413:23:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e7366657220746f2073656c6c6572206661696c65642e",
                              "id": 10596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11438:28:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7551da239d0b71316f7c4694a6e46074b76966ce6e035c3e477215f7cdbbe220",
                                "typeString": "literal_string \"Transfer to seller failed.\""
                              },
                              "value": "Transfer to seller failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7551da239d0b71316f7c4694a6e46074b76966ce6e035c3e477215f7cdbbe220",
                                "typeString": "literal_string \"Transfer to seller failed.\""
                              }
                            ],
                            "id": 10594,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "11405:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11405:62:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10598,
                        "nodeType": "ExpressionStatement",
                        "src": "11405:62:48"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10634,
                            "name": "_seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10512,
                            "src": "11723:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10635,
                            "name": "sellerProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10516,
                            "src": "11732:12:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10633,
                          "name": "Fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9943,
                          "src": "11719:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Fee_$9943_storage_ptr_$",
                            "typeString": "type(struct PrimaryFixedPriceNFTMarketPlace.Fee storage pointer)"
                          }
                        },
                        "id": 10636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11719:26:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10638,
                              "name": "platformFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9979,
                              "src": "11751:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fee_$9943_storage",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee storage ref"
                              }
                            },
                            "id": 10639,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9940,
                            "src": "11751:20:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10640,
                            "name": "platformProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10519,
                            "src": "11773:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10637,
                          "name": "Fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9943,
                          "src": "11747:3:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Fee_$9943_storage_ptr_$",
                            "typeString": "type(struct PrimaryFixedPriceNFTMarketPlace.Fee storage pointer)"
                          }
                        },
                        "id": 10641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11747:41:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Fee_$9943_memory_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Fee memory"
                        }
                      ],
                      "id": 10632,
                      "name": "FundTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9967,
                      "src": "11706:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Fee_$9943_memory_ptr_$_t_struct$_Fee_$9943_memory_ptr_$returns$__$",
                        "typeString": "function (struct PrimaryFixedPriceNFTMarketPlace.Fee memory,struct PrimaryFixedPriceNFTMarketPlace.Fee memory)"
                      }
                    },
                    "id": 10642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11706:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10643,
                  "nodeType": "EmitStatement",
                  "src": "11701:88:48"
                }
              ]
            },
            "documentation": {
              "id": 10506,
              "nodeType": "StructuredDocumentation",
              "src": "10490:174:48",
              "text": " @notice Pay Out\n         To debit fees during NFT purchase\n @param _price Fee\n @param _currency Type of currency\n @param _seller Seller address"
            },
            "id": 10645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOut",
            "nameLocation": "10676:7:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10508,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "10697:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10645,
                  "src": "10689:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10689:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10510,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "10717:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10645,
                  "src": "10709:17:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10709:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10512,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "10740:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10645,
                  "src": "10732:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10732:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10683:68:48"
            },
            "returnParameters": {
              "id": 10514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10761:0:48"
            },
            "scope": 10943,
            "src": "10667:1127:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10728,
              "nodeType": "Block",
              "src": "12299:678:48",
              "statements": [
                {
                  "assignments": [
                    10663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10663,
                      "mutability": "mutable",
                      "name": "nftOnSaleStorage",
                      "nameLocation": "12322:16:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10728,
                      "src": "12305:33:48",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                      },
                      "typeName": {
                        "id": 10662,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10661,
                          "name": "Metadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9938,
                          "src": "12305:8:48"
                        },
                        "referencedDeclaration": 9938,
                        "src": "12305:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10671,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10664,
                          "name": "mapSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9976,
                          "src": "12341:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                            "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)))"
                          }
                        },
                        "id": 10666,
                        "indexExpression": {
                          "id": 10665,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10650,
                          "src": "12349:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12341:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref))"
                        }
                      },
                      "id": 10668,
                      "indexExpression": {
                        "id": 10667,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10648,
                        "src": "12362:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12341:30:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                        "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)"
                      }
                    },
                    "id": 10670,
                    "indexExpression": {
                      "id": 10669,
                      "name": "_seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10652,
                      "src": "12372:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12341:39:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12305:75:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10673,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10656,
                        "src": "12403:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10674,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10650,
                        "src": "12417:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10675,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10648,
                        "src": "12436:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10676,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "12452:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10677,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12479:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10678,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyReceiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9933,
                        "src": "12479:32:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10679,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12519:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10680,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "royaltyPercentage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9935,
                        "src": "12519:34:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10681,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12561:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "IPFSHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9937,
                        "src": "12561:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 10672,
                      "name": "_mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10449,
                      "src": "12387:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,address,uint256,string memory)"
                      }
                    },
                    "id": 10683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12387:205:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10684,
                  "nodeType": "ExpressionStatement",
                  "src": "12387:205:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10686,
                        "name": "_buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10654,
                        "src": "12606:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10687,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12618:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10688,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9927,
                        "src": "12618:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10689,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10652,
                        "src": "12647:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10685,
                      "name": "_payOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10645,
                      "src": "12598:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 10690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12598:57:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10691,
                  "nodeType": "ExpressionStatement",
                  "src": "12598:57:48"
                },
                {
                  "expression": {
                    "id": 10699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10692,
                        "name": "nftOnSaleStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "12662:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                        }
                      },
                      "id": 10694,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "quantity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9925,
                      "src": "12662:25:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10695,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12690:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10696,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "quantity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9925,
                        "src": "12690:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 10697,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "12718:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12690:47:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12662:75:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10700,
                  "nodeType": "ExpressionStatement",
                  "src": "12662:75:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10701,
                        "name": "nftOnSaleStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10663,
                        "src": "12748:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                        }
                      },
                      "id": 10702,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "quantity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9925,
                      "src": "12748:25:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12777:1:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12748:30:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10715,
                  "nodeType": "IfStatement",
                  "src": "12744:97:48",
                  "trueBody": {
                    "id": 10714,
                    "nodeType": "Block",
                    "src": "12780:61:48",
                    "statements": [
                      {
                        "expression": {
                          "id": 10712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "12788:46:48",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 10705,
                                  "name": "mapSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9976,
                                  "src": "12795:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)))"
                                  }
                                },
                                "id": 10707,
                                "indexExpression": {
                                  "id": 10706,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10650,
                                  "src": "12803:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12795:20:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref))"
                                }
                              },
                              "id": 10709,
                              "indexExpression": {
                                "id": 10708,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10648,
                                "src": "12816:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12795:30:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                                "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)"
                              }
                            },
                            "id": 10711,
                            "indexExpression": {
                              "id": 10710,
                              "name": "_seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10652,
                              "src": "12826:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12795:39:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_storage",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10713,
                        "nodeType": "ExpressionStatement",
                        "src": "12788:46:48"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10717,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10648,
                        "src": "12859:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10718,
                        "name": "_nftAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10650,
                        "src": "12869:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10719,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10652,
                        "src": "12882:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10720,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12891:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10721,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9923,
                        "src": "12891:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10722,
                          "name": "nftOnSaleStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "12915:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                          }
                        },
                        "id": 10723,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc20Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9927,
                        "src": "12915:27:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10724,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10656,
                        "src": "12944:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10725,
                        "name": "_purchasingQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10658,
                        "src": "12952:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10716,
                      "name": "NftSold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9959,
                      "src": "12851:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 10726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12851:121:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10727,
                  "nodeType": "EmitStatement",
                  "src": "12846:126:48"
                }
              ]
            },
            "documentation": {
              "id": 10646,
              "nodeType": "StructuredDocumentation",
              "src": "11798:322:48",
              "text": " @notice NFT Sale\n         To handle mint and payout\n @param _tokenId NFT unique ID\n @param _nftAddress ERC721 or ERC1155 address\n @param _seller Seller address\n @param _buyAmount Total amount\n @param _buyer Receiver address\n @param _purchasingQuantity Purchasing amount of tokens"
            },
            "id": 10729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_NftSale",
            "nameLocation": "12132:8:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10648,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "12154:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12146:16:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12146:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10650,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "12176:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12168:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12168:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10652,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "12201:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12193:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12193:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10654,
                  "mutability": "mutable",
                  "name": "_buyAmount",
                  "nameLocation": "12222:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12214:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12214:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10656,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "12246:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12238:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12238:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10658,
                  "mutability": "mutable",
                  "name": "_purchasingQuantity",
                  "nameLocation": "12266:19:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10729,
                  "src": "12258:27:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12258:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12140:149:48"
            },
            "returnParameters": {
              "id": 10660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12299:0:48"
            },
            "scope": 10943,
            "src": "12123:854:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10762,
              "nodeType": "Block",
              "src": "13215:203:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10738,
                          "name": "_nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10732,
                          "src": "13229:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13252:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13244:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10739,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13244:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13244:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13229:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "69734e46543a205a65726f2041646472657373",
                        "id": 10744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13256:21:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c96d5fea898c152e4c149cec6c4894771bf6d21beb569ae431fa06be2aa1783",
                          "typeString": "literal_string \"isNFT: Zero Address\""
                        },
                        "value": "isNFT: Zero Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c96d5fea898c152e4c149cec6c4894771bf6d21beb569ae431fa06be2aa1783",
                          "typeString": "literal_string \"isNFT: Zero Address\""
                        }
                      ],
                      "id": 10737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13221:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13221:57:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10746,
                  "nodeType": "ExpressionStatement",
                  "src": "13221:57:48"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10751,
                              "name": "ERC721InterfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9987,
                              "src": "13331:17:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10748,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10732,
                                  "src": "13300:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10747,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5063,
                                "src": "13292:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5063_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 10749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13292:20:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5063",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 10750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6220,
                            "src": "13292:38:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view external returns (bool)"
                            }
                          },
                          "id": 10752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13292:57:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10757,
                              "name": "ERC1155InterfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9990,
                              "src": "13393:18:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10754,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10732,
                                  "src": "13362:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10753,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4511,
                                "src": "13353:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$4511_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 10755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13353:21:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$4511",
                                "typeString": "contract IERC1155"
                              }
                            },
                            "id": 10756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6220,
                            "src": "13353:39:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view external returns (bool)"
                            }
                          },
                          "id": 10758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13353:59:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13292:120:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 10760,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "13291:122:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10736,
                  "id": 10761,
                  "nodeType": "Return",
                  "src": "13284:129:48"
                }
              ]
            },
            "documentation": {
              "id": 10730,
              "nodeType": "StructuredDocumentation",
              "src": "12981:165:48",
              "text": " @notice Is NFT\n         Checks if the nft address specified is ERC721 or ERC1155\n @param _nftAddress NFT Contract address\n @return boolean"
            },
            "id": 10763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isNFT",
            "nameLocation": "13158:6:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10732,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "13173:11:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10763,
                  "src": "13165:19:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13165:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13164:21:48"
            },
            "returnParameters": {
              "id": 10736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10735,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10763,
                  "src": "13209:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10734,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13209:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13208:6:48"
            },
            "scope": 10943,
            "src": "13149:269:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10817,
              "nodeType": "Block",
              "src": "13777:535:48",
              "statements": [
                {
                  "assignments": [
                    10777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10777,
                      "mutability": "mutable",
                      "name": "NftForSale",
                      "nameLocation": "13800:10:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10817,
                      "src": "13783:27:48",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                        "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                      },
                      "typeName": {
                        "id": 10776,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10775,
                          "name": "Metadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9938,
                          "src": "13783:8:48"
                        },
                        "referencedDeclaration": 9938,
                        "src": "13783:8:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                          "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10785,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10778,
                          "name": "mapSale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9976,
                          "src": "13813:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$_$",
                            "typeString": "mapping(address => mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)))"
                          }
                        },
                        "id": 10780,
                        "indexExpression": {
                          "id": 10779,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10770,
                          "src": "13821:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13813:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref))"
                        }
                      },
                      "id": 10782,
                      "indexExpression": {
                        "id": 10781,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10766,
                        "src": "13833:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13813:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Metadata_$9938_storage_$",
                        "typeString": "mapping(address => struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref)"
                      }
                    },
                    "id": 10784,
                    "indexExpression": {
                      "id": 10783,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10768,
                      "src": "13842:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13813:36:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13783:66:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10790,
                                "name": "FIXED_PRICE_TYPEHASH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9996,
                                "src": "13939:20:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 10791,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10766,
                                "src": "13973:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10792,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "13994:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10793,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9923,
                                "src": "13994:16:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10794,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14024:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10795,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "quantity",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9925,
                                "src": "14024:19:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10796,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14057:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10797,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "erc20Token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9927,
                                "src": "14057:21:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10798,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14092:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10799,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "seller",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9929,
                                "src": "14092:17:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10800,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14123:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10801,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9931,
                                "src": "14123:21:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10802,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14158:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10803,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "royaltyReceiver",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9933,
                                "src": "14158:26:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 10804,
                                  "name": "NftForSale",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10777,
                                  "src": "14198:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                  }
                                },
                                "id": 10805,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "royaltyPercentage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9935,
                                "src": "14198:28:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 10809,
                                          "name": "NftForSale",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10777,
                                          "src": "14256:10:48",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                                            "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata storage pointer"
                                          }
                                        },
                                        "id": 10810,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "IPFSHash",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9937,
                                        "src": "14256:19:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "id": 10808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14250:5:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 10807,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14250:5:48",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 10811,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14250:26:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes storage pointer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes storage pointer"
                                    }
                                  ],
                                  "id": 10806,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "14240:9:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 10812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14240:37:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 10788,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "13915:3:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 10789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "13915:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 10813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13915:374:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 10787,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "13894:9:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 10814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13894:405:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 10786,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6184,
                      "src": "13868:16:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 10815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13868:439:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 10774,
                  "id": 10816,
                  "nodeType": "Return",
                  "src": "13855:452:48"
                }
              ]
            },
            "documentation": {
              "id": 10764,
              "nodeType": "StructuredDocumentation",
              "src": "13422:227:48",
              "text": " @notice Hash Mint Data\n         To hash the nft metadata\n @param tokenId NFT unique ID\n @param seller Seller address\n @param nftAddress ERC721 or ERC1155 address\n @return Hash Hash of metadata"
            },
            "id": 10818,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hashTypedData",
            "nameLocation": "13661:14:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10766,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13689:7:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10818,
                  "src": "13681:15:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13681:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10768,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "13710:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10818,
                  "src": "13702:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13702:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10770,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "13730:10:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10818,
                  "src": "13722:18:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13722:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13675:69:48"
            },
            "returnParameters": {
              "id": 10774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10773,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10818,
                  "src": "13768:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10772,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13768:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13767:9:48"
            },
            "scope": 10943,
            "src": "13652:660:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10838,
              "nodeType": "Block",
              "src": "14600:79:48",
              "statements": [
                {
                  "assignments": [
                    10829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10829,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "14614:6:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10838,
                      "src": "14606:14:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10828,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14606:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10835,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10832,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10821,
                        "src": "14637:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10833,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10823,
                        "src": "14645:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 10830,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6031,
                        "src": "14623:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$6031_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 10831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5780,
                      "src": "14623:13:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 10834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14623:32:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14606:49:48"
                },
                {
                  "expression": {
                    "id": 10836,
                    "name": "signer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10829,
                    "src": "14668:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10827,
                  "id": 10837,
                  "nodeType": "Return",
                  "src": "14661:13:48"
                }
              ]
            },
            "documentation": {
              "id": 10819,
              "nodeType": "StructuredDocumentation",
              "src": "14316:186:48",
              "text": " @notice Verify Minter\n         To extract signer address from signature\n @param digest Data hash\n @param signature Signature\n @return Signer Signer address"
            },
            "id": 10839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyMinter",
            "nameLocation": "14514:13:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10821,
                  "mutability": "mutable",
                  "name": "digest",
                  "nameLocation": "14536:6:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10839,
                  "src": "14528:14:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10820,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14528:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10823,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "14557:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10839,
                  "src": "14544:22:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10822,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14544:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14527:40:48"
            },
            "returnParameters": {
              "id": 10827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10839,
                  "src": "14591:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14591:7:48",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14590:9:48"
            },
            "scope": 10943,
            "src": "14505:174:48",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10941,
              "nodeType": "Block",
              "src": "15063:763:48",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10851,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15077:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15077:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15099:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15091:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10853,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15091:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15091:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15077:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a205a65726f2041646472657373",
                        "id": 10858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15103:23:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa271b88c32d3234da7d07fc7f30dc88fba182c0fa298864814cf342fa288714",
                          "typeString": "literal_string \"BuyNfts: Zero Address\""
                        },
                        "value": "BuyNfts: Zero Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa271b88c32d3234da7d07fc7f30dc88fba182c0fa298864814cf342fa288714",
                          "typeString": "literal_string \"BuyNfts: Zero Address\""
                        }
                      ],
                      "id": 10850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15069:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15069:58:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10860,
                  "nodeType": "ExpressionStatement",
                  "src": "15069:58:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10862,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10843,
                            "src": "15141:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10863,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "quantity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9925,
                          "src": "15141:17:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15161:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15141:21:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a20576f6e7420416363657074205a65726f205175616e74697479",
                        "id": 10866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15164:36:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f30f61fef552400ebf434d0d7eea0d1b7a24f066b0708c0e3ce136b7ec1f076",
                          "typeString": "literal_string \"BuyNfts: Wont Accept Zero Quantity\""
                        },
                        "value": "BuyNfts: Wont Accept Zero Quantity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f30f61fef552400ebf434d0d7eea0d1b7a24f066b0708c0e3ce136b7ec1f076",
                          "typeString": "literal_string \"BuyNfts: Wont Accept Zero Quantity\""
                        }
                      ],
                      "id": 10861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15133:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15133:68:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10868,
                  "nodeType": "ExpressionStatement",
                  "src": "15133:68:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10871,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10843,
                              "src": "15222:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                              }
                            },
                            "id": 10872,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9931,
                            "src": "15222:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10870,
                          "name": "_isNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10763,
                          "src": "15215:6:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15215:27:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a20496e76616c6964204e46542041646472657373",
                        "id": 10874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15244:30:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d60ac7755a8b00452aed6883f99d4a91e3ac129fd50a3028870f20b507a36b8",
                          "typeString": "literal_string \"BuyNfts: Invalid NFT Address\""
                        },
                        "value": "BuyNfts: Invalid NFT Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d60ac7755a8b00452aed6883f99d4a91e3ac129fd50a3028870f20b507a36b8",
                          "typeString": "literal_string \"BuyNfts: Invalid NFT Address\""
                        }
                      ],
                      "id": 10869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15207:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15207:68:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10876,
                  "nodeType": "ExpressionStatement",
                  "src": "15207:68:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10878,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15289:3:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15289:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 10880,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10843,
                            "src": "15303:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10881,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9929,
                          "src": "15303:15:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15289:29:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e667473203a204f776e6572204973204e6f7420416c6c6f77656420546f20427579204e667473",
                        "id": 10883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15320:44:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78f80ddbc2671690a6507ba913241694debc57b2eb824899e3b042a8bdb29cdd",
                          "typeString": "literal_string \"BuyNfts : Owner Is Not Allowed To Buy Nfts\""
                        },
                        "value": "BuyNfts : Owner Is Not Allowed To Buy Nfts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78f80ddbc2671690a6507ba913241694debc57b2eb824899e3b042a8bdb29cdd",
                          "typeString": "literal_string \"BuyNfts : Owner Is Not Allowed To Buy Nfts\""
                        }
                      ],
                      "id": 10877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15281:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15281:84:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10885,
                  "nodeType": "ExpressionStatement",
                  "src": "15281:84:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10887,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10843,
                            "src": "15379:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10888,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9929,
                          "src": "15379:15:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15406:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15398:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10889,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15398:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15398:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15379:29:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c204e6674733a205a65726f2041646472657373",
                        "id": 10894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15410:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7406758b822a8687bbf850ced7a7db3a20f055ad5fc6908d4afbd26c4dacf812",
                          "typeString": "literal_string \"Sell Nfts: Zero Address\""
                        },
                        "value": "Sell Nfts: Zero Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7406758b822a8687bbf850ced7a7db3a20f055ad5fc6908d4afbd26c4dacf812",
                          "typeString": "literal_string \"Sell Nfts: Zero Address\""
                        }
                      ],
                      "id": 10886,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15371:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15371:65:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10896,
                  "nodeType": "ExpressionStatement",
                  "src": "15371:65:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "15450:11:48",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10898,
                            "name": "_isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10485,
                            "src": "15451:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 10899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15451:10:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a2041646d696e2043616e6e6f7420427579204e667473",
                        "id": 10901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15463:32:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_885760e13b84a1d9b8569669da08725ccaee701f4007f864da65857d61693345",
                          "typeString": "literal_string \"BuyNfts: Admin Cannot Buy Nfts\""
                        },
                        "value": "BuyNfts: Admin Cannot Buy Nfts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_885760e13b84a1d9b8569669da08725ccaee701f4007f864da65857d61693345",
                          "typeString": "literal_string \"BuyNfts: Admin Cannot Buy Nfts\""
                        }
                      ],
                      "id": 10897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15442:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15442:54:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10903,
                  "nodeType": "ExpressionStatement",
                  "src": "15442:54:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10905,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10843,
                            "src": "15510:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                              "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                            }
                          },
                          "id": 10906,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9923,
                          "src": "15510:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15527:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15510:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275794e6674733a20576f6e7420416363657074205a65726f205072696365",
                        "id": 10909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15530:33:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2612f3887621795a8aa2d43a51ec307bae971707393304aeba72332cf413c82a",
                          "typeString": "literal_string \"BuyNfts: Wont Accept Zero Price\""
                        },
                        "value": "BuyNfts: Wont Accept Zero Price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2612f3887621795a8aa2d43a51ec307bae971707393304aeba72332cf413c82a",
                          "typeString": "literal_string \"BuyNfts: Wont Accept Zero Price\""
                        }
                      ],
                      "id": 10904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15502:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15502:62:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10911,
                  "nodeType": "ExpressionStatement",
                  "src": "15502:62:48"
                },
                {
                  "assignments": [
                    10913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10913,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "15579:6:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 10941,
                      "src": "15571:14:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10912,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15571:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10925,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10916,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10843,
                              "src": "15617:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                              }
                            },
                            "id": 10917,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9921,
                            "src": "15617:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 10918,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10843,
                              "src": "15635:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                              }
                            },
                            "id": 10919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9929,
                            "src": "15635:15:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 10920,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10843,
                              "src": "15652:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                                "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata memory"
                              }
                            },
                            "id": 10921,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9931,
                            "src": "15652:19:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10915,
                          "name": "_hashTypedData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10818,
                          "src": "15602:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$_t_bytes32_$",
                            "typeString": "function (uint256,address,address) view returns (bytes32)"
                          }
                        },
                        "id": 10922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15602:70:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10923,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10845,
                        "src": "15674:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 10914,
                      "name": "_verifyMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10839,
                      "src": "15588:13:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 10924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15588:96:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15571:113:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10928,
                              "name": "ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9984,
                              "src": "15706:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 10929,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10913,
                              "src": "15718:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10927,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "15698:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 10930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15698:27:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10932,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3812,
                              "src": "15737:18:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 10933,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10913,
                              "src": "15757:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10931,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "15729:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 10934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15729:35:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15698:66:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4654205369676e617475726520766572696669636174696f6e206661696c656421",
                        "id": 10936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15766:36:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9183a2843d187209da0ee338ff08b4db3558bce1e64c72ccd7923d89d054953d",
                          "typeString": "literal_string \"NFT Signature verification failed!\""
                        },
                        "value": "NFT Signature verification failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9183a2843d187209da0ee338ff08b4db3558bce1e64c72ccd7923d89d054953d",
                          "typeString": "literal_string \"NFT Signature verification failed!\""
                        }
                      ],
                      "id": 10926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15690:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15690:113:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10938,
                  "nodeType": "ExpressionStatement",
                  "src": "15690:113:48"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15817:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10849,
                  "id": 10940,
                  "nodeType": "Return",
                  "src": "15810:11:48"
                }
              ]
            },
            "documentation": {
              "id": 10840,
              "nodeType": "StructuredDocumentation",
              "src": "14683:276:48",
              "text": " @notice Verify NFT\n         To peerform signature verification and common validaitons\n @param metadata NFT details in metadata format\n @param signature Metadata signed by admin during NFT creation on platform\n @return boolean Verification status"
            },
            "id": 10942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyNFT",
            "nameLocation": "14971:10:48",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10843,
                  "mutability": "mutable",
                  "name": "metadata",
                  "nameLocation": "14998:8:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10942,
                  "src": "14982:24:48",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$9938_memory_ptr",
                    "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                  },
                  "typeName": {
                    "id": 10842,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10841,
                      "name": "Metadata",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9938,
                      "src": "14982:8:48"
                    },
                    "referencedDeclaration": 9938,
                    "src": "14982:8:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$9938_storage_ptr",
                      "typeString": "struct PrimaryFixedPriceNFTMarketPlace.Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10845,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "15023:9:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 10942,
                  "src": "15008:24:48",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10844,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15008:5:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14981:52:48"
            },
            "returnParameters": {
              "id": 10849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10848,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10942,
                  "src": "15057:4:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10847,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15057:4:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15056:6:48"
            },
            "scope": 10943,
            "src": "14962:864:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 10944,
        "src": "1528:14300:48",
        "usedErrors": []
      }
    ],
    "src": "102:15727:48"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-09-15T11:28:42.673Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "PlatformFee((address,uint256))": {
        "params": {
          "_platformFee": "Fee and fee receiver details"
        }
      },
      "buyNft((uint256,uint256,uint256,address,address,address,address,uint256,string),uint256,bytes)": {
        "params": {
          "_metadata": "Details of NFT in Metadata format",
          "_purchasingQuantity": "Purchasing amount of tokens",
          "_signature": "Metadata signature signed by admin during NFT creation on platform"
        }
      },
      "constructor": {
        "params": {
          "_platformFee": "Fee type. Fee percentage and Receiver address",
          "_rootAdmin": "Root admin address"
        }
      },
      "fiatPurchase((uint256,uint256,uint256,address,address,address,address,uint256,string),uint256,bytes,address)": {
        "params": {
          "_buyer": "NFT receiver address",
          "_metadata": "Details of NFT in Metadata format",
          "_purchasingQuantity": "Purchasing amount of tokens",
          "_signature": "Metadata signature signed by admin during NFT creation on platform"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "params": {
          "interfaceId": "Interface type"
        },
        "returns": {
          "_0": "boolean"
        }
      }
    },
    "title": "Primary Fixed Price NFT MarketPlace NFT MarketPlace contract to handle primary NFT sales with fixed price",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "FIXED_PRICE_TYPEHASH()": {
        "notice": "For signature verification of Fixed Price Typed Data"
      },
      "PlatformFee((address,uint256))": {
        "notice": "To set platform fee and fee receiver"
      },
      "buyNft((uint256,uint256,uint256,address,address,address,address,uint256,string),uint256,bytes)": {
        "notice": "buyNft         For buying NFT using native coin or ERC20 tokens."
      },
      "constructor": {
        "notice": "Constructor Invokes EIP712 constructor with Domain - Used for signature verification"
      },
      "fiatPurchase((uint256,uint256,uint256,address,address,address,address,uint256,string),uint256,bytes,address)": {
        "notice": "This function can only be called by the admin account The fiat payment will be converted into to crypto via on-ramp and transferred to the contract for administering the payment split and token transfer on-chain IMPORTANT: It should only be called after the right amount of crypto/token should received in the contract The transfer should be confirmed off chain before calling this function"
      },
      "supportsInterface(bytes4)": {
        "notice": "Supports Interface         Function to check wether the contract support specific interface"
      }
    },
    "version": 1
  }
}